{"ast":null,"code":"'use strict';\n\nconst promisify = require('promisify-es6');\nconst CID = require('cids');\nconst {\n  DAGNode\n} = require('ipld-dag-pb');\nconst SendOneFile = require('../utils/send-one-file');\nconst once = require('once');\nmodule.exports = send => {\n  const sendOneFile = SendOneFile(send, 'object/put');\n  return promisify((obj, options, _callback) => {\n    if (typeof options === 'function') {\n      _callback = options;\n      options = {};\n    }\n    const callback = once(_callback);\n    if (!options) {\n      options = {};\n    }\n    let tmpObj = {\n      Data: null,\n      Links: []\n    };\n    if (Buffer.isBuffer(obj)) {\n      if (!options.enc) {\n        tmpObj = {\n          Data: obj.toString(),\n          Links: []\n        };\n      }\n    } else if (DAGNode.isDAGNode(obj)) {\n      tmpObj = {\n        Data: obj.Data.toString(),\n        Links: obj.Links.map(l => ({\n          Name: l.Name,\n          Hash: l.Hash.toString(),\n          Size: l.Tsize\n        }))\n      };\n    } else if (typeof obj === 'object') {\n      tmpObj.Data = obj.Data.toString();\n      tmpObj.Links = obj.Links;\n    } else {\n      return callback(new Error('obj not recognized'));\n    }\n    let buf;\n    if (Buffer.isBuffer(obj) && options.enc) {\n      buf = obj;\n    } else {\n      buf = Buffer.from(JSON.stringify(tmpObj));\n    }\n    const enc = options.enc || 'json';\n    const sendOptions = {\n      qs: {\n        inputenc: enc\n      }\n    };\n    sendOneFile(buf, sendOptions, (err, result) => {\n      if (err) {\n        return callback(err); // early\n      }\n\n      callback(null, new CID(result.Hash));\n    });\n  });\n};","map":{"version":3,"names":["promisify","require","CID","DAGNode","SendOneFile","once","module","exports","send","sendOneFile","obj","options","_callback","callback","tmpObj","Data","Links","Buffer","isBuffer","enc","toString","isDAGNode","map","l","Name","Hash","Size","Tsize","Error","buf","from","JSON","stringify","sendOptions","qs","inputenc","err","result"],"sources":["C:/blockchain/Victus-health-assistant-main/Victus-health-assistant-main/node_modules/ipfs-http-client/src/object/put.js"],"sourcesContent":["'use strict'\n\nconst promisify = require('promisify-es6')\nconst CID = require('cids')\nconst { DAGNode } = require('ipld-dag-pb')\n\nconst SendOneFile = require('../utils/send-one-file')\nconst once = require('once')\n\nmodule.exports = (send) => {\n  const sendOneFile = SendOneFile(send, 'object/put')\n\n  return promisify((obj, options, _callback) => {\n    if (typeof options === 'function') {\n      _callback = options\n      options = {}\n    }\n\n    const callback = once(_callback)\n\n    if (!options) {\n      options = {}\n    }\n\n    let tmpObj = {\n      Data: null,\n      Links: []\n    }\n\n    if (Buffer.isBuffer(obj)) {\n      if (!options.enc) {\n        tmpObj = {\n          Data: obj.toString(),\n          Links: []\n        }\n      }\n    } else if (DAGNode.isDAGNode(obj)) {\n      tmpObj = {\n        Data: obj.Data.toString(),\n        Links: obj.Links.map(l => ({\n          Name: l.Name,\n          Hash: l.Hash.toString(),\n          Size: l.Tsize\n        }))\n      }\n    } else if (typeof obj === 'object') {\n      tmpObj.Data = obj.Data.toString()\n      tmpObj.Links = obj.Links\n    } else {\n      return callback(new Error('obj not recognized'))\n    }\n\n    let buf\n    if (Buffer.isBuffer(obj) && options.enc) {\n      buf = obj\n    } else {\n      buf = Buffer.from(JSON.stringify(tmpObj))\n    }\n    const enc = options.enc || 'json'\n\n    const sendOptions = {\n      qs: { inputenc: enc }\n    }\n\n    sendOneFile(buf, sendOptions, (err, result) => {\n      if (err) {\n        return callback(err) // early\n      }\n\n      callback(null, new CID(result.Hash))\n    })\n  })\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,SAAS,GAAGC,OAAO,CAAC,eAAe,CAAC;AAC1C,MAAMC,GAAG,GAAGD,OAAO,CAAC,MAAM,CAAC;AAC3B,MAAM;EAAEE;AAAQ,CAAC,GAAGF,OAAO,CAAC,aAAa,CAAC;AAE1C,MAAMG,WAAW,GAAGH,OAAO,CAAC,wBAAwB,CAAC;AACrD,MAAMI,IAAI,GAAGJ,OAAO,CAAC,MAAM,CAAC;AAE5BK,MAAM,CAACC,OAAO,GAAIC,IAAI,IAAK;EACzB,MAAMC,WAAW,GAAGL,WAAW,CAACI,IAAI,EAAE,YAAY,CAAC;EAEnD,OAAOR,SAAS,CAAC,CAACU,GAAG,EAAEC,OAAO,EAAEC,SAAS,KAAK;IAC5C,IAAI,OAAOD,OAAO,KAAK,UAAU,EAAE;MACjCC,SAAS,GAAGD,OAAO;MACnBA,OAAO,GAAG,CAAC,CAAC;IACd;IAEA,MAAME,QAAQ,GAAGR,IAAI,CAACO,SAAS,CAAC;IAEhC,IAAI,CAACD,OAAO,EAAE;MACZA,OAAO,GAAG,CAAC,CAAC;IACd;IAEA,IAAIG,MAAM,GAAG;MACXC,IAAI,EAAE,IAAI;MACVC,KAAK,EAAE;IACT,CAAC;IAED,IAAIC,MAAM,CAACC,QAAQ,CAACR,GAAG,CAAC,EAAE;MACxB,IAAI,CAACC,OAAO,CAACQ,GAAG,EAAE;QAChBL,MAAM,GAAG;UACPC,IAAI,EAAEL,GAAG,CAACU,QAAQ,CAAC,CAAC;UACpBJ,KAAK,EAAE;QACT,CAAC;MACH;IACF,CAAC,MAAM,IAAIb,OAAO,CAACkB,SAAS,CAACX,GAAG,CAAC,EAAE;MACjCI,MAAM,GAAG;QACPC,IAAI,EAAEL,GAAG,CAACK,IAAI,CAACK,QAAQ,CAAC,CAAC;QACzBJ,KAAK,EAAEN,GAAG,CAACM,KAAK,CAACM,GAAG,CAACC,CAAC,KAAK;UACzBC,IAAI,EAAED,CAAC,CAACC,IAAI;UACZC,IAAI,EAAEF,CAAC,CAACE,IAAI,CAACL,QAAQ,CAAC,CAAC;UACvBM,IAAI,EAAEH,CAAC,CAACI;QACV,CAAC,CAAC;MACJ,CAAC;IACH,CAAC,MAAM,IAAI,OAAOjB,GAAG,KAAK,QAAQ,EAAE;MAClCI,MAAM,CAACC,IAAI,GAAGL,GAAG,CAACK,IAAI,CAACK,QAAQ,CAAC,CAAC;MACjCN,MAAM,CAACE,KAAK,GAAGN,GAAG,CAACM,KAAK;IAC1B,CAAC,MAAM;MACL,OAAOH,QAAQ,CAAC,IAAIe,KAAK,CAAC,oBAAoB,CAAC,CAAC;IAClD;IAEA,IAAIC,GAAG;IACP,IAAIZ,MAAM,CAACC,QAAQ,CAACR,GAAG,CAAC,IAAIC,OAAO,CAACQ,GAAG,EAAE;MACvCU,GAAG,GAAGnB,GAAG;IACX,CAAC,MAAM;MACLmB,GAAG,GAAGZ,MAAM,CAACa,IAAI,CAACC,IAAI,CAACC,SAAS,CAAClB,MAAM,CAAC,CAAC;IAC3C;IACA,MAAMK,GAAG,GAAGR,OAAO,CAACQ,GAAG,IAAI,MAAM;IAEjC,MAAMc,WAAW,GAAG;MAClBC,EAAE,EAAE;QAAEC,QAAQ,EAAEhB;MAAI;IACtB,CAAC;IAEDV,WAAW,CAACoB,GAAG,EAAEI,WAAW,EAAE,CAACG,GAAG,EAAEC,MAAM,KAAK;MAC7C,IAAID,GAAG,EAAE;QACP,OAAOvB,QAAQ,CAACuB,GAAG,CAAC,EAAC;MACvB;;MAEAvB,QAAQ,CAAC,IAAI,EAAE,IAAIX,GAAG,CAACmC,MAAM,CAACZ,IAAI,CAAC,CAAC;IACtC,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"script"}