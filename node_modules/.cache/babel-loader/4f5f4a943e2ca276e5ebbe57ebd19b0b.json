{"ast":null,"code":"'use strict';\n\nvar Buffer = require('safe-buffer').Buffer;\nvar BN = require('./bn');\nvar ECJPoint = require('./ecjpoint');\nfunction ECPoint(x, y) {\n  if (x === null && y === null) {\n    this.x = this.y = null;\n    this.inf = true;\n  } else {\n    this.x = x;\n    this.y = y;\n    this.inf = false;\n  }\n}\nECPoint.fromPublicKey = function (publicKey) {\n  var first = publicKey[0];\n  var x;\n  var y;\n  if (publicKey.length === 33 && (first === 0x02 || first === 0x03)) {\n    x = BN.fromBuffer(publicKey.slice(1, 33));\n\n    // overflow\n    if (x.ucmp(BN.p) >= 0) return null;\n\n    // create from X\n    y = x.redSqr().redMul(x).redIAdd7().redSqrt();\n    if (y === null) return null;\n    if (first === 0x03 !== y.isOdd()) y = y.redNeg();\n    return new ECPoint(x, y);\n  }\n  if (publicKey.length === 65 && (first === 0x04 || first === 0x06 || first === 0x07)) {\n    x = BN.fromBuffer(publicKey.slice(1, 33));\n    y = BN.fromBuffer(publicKey.slice(33, 65));\n\n    // overflow\n    if (x.ucmp(BN.p) >= 0 || y.ucmp(BN.p) >= 0) return null;\n\n    // is odd flag\n    if ((first === 0x06 || first === 0x07) && y.isOdd() !== (first === 0x07)) return null;\n\n    // x*x*x + 7 = y*y\n    if (x.redSqr().redMul(x).redIAdd7().ucmp(y.redSqr()) !== 0) return null;\n    return new ECPoint(x, y);\n  }\n  return null;\n};\nECPoint.prototype.toPublicKey = function (compressed) {\n  var x = this.x;\n  var y = this.y;\n  var publicKey;\n  if (compressed) {\n    publicKey = Buffer.alloc(33);\n    publicKey[0] = y.isOdd() ? 0x03 : 0x02;\n    x.toBuffer().copy(publicKey, 1);\n  } else {\n    publicKey = Buffer.alloc(65);\n    publicKey[0] = 0x04;\n    x.toBuffer().copy(publicKey, 1);\n    y.toBuffer().copy(publicKey, 33);\n  }\n  return publicKey;\n};\nECPoint.fromECJPoint = function (p) {\n  if (p.inf) return new ECPoint(null, null);\n  var zinv = p.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = p.x.redMul(zinv2);\n  var ay = p.y.redMul(zinv2).redMul(zinv);\n  return new ECPoint(ax, ay);\n};\nECPoint.prototype.toECJPoint = function () {\n  if (this.inf) return new ECJPoint(null, null, null);\n  return new ECJPoint(this.x, this.y, ECJPoint.one);\n};\nECPoint.prototype.neg = function () {\n  if (this.inf) return this;\n  return new ECPoint(this.x, this.y.redNeg());\n};\nECPoint.prototype.add = function (p) {\n  // O + P = P\n  if (this.inf) return p;\n\n  // P + O = P\n  if (p.inf) return this;\n  if (this.x.ucmp(p.x) === 0) {\n    // P + P = 2P\n    if (this.y.ucmp(p.y) === 0) return this.dbl();\n    // P + (-P) = O\n    return new ECPoint(null, null);\n  }\n\n  // s = (y - yp) / (x - xp)\n  // nx = s^2 - x - xp\n  // ny = s * (x - nx) - y\n  var s = this.y.redSub(p.y);\n  if (!s.isZero()) s = s.redMul(this.x.redSub(p.x).redInvm());\n  var nx = s.redSqr().redISub(this.x).redISub(p.x);\n  var ny = s.redMul(this.x.redSub(nx)).redISub(this.y);\n  return new ECPoint(nx, ny);\n};\nECPoint.prototype.dbl = function () {\n  if (this.inf) return this;\n\n  // 2P = O\n  var yy = this.y.redAdd(this.y);\n  if (yy.isZero()) return new ECPoint(null, null);\n\n  // s = (3 * x^2) / (2 * y)\n  // nx = s^2 - 2*x\n  // ny = s * (x - nx) - y\n  var x2 = this.x.redSqr();\n  var s = x2.redAdd(x2).redIAdd(x2).redMul(yy.redInvm());\n  var nx = s.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = s.redMul(this.x.redSub(nx)).redISub(this.y);\n  return new ECPoint(nx, ny);\n};\nECPoint.prototype.mul = function (num) {\n  // Algorithm 3.36 Window NAF method for point multiplication\n  var nafPoints = this._getNAFPoints(4);\n  var points = nafPoints.points;\n\n  // Get NAF form\n  var naf = num.getNAF(nafPoints.wnd);\n\n  // Add `this`*(N+1) for every w-NAF index\n  var acc = new ECJPoint(null, null, null);\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var k = 0; i >= 0 && naf[i] === 0; i--, ++k);\n    if (i >= 0) k += 1;\n    acc = acc.dblp(k);\n    if (i < 0) break;\n\n    // J +- P\n    var z = naf[i];\n    if (z > 0) {\n      acc = acc.mixedAdd(points[z - 1 >> 1]);\n    } else {\n      acc = acc.mixedAdd(points[-z - 1 >> 1].neg());\n    }\n  }\n  return ECPoint.fromECJPoint(acc);\n};\nECPoint.prototype._getNAFPoints1 = function () {\n  return {\n    wnd: 1,\n    points: [this]\n  };\n};\nECPoint.prototype._getNAFPoints = function (wnd) {\n  var points = new Array((1 << wnd) - 1);\n  points[0] = this;\n  var dbl = this.dbl();\n  for (var i = 1; i < points.length; ++i) points[i] = points[i - 1].add(dbl);\n  return {\n    wnd: wnd,\n    points: points\n  };\n};\nmodule.exports = ECPoint;","map":{"version":3,"names":["Buffer","require","BN","ECJPoint","ECPoint","x","y","inf","fromPublicKey","publicKey","first","length","fromBuffer","slice","ucmp","p","redSqr","redMul","redIAdd7","redSqrt","isOdd","redNeg","prototype","toPublicKey","compressed","alloc","toBuffer","copy","fromECJPoint","zinv","z","redInvm","zinv2","ax","ay","toECJPoint","one","neg","add","dbl","s","redSub","isZero","nx","redISub","ny","yy","redAdd","x2","redIAdd","mul","num","nafPoints","_getNAFPoints","points","naf","getNAF","wnd","acc","i","k","dblp","mixedAdd","_getNAFPoints1","Array","module","exports"],"sources":["C:/blockchain/Victus-health-assistant-main/Victus-health-assistant-main/node_modules/libp2p-crypto-secp256k1/node_modules/secp256k1/lib/js/ecpoint.js"],"sourcesContent":["'use strict'\nvar Buffer = require('safe-buffer').Buffer\nvar BN = require('./bn')\nvar ECJPoint = require('./ecjpoint')\n\nfunction ECPoint (x, y) {\n  if (x === null && y === null) {\n    this.x = this.y = null\n    this.inf = true\n  } else {\n    this.x = x\n    this.y = y\n    this.inf = false\n  }\n}\n\nECPoint.fromPublicKey = function (publicKey) {\n  var first = publicKey[0]\n  var x\n  var y\n\n  if (publicKey.length === 33 && (first === 0x02 || first === 0x03)) {\n    x = BN.fromBuffer(publicKey.slice(1, 33))\n\n    // overflow\n    if (x.ucmp(BN.p) >= 0) return null\n\n    // create from X\n    y = x.redSqr().redMul(x).redIAdd7().redSqrt()\n    if (y === null) return null\n    if ((first === 0x03) !== y.isOdd()) y = y.redNeg()\n\n    return new ECPoint(x, y)\n  }\n\n  if (publicKey.length === 65 && (first === 0x04 || first === 0x06 || first === 0x07)) {\n    x = BN.fromBuffer(publicKey.slice(1, 33))\n    y = BN.fromBuffer(publicKey.slice(33, 65))\n\n    // overflow\n    if (x.ucmp(BN.p) >= 0 || y.ucmp(BN.p) >= 0) return null\n\n    // is odd flag\n    if ((first === 0x06 || first === 0x07) && y.isOdd() !== (first === 0x07)) return null\n\n    // x*x*x + 7 = y*y\n    if (x.redSqr().redMul(x).redIAdd7().ucmp(y.redSqr()) !== 0) return null\n\n    return new ECPoint(x, y)\n  }\n\n  return null\n}\n\nECPoint.prototype.toPublicKey = function (compressed) {\n  var x = this.x\n  var y = this.y\n  var publicKey\n\n  if (compressed) {\n    publicKey = Buffer.alloc(33)\n    publicKey[0] = y.isOdd() ? 0x03 : 0x02\n    x.toBuffer().copy(publicKey, 1)\n  } else {\n    publicKey = Buffer.alloc(65)\n    publicKey[0] = 0x04\n    x.toBuffer().copy(publicKey, 1)\n    y.toBuffer().copy(publicKey, 33)\n  }\n\n  return publicKey\n}\n\nECPoint.fromECJPoint = function (p) {\n  if (p.inf) return new ECPoint(null, null)\n\n  var zinv = p.z.redInvm()\n  var zinv2 = zinv.redSqr()\n  var ax = p.x.redMul(zinv2)\n  var ay = p.y.redMul(zinv2).redMul(zinv)\n\n  return new ECPoint(ax, ay)\n}\n\nECPoint.prototype.toECJPoint = function () {\n  if (this.inf) return new ECJPoint(null, null, null)\n\n  return new ECJPoint(this.x, this.y, ECJPoint.one)\n}\n\nECPoint.prototype.neg = function () {\n  if (this.inf) return this\n\n  return new ECPoint(this.x, this.y.redNeg())\n}\n\nECPoint.prototype.add = function (p) {\n  // O + P = P\n  if (this.inf) return p\n\n  // P + O = P\n  if (p.inf) return this\n\n  if (this.x.ucmp(p.x) === 0) {\n    // P + P = 2P\n    if (this.y.ucmp(p.y) === 0) return this.dbl()\n    // P + (-P) = O\n    return new ECPoint(null, null)\n  }\n\n  // s = (y - yp) / (x - xp)\n  // nx = s^2 - x - xp\n  // ny = s * (x - nx) - y\n  var s = this.y.redSub(p.y)\n  if (!s.isZero()) s = s.redMul(this.x.redSub(p.x).redInvm())\n\n  var nx = s.redSqr().redISub(this.x).redISub(p.x)\n  var ny = s.redMul(this.x.redSub(nx)).redISub(this.y)\n  return new ECPoint(nx, ny)\n}\n\nECPoint.prototype.dbl = function () {\n  if (this.inf) return this\n\n  // 2P = O\n  var yy = this.y.redAdd(this.y)\n  if (yy.isZero()) return new ECPoint(null, null)\n\n  // s = (3 * x^2) / (2 * y)\n  // nx = s^2 - 2*x\n  // ny = s * (x - nx) - y\n  var x2 = this.x.redSqr()\n  var s = x2.redAdd(x2).redIAdd(x2).redMul(yy.redInvm())\n\n  var nx = s.redSqr().redISub(this.x.redAdd(this.x))\n  var ny = s.redMul(this.x.redSub(nx)).redISub(this.y)\n  return new ECPoint(nx, ny)\n}\n\nECPoint.prototype.mul = function (num) {\n  // Algorithm 3.36 Window NAF method for point multiplication\n  var nafPoints = this._getNAFPoints(4)\n  var points = nafPoints.points\n\n  // Get NAF form\n  var naf = num.getNAF(nafPoints.wnd)\n\n  // Add `this`*(N+1) for every w-NAF index\n  var acc = new ECJPoint(null, null, null)\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var k = 0; i >= 0 && naf[i] === 0; i--, ++k);\n    if (i >= 0) k += 1\n    acc = acc.dblp(k)\n\n    if (i < 0) break\n\n    // J +- P\n    var z = naf[i]\n    if (z > 0) {\n      acc = acc.mixedAdd(points[(z - 1) >> 1])\n    } else {\n      acc = acc.mixedAdd(points[(-z - 1) >> 1].neg())\n    }\n  }\n\n  return ECPoint.fromECJPoint(acc)\n}\n\nECPoint.prototype._getNAFPoints1 = function () {\n  return { wnd: 1, points: [this] }\n}\n\nECPoint.prototype._getNAFPoints = function (wnd) {\n  var points = new Array((1 << wnd) - 1)\n  points[0] = this\n  var dbl = this.dbl()\n  for (var i = 1; i < points.length; ++i) points[i] = points[i - 1].add(dbl)\n  return { wnd: wnd, points: points }\n}\n\nmodule.exports = ECPoint\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}