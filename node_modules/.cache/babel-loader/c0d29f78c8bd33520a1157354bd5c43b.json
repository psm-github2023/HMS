{"ast":null,"code":"var _jsxFileName = \"C:\\\\blockchain\\\\Victus-health-assistant-main\\\\Victus-health-assistant-main\\\\src\\\\components\\\\table\\\\table.jsx\";\nimport { Tag, Space } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  title: \"No.\",\n  dataIndex: \"key\",\n  key: \"key\"\n}, {\n  title: \"Month\",\n  dataIndex: \"month\",\n  key: \"month\"\n}, {\n  title: \"Body Weight\",\n  dataIndex: \"bodywt\",\n  key: \"bodywt\"\n}, {\n  title: \"Tags\",\n  key: \"tags\",\n  dataIndex: \"tags\",\n  render: tags => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: tags.map(tag => {\n      let color = tag.length > 8 ? \"red\" : \"green\";\n      if (tag === \"loser\") {\n        color = \"volcano\";\n      }\n      return /*#__PURE__*/_jsxDEV(Tag, {\n        color: color,\n        children: tag.toUpperCase()\n      }, tag, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false)\n}];\nconst data = [{\n  key: \"1\",\n  month: \"January\",\n  bodywt: 60,\n  tags: [\"nice\", \"healthy\"]\n}, {\n  key: \"2\",\n  month: \"Febuary\",\n  bodywt: 64,\n  tags: [\"not so good\"]\n}, {\n  key: \"3\",\n  month: \"March\",\n  bodywt: 62,\n  tags: [\"cool\", \"better\"]\n}];\nexport { data, columns };","map":{"version":3,"names":["Tag","Space","jsxDEV","_jsxDEV","Fragment","_Fragment","columns","title","dataIndex","key","render","tags","children","map","tag","color","length","toUpperCase","fileName","_jsxFileName","lineNumber","columnNumber","data","month","bodywt"],"sources":["C:/blockchain/Victus-health-assistant-main/Victus-health-assistant-main/src/components/table/table.jsx"],"sourcesContent":["import { Tag, Space } from \"antd\";\n\nconst columns = [\n  {\n    title: \"No.\",\n    dataIndex: \"key\",\n    key: \"key\",\n  },\n  {\n    title: \"Month\",\n    dataIndex: \"month\",\n    key: \"month\",\n  },\n  {\n    title: \"Body Weight\",\n    dataIndex: \"bodywt\",\n    key: \"bodywt\",\n  },\n\n  {\n    title: \"Tags\",\n    key: \"tags\",\n    dataIndex: \"tags\",\n    render: (tags) => (\n      <>\n        {tags.map((tag) => {\n          let color = tag.length > 8 ? \"red\" : \"green\";\n          if (tag === \"loser\") {\n            color = \"volcano\";\n          }\n          return (\n            <Tag color={color} key={tag}>\n              {tag.toUpperCase()}\n            </Tag>\n          );\n        })}\n      </>\n    ),\n  },\n];\n\nconst data = [\n  {\n    key: \"1\",\n    month: \"January\",\n    bodywt: 60,\n    tags: [\"nice\", \"healthy\"],\n  },\n  {\n    key: \"2\",\n    month: \"Febuary\",\n    bodywt: 64,\n    tags: [\"not so good\"],\n  },\n  {\n    key: \"3\",\n    month: \"March\",\n    bodywt: 62,\n    tags: [\"cool\", \"better\"],\n  },\n];\n\nexport { data, columns };\n"],"mappings":";AAAA,SAASA,GAAG,EAAEC,KAAK,QAAQ,MAAM;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElC,MAAMC,OAAO,GAAG,CACd;EACEC,KAAK,EAAE,KAAK;EACZC,SAAS,EAAE,KAAK;EAChBC,GAAG,EAAE;AACP,CAAC,EACD;EACEF,KAAK,EAAE,OAAO;EACdC,SAAS,EAAE,OAAO;EAClBC,GAAG,EAAE;AACP,CAAC,EACD;EACEF,KAAK,EAAE,aAAa;EACpBC,SAAS,EAAE,QAAQ;EACnBC,GAAG,EAAE;AACP,CAAC,EAED;EACEF,KAAK,EAAE,MAAM;EACbE,GAAG,EAAE,MAAM;EACXD,SAAS,EAAE,MAAM;EACjBE,MAAM,EAAGC,IAAI,iBACXR,OAAA,CAAAE,SAAA;IAAAO,QAAA,EACGD,IAAI,CAACE,GAAG,CAAEC,GAAG,IAAK;MACjB,IAAIC,KAAK,GAAGD,GAAG,CAACE,MAAM,GAAG,CAAC,GAAG,KAAK,GAAG,OAAO;MAC5C,IAAIF,GAAG,KAAK,OAAO,EAAE;QACnBC,KAAK,GAAG,SAAS;MACnB;MACA,oBACEZ,OAAA,CAACH,GAAG;QAACe,KAAK,EAAEA,KAAM;QAAAH,QAAA,EACfE,GAAG,CAACG,WAAW,CAAC;MAAC,GADIH,GAAG;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEtB,CAAC;IAEV,CAAC;EAAC,gBACF;AAEN,CAAC,CACF;AAED,MAAMC,IAAI,GAAG,CACX;EACEb,GAAG,EAAE,GAAG;EACRc,KAAK,EAAE,SAAS;EAChBC,MAAM,EAAE,EAAE;EACVb,IAAI,EAAE,CAAC,MAAM,EAAE,SAAS;AAC1B,CAAC,EACD;EACEF,GAAG,EAAE,GAAG;EACRc,KAAK,EAAE,SAAS;EAChBC,MAAM,EAAE,EAAE;EACVb,IAAI,EAAE,CAAC,aAAa;AACtB,CAAC,EACD;EACEF,GAAG,EAAE,GAAG;EACRc,KAAK,EAAE,OAAO;EACdC,MAAM,EAAE,EAAE;EACVb,IAAI,EAAE,CAAC,MAAM,EAAE,QAAQ;AACzB,CAAC,CACF;AAED,SAASW,IAAI,EAAEhB,OAAO"},"metadata":{},"sourceType":"module"}