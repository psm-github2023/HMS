{"ast":null,"code":"'use strict';\n\nconst {\n  Readable\n} = require('readable-stream');\nconst {\n  supportsFileReader\n} = require('../supports');\nconst streamFromFileReader = (file, options) => {\n  if (!supportsFileReader) {\n    throw new Error('FileReader DOM API is not supported.');\n  }\n  class FileStream extends Readable {\n    constructor(file, options = {}) {\n      super(options);\n      this.file = file;\n      this.offset = options.offset || 0;\n      this.chunkSize = options.chunkSize || 1024 * 1024;\n      this.fileReader = new self.FileReader(file);\n      this.fileReader.onloadend = event => {\n        const data = event.target.result;\n        if (data.byteLength === 0) {\n          this.push(null);\n        }\n        this.push(new Uint8Array(data));\n      };\n      this.fileReader.onerror = err => this.destroy(err);\n    }\n    _read(size) {\n      const end = this.offset + this.chunkSize;\n      const slice = file.slice(this.offset, end);\n      this.fileReader.readAsArrayBuffer(slice);\n      this.offset = end;\n    }\n  }\n  return new FileStream(file, options);\n};\nmodule.exports = streamFromFileReader;","map":{"version":3,"names":["Readable","require","supportsFileReader","streamFromFileReader","file","options","Error","FileStream","constructor","offset","chunkSize","fileReader","self","FileReader","onloadend","event","data","target","result","byteLength","push","Uint8Array","onerror","err","destroy","_read","size","end","slice","readAsArrayBuffer","module","exports"],"sources":["C:/blockchain/Victus-health-assistant-main/Victus-health-assistant-main/node_modules/ipfs-utils/src/streams/stream-from-filereader.js"],"sourcesContent":["'use strict'\nconst { Readable } = require('readable-stream')\nconst { supportsFileReader } = require('../supports')\n\nconst streamFromFileReader = (file, options) => {\n  if (!supportsFileReader) {\n    throw new Error('FileReader DOM API is not supported.')\n  }\n  class FileStream extends Readable {\n    constructor (file, options = {}) {\n      super(options)\n      this.file = file\n      this.offset = options.offset || 0\n      this.chunkSize = options.chunkSize || 1024 * 1024\n      this.fileReader = new self.FileReader(file)\n      this.fileReader.onloadend = (event) => {\n        const data = event.target.result\n        if (data.byteLength === 0) {\n          this.push(null)\n        }\n        this.push(new Uint8Array(data))\n      }\n      this.fileReader.onerror = (err) => this.destroy(err)\n    }\n\n    _read (size) {\n      const end = this.offset + this.chunkSize\n      const slice = file.slice(this.offset, end)\n      this.fileReader.readAsArrayBuffer(slice)\n      this.offset = end\n    }\n  }\n\n  return new FileStream(file, options)\n}\n\nmodule.exports = streamFromFileReader\n"],"mappings":"AAAA,YAAY;;AACZ,MAAM;EAAEA;AAAS,CAAC,GAAGC,OAAO,CAAC,iBAAiB,CAAC;AAC/C,MAAM;EAAEC;AAAmB,CAAC,GAAGD,OAAO,CAAC,aAAa,CAAC;AAErD,MAAME,oBAAoB,GAAGA,CAACC,IAAI,EAAEC,OAAO,KAAK;EAC9C,IAAI,CAACH,kBAAkB,EAAE;IACvB,MAAM,IAAII,KAAK,CAAC,sCAAsC,CAAC;EACzD;EACA,MAAMC,UAAU,SAASP,QAAQ,CAAC;IAChCQ,WAAWA,CAAEJ,IAAI,EAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;MAC/B,KAAK,CAACA,OAAO,CAAC;MACd,IAAI,CAACD,IAAI,GAAGA,IAAI;MAChB,IAAI,CAACK,MAAM,GAAGJ,OAAO,CAACI,MAAM,IAAI,CAAC;MACjC,IAAI,CAACC,SAAS,GAAGL,OAAO,CAACK,SAAS,IAAI,IAAI,GAAG,IAAI;MACjD,IAAI,CAACC,UAAU,GAAG,IAAIC,IAAI,CAACC,UAAU,CAACT,IAAI,CAAC;MAC3C,IAAI,CAACO,UAAU,CAACG,SAAS,GAAIC,KAAK,IAAK;QACrC,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,MAAM;QAChC,IAAIF,IAAI,CAACG,UAAU,KAAK,CAAC,EAAE;UACzB,IAAI,CAACC,IAAI,CAAC,IAAI,CAAC;QACjB;QACA,IAAI,CAACA,IAAI,CAAC,IAAIC,UAAU,CAACL,IAAI,CAAC,CAAC;MACjC,CAAC;MACD,IAAI,CAACL,UAAU,CAACW,OAAO,GAAIC,GAAG,IAAK,IAAI,CAACC,OAAO,CAACD,GAAG,CAAC;IACtD;IAEAE,KAAKA,CAAEC,IAAI,EAAE;MACX,MAAMC,GAAG,GAAG,IAAI,CAAClB,MAAM,GAAG,IAAI,CAACC,SAAS;MACxC,MAAMkB,KAAK,GAAGxB,IAAI,CAACwB,KAAK,CAAC,IAAI,CAACnB,MAAM,EAAEkB,GAAG,CAAC;MAC1C,IAAI,CAAChB,UAAU,CAACkB,iBAAiB,CAACD,KAAK,CAAC;MACxC,IAAI,CAACnB,MAAM,GAAGkB,GAAG;IACnB;EACF;EAEA,OAAO,IAAIpB,UAAU,CAACH,IAAI,EAAEC,OAAO,CAAC;AACtC,CAAC;AAEDyB,MAAM,CAACC,OAAO,GAAG5B,oBAAoB"},"metadata":{},"sourceType":"script"}