{"ast":null,"code":"'use strict';\n\nconst promisify = require('promisify-es6');\nconst findSources = require('../utils/find-sources');\nmodule.exports = send => {\n  return promisify(function () {\n    const {\n      callback,\n      sources,\n      opts\n    } = findSources(Array.prototype.slice.call(arguments));\n    send({\n      path: 'files/cp',\n      args: sources,\n      qs: opts\n    }, error => callback(error));\n  });\n};","map":{"version":3,"names":["promisify","require","findSources","module","exports","send","callback","sources","opts","Array","prototype","slice","call","arguments","path","args","qs","error"],"sources":["C:/blockchain/Victus-health-assistant-main/Victus-health-assistant-main/node_modules/ipfs-http-client/src/files-mfs/cp.js"],"sourcesContent":["'use strict'\n\nconst promisify = require('promisify-es6')\nconst findSources = require('../utils/find-sources')\n\nmodule.exports = (send) => {\n  return promisify(function () {\n    const {\n      callback,\n      sources,\n      opts\n    } = findSources(Array.prototype.slice.call(arguments))\n\n    send({\n      path: 'files/cp',\n      args: sources,\n      qs: opts\n    }, (error) => callback(error))\n  })\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,SAAS,GAAGC,OAAO,CAAC,eAAe,CAAC;AAC1C,MAAMC,WAAW,GAAGD,OAAO,CAAC,uBAAuB,CAAC;AAEpDE,MAAM,CAACC,OAAO,GAAIC,IAAI,IAAK;EACzB,OAAOL,SAAS,CAAC,YAAY;IAC3B,MAAM;MACJM,QAAQ;MACRC,OAAO;MACPC;IACF,CAAC,GAAGN,WAAW,CAACO,KAAK,CAACC,SAAS,CAACC,KAAK,CAACC,IAAI,CAACC,SAAS,CAAC,CAAC;IAEtDR,IAAI,CAAC;MACHS,IAAI,EAAE,UAAU;MAChBC,IAAI,EAAER,OAAO;MACbS,EAAE,EAAER;IACN,CAAC,EAAGS,KAAK,IAAKX,QAAQ,CAACW,KAAK,CAAC,CAAC;EAChC,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"script"}