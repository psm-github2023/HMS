{"ast":null,"code":"'use strict';\n\nconst IsIpfs = require('is-ipfs');\nconst promisify = require('promisify-es6');\nconst streamToValueWithTransformer = require('../utils/stream-to-value-with-transformer');\nconst moduleConfig = require('../utils/module-config');\nconst cleanCID = require('../utils/clean-cid');\nmodule.exports = arg => {\n  const send = moduleConfig(arg);\n  const refs = promisify((args, opts, callback) => {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    opts = module.exports.normalizeOpts(opts);\n    try {\n      args = module.exports.checkArgs(args);\n    } catch (err) {\n      return callback(err);\n    }\n    const transform = (res, cb) => {\n      cb(null, res.map(r => ({\n        ref: r.Ref,\n        err: r.Err\n      })));\n    };\n    const request = {\n      args,\n      path: 'refs',\n      qs: opts\n    };\n    send(request, (err, result) => {\n      if (err) {\n        return callback(err);\n      }\n      streamToValueWithTransformer(result, transform, callback);\n    });\n  });\n  refs.local = require('./refs-local')(arg);\n  refs.localReadableStream = require('./refs-local-readable-stream')(arg);\n  refs.localPullStream = require('./refs-local-pull-stream')(arg);\n  return refs;\n};\nmodule.exports.checkArgs = args => {\n  const isArray = Array.isArray(args);\n  args = isArray ? args : [args];\n  const res = [];\n  for (let arg of args) {\n    try {\n      arg = cleanCID(arg);\n    } catch (err) {\n      if (!IsIpfs.ipfsPath(arg)) {\n        throw err;\n      }\n    }\n    res.push(arg);\n  }\n  return isArray ? res : res[0];\n};\nmodule.exports.normalizeOpts = opts => {\n  opts = opts || {};\n  if (typeof opts.maxDepth === 'number') {\n    opts['max-depth'] = opts.maxDepth;\n  }\n  return opts;\n};","map":{"version":3,"names":["IsIpfs","require","promisify","streamToValueWithTransformer","moduleConfig","cleanCID","module","exports","arg","send","refs","args","opts","callback","normalizeOpts","checkArgs","err","transform","res","cb","map","r","ref","Ref","Err","request","path","qs","result","local","localReadableStream","localPullStream","isArray","Array","ipfsPath","push","maxDepth"],"sources":["C:/blockchain/Victus-health-assistant-main/Victus-health-assistant-main/node_modules/ipfs-http-client/src/files-regular/refs.js"],"sourcesContent":["'use strict'\n\nconst IsIpfs = require('is-ipfs')\nconst promisify = require('promisify-es6')\nconst streamToValueWithTransformer = require('../utils/stream-to-value-with-transformer')\nconst moduleConfig = require('../utils/module-config')\nconst cleanCID = require('../utils/clean-cid')\n\nmodule.exports = (arg) => {\n  const send = moduleConfig(arg)\n\n  const refs = promisify((args, opts, callback) => {\n    if (typeof (opts) === 'function') {\n      callback = opts\n      opts = {}\n    }\n    opts = module.exports.normalizeOpts(opts)\n\n    try {\n      args = module.exports.checkArgs(args)\n    } catch (err) {\n      return callback(err)\n    }\n\n    const transform = (res, cb) => {\n      cb(null, res.map(r => ({ ref: r.Ref, err: r.Err })))\n    }\n\n    const request = {\n      args,\n      path: 'refs',\n      qs: opts\n    }\n    send(request, (err, result) => {\n      if (err) {\n        return callback(err)\n      }\n\n      streamToValueWithTransformer(result, transform, callback)\n    })\n  })\n\n  refs.local = require('./refs-local')(arg)\n  refs.localReadableStream = require('./refs-local-readable-stream')(arg)\n  refs.localPullStream = require('./refs-local-pull-stream')(arg)\n\n  return refs\n}\n\nmodule.exports.checkArgs = (args) => {\n  const isArray = Array.isArray(args)\n  args = isArray ? args : [args]\n\n  const res = []\n  for (let arg of args) {\n    try {\n      arg = cleanCID(arg)\n    } catch (err) {\n      if (!IsIpfs.ipfsPath(arg)) {\n        throw err\n      }\n    }\n    res.push(arg)\n  }\n\n  return isArray ? res : res[0]\n}\n\nmodule.exports.normalizeOpts = (opts) => {\n  opts = opts || {}\n  if (typeof opts.maxDepth === 'number') {\n    opts['max-depth'] = opts.maxDepth\n  }\n  return opts\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}