{"ast":null,"code":"'use strict';\n\nconst TransformStream = require('readable-stream').Transform;\nconst PubsubMessage = require('./pubsub-message-utils');\nclass PubsubMessageStream extends TransformStream {\n  constructor(options) {\n    const opts = Object.assign(options || {}, {\n      objectMode: true\n    });\n    super(opts);\n  }\n  static from(inputStream, callback) {\n    let outputStream = inputStream.pipe(new PubsubMessageStream());\n    inputStream.on('end', () => outputStream.emit('end'));\n    callback(null, outputStream);\n  }\n  _transform(obj, enc, callback) {\n    // go-ipfs returns '{}' as the very first object atm, we skip that\n    if (Object.keys(obj).length === 0) {\n      return callback();\n    }\n    try {\n      const msg = PubsubMessage.deserialize(obj, 'base64');\n      this.push(msg);\n      callback();\n    } catch (err) {\n      return callback(err);\n    }\n  }\n}\nmodule.exports = PubsubMessageStream;","map":{"version":3,"names":["TransformStream","require","Transform","PubsubMessage","PubsubMessageStream","constructor","options","opts","Object","assign","objectMode","from","inputStream","callback","outputStream","pipe","on","emit","_transform","obj","enc","keys","length","msg","deserialize","push","err","module","exports"],"sources":["C:/blockchain/Victus-health-assistant-main/Victus-health-assistant-main/node_modules/ipfs-http-client/src/utils/pubsub-message-stream.js"],"sourcesContent":["'use strict'\n\nconst TransformStream = require('readable-stream').Transform\nconst PubsubMessage = require('./pubsub-message-utils')\n\nclass PubsubMessageStream extends TransformStream {\n  constructor (options) {\n    const opts = Object.assign(options || {}, { objectMode: true })\n    super(opts)\n  }\n\n  static from (inputStream, callback) {\n    let outputStream = inputStream.pipe(new PubsubMessageStream())\n    inputStream.on('end', () => outputStream.emit('end'))\n    callback(null, outputStream)\n  }\n\n  _transform (obj, enc, callback) {\n    // go-ipfs returns '{}' as the very first object atm, we skip that\n    if (Object.keys(obj).length === 0) {\n      return callback()\n    }\n\n    try {\n      const msg = PubsubMessage.deserialize(obj, 'base64')\n      this.push(msg)\n      callback()\n    } catch (err) {\n      return callback(err)\n    }\n  }\n}\n\nmodule.exports = PubsubMessageStream\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,eAAe,GAAGC,OAAO,CAAC,iBAAiB,CAAC,CAACC,SAAS;AAC5D,MAAMC,aAAa,GAAGF,OAAO,CAAC,wBAAwB,CAAC;AAEvD,MAAMG,mBAAmB,SAASJ,eAAe,CAAC;EAChDK,WAAWA,CAAEC,OAAO,EAAE;IACpB,MAAMC,IAAI,GAAGC,MAAM,CAACC,MAAM,CAACH,OAAO,IAAI,CAAC,CAAC,EAAE;MAAEI,UAAU,EAAE;IAAK,CAAC,CAAC;IAC/D,KAAK,CAACH,IAAI,CAAC;EACb;EAEA,OAAOI,IAAIA,CAAEC,WAAW,EAAEC,QAAQ,EAAE;IAClC,IAAIC,YAAY,GAAGF,WAAW,CAACG,IAAI,CAAC,IAAIX,mBAAmB,CAAC,CAAC,CAAC;IAC9DQ,WAAW,CAACI,EAAE,CAAC,KAAK,EAAE,MAAMF,YAAY,CAACG,IAAI,CAAC,KAAK,CAAC,CAAC;IACrDJ,QAAQ,CAAC,IAAI,EAAEC,YAAY,CAAC;EAC9B;EAEAI,UAAUA,CAAEC,GAAG,EAAEC,GAAG,EAAEP,QAAQ,EAAE;IAC9B;IACA,IAAIL,MAAM,CAACa,IAAI,CAACF,GAAG,CAAC,CAACG,MAAM,KAAK,CAAC,EAAE;MACjC,OAAOT,QAAQ,CAAC,CAAC;IACnB;IAEA,IAAI;MACF,MAAMU,GAAG,GAAGpB,aAAa,CAACqB,WAAW,CAACL,GAAG,EAAE,QAAQ,CAAC;MACpD,IAAI,CAACM,IAAI,CAACF,GAAG,CAAC;MACdV,QAAQ,CAAC,CAAC;IACZ,CAAC,CAAC,OAAOa,GAAG,EAAE;MACZ,OAAOb,QAAQ,CAACa,GAAG,CAAC;IACtB;EACF;AACF;AAEAC,MAAM,CAACC,OAAO,GAAGxB,mBAAmB"},"metadata":{},"sourceType":"script"}