{"ast":null,"code":"'use strict';\n\nconst promisify = require('promisify-es6');\nmodule.exports = send => {\n  return promisify((subsystem, level, opts, callback) => {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    if (typeof subsystem !== 'string') {\n      return callback(new Error('Invalid subsystem type'));\n    }\n    if (typeof level !== 'string') {\n      return callback(new Error('Invalid level type'));\n    }\n    send({\n      path: 'log/level',\n      args: [subsystem, level],\n      qs: opts,\n      files: undefined,\n      buffer: true\n    }, callback);\n  });\n};","map":{"version":3,"names":["promisify","require","module","exports","send","subsystem","level","opts","callback","Error","path","args","qs","files","undefined","buffer"],"sources":["C:/blockchain/Victus-health-assistant-main/Victus-health-assistant-main/node_modules/ipfs-http-client/src/log/level.js"],"sourcesContent":["'use strict'\n\nconst promisify = require('promisify-es6')\n\nmodule.exports = (send) => {\n  return promisify((subsystem, level, opts, callback) => {\n    if (typeof opts === 'function') {\n      callback = opts\n      opts = {}\n    }\n    if (typeof subsystem !== 'string') {\n      return callback(new Error('Invalid subsystem type'))\n    }\n\n    if (typeof level !== 'string') {\n      return callback(new Error('Invalid level type'))\n    }\n\n    send({\n      path: 'log/level',\n      args: [subsystem, level],\n      qs: opts,\n      files: undefined,\n      buffer: true\n    }, callback)\n  })\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,SAAS,GAAGC,OAAO,CAAC,eAAe,CAAC;AAE1CC,MAAM,CAACC,OAAO,GAAIC,IAAI,IAAK;EACzB,OAAOJ,SAAS,CAAC,CAACK,SAAS,EAAEC,KAAK,EAAEC,IAAI,EAAEC,QAAQ,KAAK;IACrD,IAAI,OAAOD,IAAI,KAAK,UAAU,EAAE;MAC9BC,QAAQ,GAAGD,IAAI;MACfA,IAAI,GAAG,CAAC,CAAC;IACX;IACA,IAAI,OAAOF,SAAS,KAAK,QAAQ,EAAE;MACjC,OAAOG,QAAQ,CAAC,IAAIC,KAAK,CAAC,wBAAwB,CAAC,CAAC;IACtD;IAEA,IAAI,OAAOH,KAAK,KAAK,QAAQ,EAAE;MAC7B,OAAOE,QAAQ,CAAC,IAAIC,KAAK,CAAC,oBAAoB,CAAC,CAAC;IAClD;IAEAL,IAAI,CAAC;MACHM,IAAI,EAAE,WAAW;MACjBC,IAAI,EAAE,CAACN,SAAS,EAAEC,KAAK,CAAC;MACxBM,EAAE,EAAEL,IAAI;MACRM,KAAK,EAAEC,SAAS;MAChBC,MAAM,EAAE;IACV,CAAC,EAAEP,QAAQ,CAAC;EACd,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"script"}