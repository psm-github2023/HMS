{"ast":null,"code":"'use strict';\n\nconst promisify = require('promisify-es6');\nconst mapKeys = require('just-map-keys');\nconst kebabCase = require('just-kebab-case');\nconst transform = function (data, callback) {\n  callback(null, {\n    type: data.Type,\n    blocks: data.Blocks,\n    size: data.Size,\n    hash: data.Hash,\n    cumulativeSize: data.CumulativeSize,\n    withLocality: data.WithLocality || false,\n    local: data.Local || undefined,\n    sizeLocal: data.SizeLocal || undefined\n  });\n};\nmodule.exports = send => {\n  return promisify((args, opts, callback) => {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    opts = mapKeys(opts, (v, k) => kebabCase(k));\n    send.andTransform({\n      path: 'files/stat',\n      args: args,\n      qs: opts\n    }, transform, callback);\n  });\n};","map":{"version":3,"names":["promisify","require","mapKeys","kebabCase","transform","data","callback","type","Type","blocks","Blocks","size","Size","hash","Hash","cumulativeSize","CumulativeSize","withLocality","WithLocality","local","Local","undefined","sizeLocal","SizeLocal","module","exports","send","args","opts","v","k","andTransform","path","qs"],"sources":["C:/blockchain/Victus-health-assistant-main/Victus-health-assistant-main/node_modules/ipfs-http-client/src/files-mfs/stat.js"],"sourcesContent":["'use strict'\n\nconst promisify = require('promisify-es6')\nconst mapKeys = require('just-map-keys')\nconst kebabCase = require('just-kebab-case')\n\nconst transform = function (data, callback) {\n  callback(null, {\n    type: data.Type,\n    blocks: data.Blocks,\n    size: data.Size,\n    hash: data.Hash,\n    cumulativeSize: data.CumulativeSize,\n    withLocality: data.WithLocality || false,\n    local: data.Local || undefined,\n    sizeLocal: data.SizeLocal || undefined\n  })\n}\n\nmodule.exports = (send) => {\n  return promisify((args, opts, callback) => {\n    if (typeof (opts) === 'function') {\n      callback = opts\n      opts = {}\n    }\n\n    opts = mapKeys(opts, (v, k) => kebabCase(k))\n\n    send.andTransform({\n      path: 'files/stat',\n      args: args,\n      qs: opts\n    }, transform, callback)\n  })\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,SAAS,GAAGC,OAAO,CAAC,eAAe,CAAC;AAC1C,MAAMC,OAAO,GAAGD,OAAO,CAAC,eAAe,CAAC;AACxC,MAAME,SAAS,GAAGF,OAAO,CAAC,iBAAiB,CAAC;AAE5C,MAAMG,SAAS,GAAG,SAAAA,CAAUC,IAAI,EAAEC,QAAQ,EAAE;EAC1CA,QAAQ,CAAC,IAAI,EAAE;IACbC,IAAI,EAAEF,IAAI,CAACG,IAAI;IACfC,MAAM,EAAEJ,IAAI,CAACK,MAAM;IACnBC,IAAI,EAAEN,IAAI,CAACO,IAAI;IACfC,IAAI,EAAER,IAAI,CAACS,IAAI;IACfC,cAAc,EAAEV,IAAI,CAACW,cAAc;IACnCC,YAAY,EAAEZ,IAAI,CAACa,YAAY,IAAI,KAAK;IACxCC,KAAK,EAAEd,IAAI,CAACe,KAAK,IAAIC,SAAS;IAC9BC,SAAS,EAAEjB,IAAI,CAACkB,SAAS,IAAIF;EAC/B,CAAC,CAAC;AACJ,CAAC;AAEDG,MAAM,CAACC,OAAO,GAAIC,IAAI,IAAK;EACzB,OAAO1B,SAAS,CAAC,CAAC2B,IAAI,EAAEC,IAAI,EAAEtB,QAAQ,KAAK;IACzC,IAAI,OAAQsB,IAAK,KAAK,UAAU,EAAE;MAChCtB,QAAQ,GAAGsB,IAAI;MACfA,IAAI,GAAG,CAAC,CAAC;IACX;IAEAA,IAAI,GAAG1B,OAAO,CAAC0B,IAAI,EAAE,CAACC,CAAC,EAAEC,CAAC,KAAK3B,SAAS,CAAC2B,CAAC,CAAC,CAAC;IAE5CJ,IAAI,CAACK,YAAY,CAAC;MAChBC,IAAI,EAAE,YAAY;MAClBL,IAAI,EAAEA,IAAI;MACVM,EAAE,EAAEL;IACN,CAAC,EAAExB,SAAS,EAAEE,QAAQ,CAAC;EACzB,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"script"}