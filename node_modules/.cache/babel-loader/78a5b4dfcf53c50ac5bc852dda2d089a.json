{"ast":null,"code":"'use strict';\n\nconst CID = require('cids');\nconst withIs = require('class-is');\n\n/**\n * Represents an immutable block of data that is uniquely referenced with a cid.\n *\n * @constructor\n * @param {Buffer} data - The data to be stored in the block as a buffer.\n * @param {CID} cid - The cid of the data\n *\n * @example\n * const block = new Block(new Buffer('a012d83b20f9371...'))\n */\nclass Block {\n  constructor(data, cid) {\n    if (!data || !Buffer.isBuffer(data)) {\n      throw new Error('first argument  must be a buffer');\n    }\n    if (!cid || !CID.isCID(cid)) {\n      throw new Error('second argument must be a CID');\n    }\n    this._data = data;\n    this._cid = cid;\n  }\n\n  /**\n   * The data of this block.\n   *\n   * @type {Buffer}\n   */\n  get data() {\n    return this._data;\n  }\n  set data(val) {\n    throw new Error('Tried to change an immutable block');\n  }\n\n  /**\n   * The cid of the data this block represents.\n   *\n   * @type {CID}\n   */\n  get cid() {\n    return this._cid;\n  }\n  set cid(val) {\n    throw new Error('Tried to change an immutable block');\n  }\n}\nmodule.exports = withIs(Block, {\n  className: 'Block',\n  symbolName: '@ipfs/js-ipfs-block/block'\n});","map":{"version":3,"names":["CID","require","withIs","Block","constructor","data","cid","Buffer","isBuffer","Error","isCID","_data","_cid","val","module","exports","className","symbolName"],"sources":["C:/blockchain/Victus-health-assistant-main/Victus-health-assistant-main/node_modules/ipfs-block/src/index.js"],"sourcesContent":["'use strict'\n\nconst CID = require('cids')\nconst withIs = require('class-is')\n\n/**\n * Represents an immutable block of data that is uniquely referenced with a cid.\n *\n * @constructor\n * @param {Buffer} data - The data to be stored in the block as a buffer.\n * @param {CID} cid - The cid of the data\n *\n * @example\n * const block = new Block(new Buffer('a012d83b20f9371...'))\n */\nclass Block {\n  constructor (data, cid) {\n    if (!data || !Buffer.isBuffer(data)) {\n      throw new Error('first argument  must be a buffer')\n    }\n\n    if (!cid || !CID.isCID(cid)) {\n      throw new Error('second argument must be a CID')\n    }\n\n    this._data = data\n    this._cid = cid\n  }\n\n  /**\n   * The data of this block.\n   *\n   * @type {Buffer}\n   */\n  get data () {\n    return this._data\n  }\n\n  set data (val) {\n    throw new Error('Tried to change an immutable block')\n  }\n\n  /**\n   * The cid of the data this block represents.\n   *\n   * @type {CID}\n   */\n  get cid () {\n    return this._cid\n  }\n\n  set cid (val) {\n    throw new Error('Tried to change an immutable block')\n  }\n}\n\nmodule.exports = withIs(Block, { className: 'Block', symbolName: '@ipfs/js-ipfs-block/block' })\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,GAAG,GAAGC,OAAO,CAAC,MAAM,CAAC;AAC3B,MAAMC,MAAM,GAAGD,OAAO,CAAC,UAAU,CAAC;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAME,KAAK,CAAC;EACVC,WAAWA,CAAEC,IAAI,EAAEC,GAAG,EAAE;IACtB,IAAI,CAACD,IAAI,IAAI,CAACE,MAAM,CAACC,QAAQ,CAACH,IAAI,CAAC,EAAE;MACnC,MAAM,IAAII,KAAK,CAAC,kCAAkC,CAAC;IACrD;IAEA,IAAI,CAACH,GAAG,IAAI,CAACN,GAAG,CAACU,KAAK,CAACJ,GAAG,CAAC,EAAE;MAC3B,MAAM,IAAIG,KAAK,CAAC,+BAA+B,CAAC;IAClD;IAEA,IAAI,CAACE,KAAK,GAAGN,IAAI;IACjB,IAAI,CAACO,IAAI,GAAGN,GAAG;EACjB;;EAEA;AACF;AACA;AACA;AACA;EACE,IAAID,IAAIA,CAAA,EAAI;IACV,OAAO,IAAI,CAACM,KAAK;EACnB;EAEA,IAAIN,IAAIA,CAAEQ,GAAG,EAAE;IACb,MAAM,IAAIJ,KAAK,CAAC,oCAAoC,CAAC;EACvD;;EAEA;AACF;AACA;AACA;AACA;EACE,IAAIH,GAAGA,CAAA,EAAI;IACT,OAAO,IAAI,CAACM,IAAI;EAClB;EAEA,IAAIN,GAAGA,CAAEO,GAAG,EAAE;IACZ,MAAM,IAAIJ,KAAK,CAAC,oCAAoC,CAAC;EACvD;AACF;AAEAK,MAAM,CAACC,OAAO,GAAGb,MAAM,CAACC,KAAK,EAAE;EAAEa,SAAS,EAAE,OAAO;EAAEC,UAAU,EAAE;AAA4B,CAAC,CAAC"},"metadata":{},"sourceType":"script"}