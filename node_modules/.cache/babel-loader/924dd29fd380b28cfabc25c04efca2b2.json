{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\nvar baseTransaction_1 = require(\"./baseTransaction\");\nvar types_1 = require(\"./types\");\nvar util_1 = require(\"./util\");\nvar TRANSACTION_TYPE = 1;\nvar TRANSACTION_TYPE_BUFFER = Buffer.from(TRANSACTION_TYPE.toString(16).padStart(2, '0'), 'hex');\n/**\n * Typed transaction with optional access lists\n *\n * - TransactionType: 1\n * - EIP: [EIP-2930](https://eips.ethereum.org/EIPS/eip-2930)\n */\nvar AccessListEIP2930Transaction = /** @class */function (_super) {\n  __extends(AccessListEIP2930Transaction, _super);\n  /**\n   * This constructor takes the values, validates them, assigns them and freezes the object.\n   *\n   * It is not recommended to use this constructor directly. Instead use\n   * the static factory methods to assist in creating a Transaction object from\n   * varying data types.\n   */\n  function AccessListEIP2930Transaction(txData, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    var _a, _b;\n    var _this = _super.call(this, __assign(__assign({}, txData), {\n      type: TRANSACTION_TYPE\n    })) || this;\n    /**\n     * The default HF if the tx type is active on that HF\n     * or the first greater HF where the tx is active.\n     *\n     * @hidden\n     */\n    _this.DEFAULT_HARDFORK = 'berlin';\n    var chainId = txData.chainId,\n      accessList = txData.accessList,\n      gasPrice = txData.gasPrice;\n    _this.common = _this._getCommon(opts.common, chainId);\n    _this.chainId = _this.common.chainIdBN();\n    // EIP-2718 check is done in Common\n    if (!_this.common.isActivatedEIP(2930)) {\n      throw new Error('EIP-2930 not enabled on Common');\n    }\n    _this.activeCapabilities = _this.activeCapabilities.concat([2718, 2930]);\n    // Populate the access list fields\n    var accessListData = util_1.AccessLists.getAccessListData(accessList !== null && accessList !== void 0 ? accessList : []);\n    _this.accessList = accessListData.accessList;\n    _this.AccessListJSON = accessListData.AccessListJSON;\n    // Verify the access list format.\n    util_1.AccessLists.verifyAccessList(_this.accessList);\n    _this.gasPrice = new ethereumjs_util_1.BN((0, ethereumjs_util_1.toBuffer)(gasPrice === '' ? '0x' : gasPrice));\n    _this._validateCannotExceedMaxInteger({\n      gasPrice: _this.gasPrice\n    });\n    if (_this.v && !_this.v.eqn(0) && !_this.v.eqn(1)) {\n      throw new Error('The y-parity of the transaction should either be 0 or 1');\n    }\n    if (_this.common.gteHardfork('homestead') && ((_a = _this.s) === null || _a === void 0 ? void 0 : _a.gt(types_1.N_DIV_2))) {\n      throw new Error('Invalid Signature: s-values greater than secp256k1n/2 are considered invalid');\n    }\n    var freeze = (_b = opts === null || opts === void 0 ? void 0 : opts.freeze) !== null && _b !== void 0 ? _b : true;\n    if (freeze) {\n      Object.freeze(_this);\n    }\n    return _this;\n  }\n  Object.defineProperty(AccessListEIP2930Transaction.prototype, \"senderR\", {\n    /**\n     * EIP-2930 alias for `r`\n     *\n     * @deprecated use `r` instead\n     */\n    get: function () {\n      return this.r;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(AccessListEIP2930Transaction.prototype, \"senderS\", {\n    /**\n     * EIP-2930 alias for `s`\n     *\n     * @deprecated use `s` instead\n     */\n    get: function () {\n      return this.s;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(AccessListEIP2930Transaction.prototype, \"yParity\", {\n    /**\n     * EIP-2930 alias for `v`\n     *\n     * @deprecated use `v` instead\n     */\n    get: function () {\n      return this.v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\n   * Instantiate a transaction from a data dictionary.\n   *\n   * Format: { chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n   * v, r, s }\n   *\n   * Notes:\n   * - `chainId` will be set automatically if not provided\n   * - All parameters are optional and have some basic default values\n   */\n  AccessListEIP2930Transaction.fromTxData = function (txData, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    return new AccessListEIP2930Transaction(txData, opts);\n  };\n  /**\n   * Instantiate a transaction from the serialized tx.\n   *\n   * Format: `0x01 || rlp([chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n   * signatureYParity (v), signatureR (r), signatureS (s)])`\n   */\n  AccessListEIP2930Transaction.fromSerializedTx = function (serialized, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    if (!serialized.slice(0, 1).equals(TRANSACTION_TYPE_BUFFER)) {\n      throw new Error(\"Invalid serialized tx input: not an EIP-2930 transaction (wrong tx type, expected: \" + TRANSACTION_TYPE + \", received: \" + serialized.slice(0, 1).toString('hex'));\n    }\n    var values = ethereumjs_util_1.rlp.decode(serialized.slice(1));\n    if (!Array.isArray(values)) {\n      throw new Error('Invalid serialized tx input: must be array');\n    }\n    return AccessListEIP2930Transaction.fromValuesArray(values, opts);\n  };\n  /**\n   * Instantiate a transaction from the serialized tx.\n   * (alias of {@link AccessListEIP2930Transaction.fromSerializedTx})\n   *\n   * Note: This means that the Buffer should start with 0x01.\n   *\n   * @deprecated this constructor alias is deprecated and will be removed\n   * in favor of the {@link AccessListEIP2930Transaction.fromSerializedTx} constructor\n   */\n  AccessListEIP2930Transaction.fromRlpSerializedTx = function (serialized, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    return AccessListEIP2930Transaction.fromSerializedTx(serialized, opts);\n  };\n  /**\n   * Create a transaction from a values array.\n   *\n   * Format: `[chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n   * signatureYParity (v), signatureR (r), signatureS (s)]`\n   */\n  AccessListEIP2930Transaction.fromValuesArray = function (values, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    if (values.length !== 8 && values.length !== 11) {\n      throw new Error('Invalid EIP-2930 transaction. Only expecting 8 values (for unsigned tx) or 11 values (for signed tx).');\n    }\n    var _a = __read(values, 11),\n      chainId = _a[0],\n      nonce = _a[1],\n      gasPrice = _a[2],\n      gasLimit = _a[3],\n      to = _a[4],\n      value = _a[5],\n      data = _a[6],\n      accessList = _a[7],\n      v = _a[8],\n      r = _a[9],\n      s = _a[10];\n    var emptyAccessList = [];\n    return new AccessListEIP2930Transaction({\n      chainId: new ethereumjs_util_1.BN(chainId),\n      nonce: nonce,\n      gasPrice: gasPrice,\n      gasLimit: gasLimit,\n      to: to,\n      value: value,\n      data: data,\n      accessList: accessList !== null && accessList !== void 0 ? accessList : emptyAccessList,\n      v: v !== undefined ? new ethereumjs_util_1.BN(v) : undefined,\n      r: r,\n      s: s\n    }, opts);\n  };\n  /**\n   * The amount of gas paid for the data in this tx\n   */\n  AccessListEIP2930Transaction.prototype.getDataFee = function () {\n    var cost = _super.prototype.getDataFee.call(this);\n    cost.iaddn(util_1.AccessLists.getDataFeeEIP2930(this.accessList, this.common));\n    return cost;\n  };\n  /**\n   * The up front amount that an account must have for this transaction to be valid\n   */\n  AccessListEIP2930Transaction.prototype.getUpfrontCost = function () {\n    return this.gasLimit.mul(this.gasPrice).add(this.value);\n  };\n  /**\n   * Returns a Buffer Array of the raw Buffers of the EIP-2930 transaction, in order.\n   *\n   * Format: `[chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n   * signatureYParity (v), signatureR (r), signatureS (s)]`\n   *\n   * Use {@link AccessListEIP2930Transaction.serialize} to add a transaction to a block\n   * with {@link Block.fromValuesArray}.\n   *\n   * For an unsigned tx this method uses the empty Buffer values for the\n   * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n   * representation for external signing use {@link AccessListEIP2930Transaction.getMessageToSign}.\n   */\n  AccessListEIP2930Transaction.prototype.raw = function () {\n    return [(0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.chainId), (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.nonce), (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.gasPrice), (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.gasLimit), this.to !== undefined ? this.to.buf : Buffer.from([]), (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.value), this.data, this.accessList, this.v !== undefined ? (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.v) : Buffer.from([]), this.r !== undefined ? (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.r) : Buffer.from([]), this.s !== undefined ? (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.s) : Buffer.from([])];\n  };\n  /**\n   * Returns the serialized encoding of the EIP-2930 transaction.\n   *\n   * Format: `0x01 || rlp([chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n   * signatureYParity (v), signatureR (r), signatureS (s)])`\n   *\n   * Note that in contrast to the legacy tx serialization format this is not\n   * valid RLP any more due to the raw tx type preceding and concatenated to\n   * the RLP encoding of the values.\n   */\n  AccessListEIP2930Transaction.prototype.serialize = function () {\n    var base = this.raw();\n    return Buffer.concat([TRANSACTION_TYPE_BUFFER, ethereumjs_util_1.rlp.encode(base)]);\n  };\n  /**\n   * Returns the serialized unsigned tx (hashed or raw), which can be used\n   * to sign the transaction (e.g. for sending to a hardware wallet).\n   *\n   * Note: in contrast to the legacy tx the raw message format is already\n   * serialized and doesn't need to be RLP encoded any more.\n   *\n   * ```javascript\n   * const serializedMessage = tx.getMessageToSign(false) // use this for the HW wallet input\n   * ```\n   *\n   * @param hashMessage - Return hashed message if set to true (default: true)\n   */\n  AccessListEIP2930Transaction.prototype.getMessageToSign = function (hashMessage) {\n    if (hashMessage === void 0) {\n      hashMessage = true;\n    }\n    var base = this.raw().slice(0, 8);\n    var message = Buffer.concat([TRANSACTION_TYPE_BUFFER, ethereumjs_util_1.rlp.encode(base)]);\n    if (hashMessage) {\n      return (0, ethereumjs_util_1.keccak256)(message);\n    } else {\n      return message;\n    }\n  };\n  /**\n   * Computes a sha3-256 hash of the serialized tx.\n   *\n   * This method can only be used for signed txs (it throws otherwise).\n   * Use {@link AccessListEIP2930Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n   */\n  AccessListEIP2930Transaction.prototype.hash = function () {\n    if (!this.isSigned()) {\n      throw new Error('Cannot call hash method if transaction is not signed');\n    }\n    if (Object.isFrozen(this)) {\n      if (!this.cache.hash) {\n        this.cache.hash = (0, ethereumjs_util_1.keccak256)(this.serialize());\n      }\n      return this.cache.hash;\n    }\n    return (0, ethereumjs_util_1.keccak256)(this.serialize());\n  };\n  /**\n   * Computes a sha3-256 hash which can be used to verify the signature\n   */\n  AccessListEIP2930Transaction.prototype.getMessageToVerifySignature = function () {\n    return this.getMessageToSign();\n  };\n  /**\n   * Returns the public key of the sender\n   */\n  AccessListEIP2930Transaction.prototype.getSenderPublicKey = function () {\n    var _a;\n    if (!this.isSigned()) {\n      throw new Error('Cannot call this method if transaction is not signed');\n    }\n    var msgHash = this.getMessageToVerifySignature();\n    // EIP-2: All transaction signatures whose s-value is greater than secp256k1n/2 are considered invalid.\n    // Reasoning: https://ethereum.stackexchange.com/a/55728\n    if (this.common.gteHardfork('homestead') && ((_a = this.s) === null || _a === void 0 ? void 0 : _a.gt(types_1.N_DIV_2))) {\n      throw new Error('Invalid Signature: s-values greater than secp256k1n/2 are considered invalid');\n    }\n    var _b = this,\n      yParity = _b.yParity,\n      r = _b.r,\n      s = _b.s;\n    try {\n      return (0, ethereumjs_util_1.ecrecover)(msgHash, yParity.addn(27),\n      // Recover the 27 which was stripped from ecsign\n      (0, ethereumjs_util_1.bnToUnpaddedBuffer)(r), (0, ethereumjs_util_1.bnToUnpaddedBuffer)(s));\n    } catch (e) {\n      throw new Error('Invalid Signature');\n    }\n  };\n  AccessListEIP2930Transaction.prototype._processSignature = function (v, r, s) {\n    var opts = {\n      common: this.common\n    };\n    return AccessListEIP2930Transaction.fromTxData({\n      chainId: this.chainId,\n      nonce: this.nonce,\n      gasPrice: this.gasPrice,\n      gasLimit: this.gasLimit,\n      to: this.to,\n      value: this.value,\n      data: this.data,\n      accessList: this.accessList,\n      v: new ethereumjs_util_1.BN(v - 27),\n      r: new ethereumjs_util_1.BN(r),\n      s: new ethereumjs_util_1.BN(s)\n    }, opts);\n  };\n  /**\n   * Returns an object with the JSON representation of the transaction\n   */\n  AccessListEIP2930Transaction.prototype.toJSON = function () {\n    var accessListJSON = util_1.AccessLists.getAccessListJSON(this.accessList);\n    return {\n      chainId: (0, ethereumjs_util_1.bnToHex)(this.chainId),\n      nonce: (0, ethereumjs_util_1.bnToHex)(this.nonce),\n      gasPrice: (0, ethereumjs_util_1.bnToHex)(this.gasPrice),\n      gasLimit: (0, ethereumjs_util_1.bnToHex)(this.gasLimit),\n      to: this.to !== undefined ? this.to.toString() : undefined,\n      value: (0, ethereumjs_util_1.bnToHex)(this.value),\n      data: '0x' + this.data.toString('hex'),\n      accessList: accessListJSON,\n      v: this.v !== undefined ? (0, ethereumjs_util_1.bnToHex)(this.v) : undefined,\n      r: this.r !== undefined ? (0, ethereumjs_util_1.bnToHex)(this.r) : undefined,\n      s: this.s !== undefined ? (0, ethereumjs_util_1.bnToHex)(this.s) : undefined\n    };\n  };\n  return AccessListEIP2930Transaction;\n}(baseTransaction_1.BaseTransaction);\nexports.default = AccessListEIP2930Transaction;","map":{"version":3,"names":["ethereumjs_util_1","require","baseTransaction_1","types_1","util_1","TRANSACTION_TYPE","TRANSACTION_TYPE_BUFFER","Buffer","from","toString","padStart","AccessListEIP2930Transaction","_super","__extends","txData","opts","_this","call","__assign","type","DEFAULT_HARDFORK","chainId","accessList","gasPrice","common","_getCommon","chainIdBN","isActivatedEIP","Error","activeCapabilities","concat","accessListData","AccessLists","getAccessListData","AccessListJSON","verifyAccessList","BN","toBuffer","_validateCannotExceedMaxInteger","v","eqn","gteHardfork","_a","s","gt","N_DIV_2","freeze","_b","Object","defineProperty","prototype","get","r","fromTxData","fromSerializedTx","serialized","slice","equals","values","rlp","decode","Array","isArray","fromValuesArray","fromRlpSerializedTx","length","__read","nonce","gasLimit","to","value","data","emptyAccessList","undefined","getDataFee","cost","iaddn","getDataFeeEIP2930","getUpfrontCost","mul","add","raw","bnToUnpaddedBuffer","buf","serialize","base","encode","getMessageToSign","hashMessage","message","keccak256","hash","isSigned","isFrozen","cache","getMessageToVerifySignature","getSenderPublicKey","msgHash","yParity","ecrecover","addn","e","_processSignature","toJSON","accessListJSON","getAccessListJSON","bnToHex","BaseTransaction"],"sources":["../src/eip2930Transaction.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script"}