{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AccessLists = void 0;\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\nvar types_1 = require(\"./types\");\nvar AccessLists = /** @class */function () {\n  function AccessLists() {}\n  AccessLists.getAccessListData = function (accessList) {\n    var AccessListJSON;\n    var bufferAccessList;\n    if (accessList && (0, types_1.isAccessList)(accessList)) {\n      AccessListJSON = accessList;\n      var newAccessList = [];\n      for (var i = 0; i < accessList.length; i++) {\n        var item = accessList[i];\n        var addressBuffer = (0, ethereumjs_util_1.toBuffer)(item.address);\n        var storageItems = [];\n        for (var index = 0; index < item.storageKeys.length; index++) {\n          storageItems.push((0, ethereumjs_util_1.toBuffer)(item.storageKeys[index]));\n        }\n        newAccessList.push([addressBuffer, storageItems]);\n      }\n      bufferAccessList = newAccessList;\n    } else {\n      bufferAccessList = accessList !== null && accessList !== void 0 ? accessList : [];\n      // build the JSON\n      var json = [];\n      for (var i = 0; i < bufferAccessList.length; i++) {\n        var data = bufferAccessList[i];\n        var address = (0, ethereumjs_util_1.bufferToHex)(data[0]);\n        var storageKeys = [];\n        for (var item = 0; item < data[1].length; item++) {\n          storageKeys.push((0, ethereumjs_util_1.bufferToHex)(data[1][item]));\n        }\n        var jsonItem = {\n          address: address,\n          storageKeys: storageKeys\n        };\n        json.push(jsonItem);\n      }\n      AccessListJSON = json;\n    }\n    return {\n      AccessListJSON: AccessListJSON,\n      accessList: bufferAccessList\n    };\n  };\n  AccessLists.verifyAccessList = function (accessList) {\n    for (var key = 0; key < accessList.length; key++) {\n      var accessListItem = accessList[key];\n      var address = accessListItem[0];\n      var storageSlots = accessListItem[1];\n      if (accessListItem[2] !== undefined) {\n        throw new Error('Access list item cannot have 3 elements. It can only have an address, and an array of storage slots.');\n      }\n      if (address.length != 20) {\n        throw new Error('Invalid EIP-2930 transaction: address length should be 20 bytes');\n      }\n      for (var storageSlot = 0; storageSlot < storageSlots.length; storageSlot++) {\n        if (storageSlots[storageSlot].length != 32) {\n          throw new Error('Invalid EIP-2930 transaction: storage slot length should be 32 bytes');\n        }\n      }\n    }\n  };\n  AccessLists.getAccessListJSON = function (accessList) {\n    var accessListJSON = [];\n    for (var index = 0; index < accessList.length; index++) {\n      var item = accessList[index];\n      var JSONItem = {\n        address: '0x' + (0, ethereumjs_util_1.setLengthLeft)(item[0], 20).toString('hex'),\n        storageKeys: []\n      };\n      var storageSlots = item[1];\n      for (var slot = 0; slot < storageSlots.length; slot++) {\n        var storageSlot = storageSlots[slot];\n        JSONItem.storageKeys.push('0x' + (0, ethereumjs_util_1.setLengthLeft)(storageSlot, 32).toString('hex'));\n      }\n      accessListJSON.push(JSONItem);\n    }\n    return accessListJSON;\n  };\n  AccessLists.getDataFeeEIP2930 = function (accessList, common) {\n    var accessListStorageKeyCost = common.param('gasPrices', 'accessListStorageKeyCost');\n    var accessListAddressCost = common.param('gasPrices', 'accessListAddressCost');\n    var slots = 0;\n    for (var index = 0; index < accessList.length; index++) {\n      var item = accessList[index];\n      var storageSlots = item[1];\n      slots += storageSlots.length;\n    }\n    var addresses = accessList.length;\n    return addresses * accessListAddressCost + slots * accessListStorageKeyCost;\n  };\n  return AccessLists;\n}();\nexports.AccessLists = AccessLists;","map":{"version":3,"names":["ethereumjs_util_1","require","types_1","AccessLists","getAccessListData","accessList","AccessListJSON","bufferAccessList","isAccessList","newAccessList","i","length","item","addressBuffer","toBuffer","address","storageItems","index","storageKeys","push","json","data","bufferToHex","jsonItem","verifyAccessList","key","accessListItem","storageSlots","undefined","Error","storageSlot","getAccessListJSON","accessListJSON","JSONItem","setLengthLeft","toString","slot","getDataFeeEIP2930","common","accessListStorageKeyCost","param","accessListAddressCost","slots","addresses","exports"],"sources":["../src/util.ts"],"sourcesContent":[null],"mappings":";;;;;;AACA,IAAAA,iBAAA,GAAAC,OAAA;AACA,IAAAC,OAAA,GAAAD,OAAA;AAEA,IAAAE,WAAA;EAAA,SAAAA,YAAA,GAiGA;EAhGgBA,WAAA,CAAAC,iBAAiB,GAA/B,UAAgCC,UAAyC;IACvE,IAAIC,cAAc;IAClB,IAAIC,gBAAgB;IACpB,IAAIF,UAAU,IAAI,IAAAH,OAAA,CAAAM,YAAY,EAACH,UAAU,CAAC,EAAE;MAC1CC,cAAc,GAAGD,UAAU;MAC3B,IAAMI,aAAa,GAAqB,EAAE;MAE1C,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,UAAU,CAACM,MAAM,EAAED,CAAC,EAAE,EAAE;QAC1C,IAAME,IAAI,GAAmBP,UAAU,CAACK,CAAC,CAAC;QAC1C,IAAMG,aAAa,GAAG,IAAAb,iBAAA,CAAAc,QAAQ,EAACF,IAAI,CAACG,OAAO,CAAC;QAC5C,IAAMC,YAAY,GAAa,EAAE;QACjC,KAAK,IAAIC,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGL,IAAI,CAACM,WAAW,CAACP,MAAM,EAAEM,KAAK,EAAE,EAAE;UAC5DD,YAAY,CAACG,IAAI,CAAC,IAAAnB,iBAAA,CAAAc,QAAQ,EAACF,IAAI,CAACM,WAAW,CAACD,KAAK,CAAC,CAAC,CAAC;;QAEtDR,aAAa,CAACU,IAAI,CAAC,CAACN,aAAa,EAAEG,YAAY,CAAC,CAAC;;MAEnDT,gBAAgB,GAAGE,aAAa;KACjC,MAAM;MACLF,gBAAgB,GAAGF,UAAU,aAAVA,UAAU,cAAVA,UAAU,GAAI,EAAE;MACnC;MACA,IAAMe,IAAI,GAAe,EAAE;MAC3B,KAAK,IAAIV,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,gBAAgB,CAACI,MAAM,EAAED,CAAC,EAAE,EAAE;QAChD,IAAMW,IAAI,GAAGd,gBAAgB,CAACG,CAAC,CAAC;QAChC,IAAMK,OAAO,GAAG,IAAAf,iBAAA,CAAAsB,WAAW,EAACD,IAAI,CAAC,CAAC,CAAC,CAAC;QACpC,IAAMH,WAAW,GAAa,EAAE;QAChC,KAAK,IAAIN,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAGS,IAAI,CAAC,CAAC,CAAC,CAACV,MAAM,EAAEC,IAAI,EAAE,EAAE;UAChDM,WAAW,CAACC,IAAI,CAAC,IAAAnB,iBAAA,CAAAsB,WAAW,EAACD,IAAI,CAAC,CAAC,CAAC,CAACT,IAAI,CAAC,CAAC,CAAC;;QAE9C,IAAMW,QAAQ,GAAmB;UAC/BR,OAAO,EAAAA,OAAA;UACPG,WAAW,EAAAA;SACZ;QACDE,IAAI,CAACD,IAAI,CAACI,QAAQ,CAAC;;MAErBjB,cAAc,GAAGc,IAAI;;IAGvB,OAAO;MACLd,cAAc,EAAAA,cAAA;MACdD,UAAU,EAAEE;KACb;EACH,CAAC;EAEaJ,WAAA,CAAAqB,gBAAgB,GAA9B,UAA+BnB,UAA4B;IACzD,KAAK,IAAIoB,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGpB,UAAU,CAACM,MAAM,EAAEc,GAAG,EAAE,EAAE;MAChD,IAAMC,cAAc,GAAGrB,UAAU,CAACoB,GAAG,CAAC;MACtC,IAAMV,OAAO,GAAWW,cAAc,CAAC,CAAC,CAAC;MACzC,IAAMC,YAAY,GAAaD,cAAc,CAAC,CAAC,CAAC;MAChD,IAAUA,cAAe,CAAC,CAAC,CAAC,KAAKE,SAAS,EAAE;QAC1C,MAAM,IAAIC,KAAK,CACb,sGAAsG,CACvG;;MAEH,IAAId,OAAO,CAACJ,MAAM,IAAI,EAAE,EAAE;QACxB,MAAM,IAAIkB,KAAK,CAAC,iEAAiE,CAAC;;MAEpF,KAAK,IAAIC,WAAW,GAAG,CAAC,EAAEA,WAAW,GAAGH,YAAY,CAAChB,MAAM,EAAEmB,WAAW,EAAE,EAAE;QAC1E,IAAIH,YAAY,CAACG,WAAW,CAAC,CAACnB,MAAM,IAAI,EAAE,EAAE;UAC1C,MAAM,IAAIkB,KAAK,CAAC,sEAAsE,CAAC;;;;EAI/F,CAAC;EAEa1B,WAAA,CAAA4B,iBAAiB,GAA/B,UAAgC1B,UAA4B;IAC1D,IAAM2B,cAAc,GAAG,EAAE;IACzB,KAAK,IAAIf,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGZ,UAAU,CAACM,MAAM,EAAEM,KAAK,EAAE,EAAE;MACtD,IAAML,IAAI,GAAQP,UAAU,CAACY,KAAK,CAAC;MACnC,IAAMgB,QAAQ,GAAQ;QACpBlB,OAAO,EAAE,IAAI,GAAG,IAAAf,iBAAA,CAAAkC,aAAa,EAAStB,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAACuB,QAAQ,CAAC,KAAK,CAAC;QAClEjB,WAAW,EAAE;OACd;MACD,IAAMS,YAAY,GAAaf,IAAI,CAAC,CAAC,CAAC;MACtC,KAAK,IAAIwB,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAGT,YAAY,CAAChB,MAAM,EAAEyB,IAAI,EAAE,EAAE;QACrD,IAAMN,WAAW,GAAGH,YAAY,CAACS,IAAI,CAAC;QACtCH,QAAQ,CAACf,WAAW,CAACC,IAAI,CAAC,IAAI,GAAG,IAAAnB,iBAAA,CAAAkC,aAAa,EAACJ,WAAW,EAAE,EAAE,CAAC,CAACK,QAAQ,CAAC,KAAK,CAAC,CAAC;;MAElFH,cAAc,CAACb,IAAI,CAACc,QAAQ,CAAC;;IAE/B,OAAOD,cAAc;EACvB,CAAC;EAEa7B,WAAA,CAAAkC,iBAAiB,GAA/B,UAAgChC,UAA4B,EAAEiC,MAAc;IAC1E,IAAMC,wBAAwB,GAAGD,MAAM,CAACE,KAAK,CAAC,WAAW,EAAE,0BAA0B,CAAC;IACtF,IAAMC,qBAAqB,GAAGH,MAAM,CAACE,KAAK,CAAC,WAAW,EAAE,uBAAuB,CAAC;IAEhF,IAAIE,KAAK,GAAG,CAAC;IACb,KAAK,IAAIzB,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGZ,UAAU,CAACM,MAAM,EAAEM,KAAK,EAAE,EAAE;MACtD,IAAML,IAAI,GAAGP,UAAU,CAACY,KAAK,CAAC;MAC9B,IAAMU,YAAY,GAAGf,IAAI,CAAC,CAAC,CAAC;MAC5B8B,KAAK,IAAIf,YAAY,CAAChB,MAAM;;IAG9B,IAAMgC,SAAS,GAAGtC,UAAU,CAACM,MAAM;IACnC,OAAOgC,SAAS,GAAGF,qBAAqB,GAAGC,KAAK,GAAGH,wBAAwB;EAC7E,CAAC;EACH,OAAApC,WAAC;AAAD,CAAC,CAjGD;AAAayC,OAAA,CAAAzC,WAAA,GAAAA,WAAA"},"metadata":{},"sourceType":"script"}