{"ast":null,"code":"'use strict';\n\nconst promisify = require('promisify-es6');\nconst PeerInfo = require('peer-info');\nconst PeerId = require('peer-id');\nconst multiaddr = require('multiaddr');\nmodule.exports = send => {\n  return promisify((opts, callback) => {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    send({\n      path: 'swarm/addrs',\n      qs: opts\n    }, (err, result) => {\n      if (err) {\n        return callback(err);\n      }\n      const peers = Object.keys(result.Addrs).map(id => {\n        const peerInfo = new PeerInfo(PeerId.createFromB58String(id));\n        result.Addrs[id].forEach(addr => {\n          peerInfo.multiaddrs.add(multiaddr(addr));\n        });\n        return peerInfo;\n      });\n      callback(null, peers);\n    });\n  });\n};","map":{"version":3,"names":["promisify","require","PeerInfo","PeerId","multiaddr","module","exports","send","opts","callback","path","qs","err","result","peers","Object","keys","Addrs","map","id","peerInfo","createFromB58String","forEach","addr","multiaddrs","add"],"sources":["C:/blockchain/Victus-health-assistant-main/Victus-health-assistant-main/node_modules/ipfs-http-client/src/swarm/addrs.js"],"sourcesContent":["'use strict'\n\nconst promisify = require('promisify-es6')\nconst PeerInfo = require('peer-info')\nconst PeerId = require('peer-id')\nconst multiaddr = require('multiaddr')\n\nmodule.exports = (send) => {\n  return promisify((opts, callback) => {\n    if (typeof (opts) === 'function') {\n      callback = opts\n      opts = {}\n    }\n    send({\n      path: 'swarm/addrs',\n      qs: opts\n    }, (err, result) => {\n      if (err) {\n        return callback(err)\n      }\n\n      const peers = Object.keys(result.Addrs).map((id) => {\n        const peerInfo = new PeerInfo(PeerId.createFromB58String(id))\n        result.Addrs[id].forEach((addr) => {\n          peerInfo.multiaddrs.add(multiaddr(addr))\n        })\n        return peerInfo\n      })\n\n      callback(null, peers)\n    })\n  })\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,SAAS,GAAGC,OAAO,CAAC,eAAe,CAAC;AAC1C,MAAMC,QAAQ,GAAGD,OAAO,CAAC,WAAW,CAAC;AACrC,MAAME,MAAM,GAAGF,OAAO,CAAC,SAAS,CAAC;AACjC,MAAMG,SAAS,GAAGH,OAAO,CAAC,WAAW,CAAC;AAEtCI,MAAM,CAACC,OAAO,GAAIC,IAAI,IAAK;EACzB,OAAOP,SAAS,CAAC,CAACQ,IAAI,EAAEC,QAAQ,KAAK;IACnC,IAAI,OAAQD,IAAK,KAAK,UAAU,EAAE;MAChCC,QAAQ,GAAGD,IAAI;MACfA,IAAI,GAAG,CAAC,CAAC;IACX;IACAD,IAAI,CAAC;MACHG,IAAI,EAAE,aAAa;MACnBC,EAAE,EAAEH;IACN,CAAC,EAAE,CAACI,GAAG,EAAEC,MAAM,KAAK;MAClB,IAAID,GAAG,EAAE;QACP,OAAOH,QAAQ,CAACG,GAAG,CAAC;MACtB;MAEA,MAAME,KAAK,GAAGC,MAAM,CAACC,IAAI,CAACH,MAAM,CAACI,KAAK,CAAC,CAACC,GAAG,CAAEC,EAAE,IAAK;QAClD,MAAMC,QAAQ,GAAG,IAAIlB,QAAQ,CAACC,MAAM,CAACkB,mBAAmB,CAACF,EAAE,CAAC,CAAC;QAC7DN,MAAM,CAACI,KAAK,CAACE,EAAE,CAAC,CAACG,OAAO,CAAEC,IAAI,IAAK;UACjCH,QAAQ,CAACI,UAAU,CAACC,GAAG,CAACrB,SAAS,CAACmB,IAAI,CAAC,CAAC;QAC1C,CAAC,CAAC;QACF,OAAOH,QAAQ;MACjB,CAAC,CAAC;MAEFX,QAAQ,CAAC,IAAI,EAAEK,KAAK,CAAC;IACvB,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"script"}