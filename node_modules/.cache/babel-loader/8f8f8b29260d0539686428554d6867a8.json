{"ast":null,"code":"'use strict';\n\nconst promisify = require('promisify-es6');\nconst Block = require('ipfs-block');\nconst CID = require('cids');\nconst multihash = require('multihashes');\nconst SendOneFile = require('../utils/send-one-file');\nmodule.exports = send => {\n  const sendOneFile = SendOneFile(send, 'block/put');\n  return promisify((block, options, callback) => {\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n    options = options || {};\n    if (Array.isArray(block)) {\n      return callback(new Error('block.put accepts only one block'));\n    }\n    if (Buffer.isBuffer(block)) {\n      block = {\n        data: block\n      };\n    }\n    if (!block || !block.data) {\n      return callback(new Error('invalid block arg'));\n    }\n    const qs = {};\n    if (block.cid || options.cid) {\n      let cid;\n      try {\n        cid = new CID(block.cid || options.cid);\n      } catch (err) {\n        return callback(err);\n      }\n      const {\n        name,\n        length\n      } = multihash.decode(cid.multihash);\n      qs.format = cid.codec;\n      qs.mhtype = name;\n      qs.mhlen = length;\n      qs.version = cid.version;\n    } else {\n      if (options.format) qs.format = options.format;\n      if (options.mhtype) qs.mhtype = options.mhtype;\n      if (options.mhlen) qs.mhlen = options.mhlen;\n      if (options.version != null) qs.version = options.version;\n    }\n    sendOneFile(block.data, {\n      qs\n    }, (err, result) => {\n      if (err) {\n        // Retry with \"protobuf\"/\"cbor\" format for go-ipfs\n        // TODO: remove when https://github.com/ipfs/go-cid/issues/75 resolved\n        if (qs.format === 'dag-pb' || qs.format === 'dag-cbor') {\n          qs.format = qs.format === 'dag-pb' ? 'protobuf' : 'cbor';\n          return sendOneFile(block.data, {\n            qs\n          }, (err, result) => {\n            if (err) return callback(err);\n            callback(null, new Block(block.data, new CID(result.Key)));\n          });\n        }\n        return callback(err);\n      }\n      callback(null, new Block(block.data, new CID(result.Key)));\n    });\n  });\n};","map":{"version":3,"names":["promisify","require","Block","CID","multihash","SendOneFile","module","exports","send","sendOneFile","block","options","callback","Array","isArray","Error","Buffer","isBuffer","data","qs","cid","err","name","length","decode","format","codec","mhtype","mhlen","version","result","Key"],"sources":["C:/blockchain/Victus-health-assistant-main/Victus-health-assistant-main/node_modules/ipfs-http-client/src/block/put.js"],"sourcesContent":["'use strict'\n\nconst promisify = require('promisify-es6')\nconst Block = require('ipfs-block')\nconst CID = require('cids')\nconst multihash = require('multihashes')\nconst SendOneFile = require('../utils/send-one-file')\n\nmodule.exports = (send) => {\n  const sendOneFile = SendOneFile(send, 'block/put')\n\n  return promisify((block, options, callback) => {\n    if (typeof options === 'function') {\n      callback = options\n      options = {}\n    }\n\n    options = options || {}\n\n    if (Array.isArray(block)) {\n      return callback(new Error('block.put accepts only one block'))\n    }\n\n    if (Buffer.isBuffer(block)) {\n      block = { data: block }\n    }\n\n    if (!block || !block.data) {\n      return callback(new Error('invalid block arg'))\n    }\n\n    const qs = {}\n\n    if (block.cid || options.cid) {\n      let cid\n\n      try {\n        cid = new CID(block.cid || options.cid)\n      } catch (err) {\n        return callback(err)\n      }\n\n      const { name, length } = multihash.decode(cid.multihash)\n\n      qs.format = cid.codec\n      qs.mhtype = name\n      qs.mhlen = length\n      qs.version = cid.version\n    } else {\n      if (options.format) qs.format = options.format\n      if (options.mhtype) qs.mhtype = options.mhtype\n      if (options.mhlen) qs.mhlen = options.mhlen\n      if (options.version != null) qs.version = options.version\n    }\n\n    sendOneFile(block.data, { qs }, (err, result) => {\n      if (err) {\n        // Retry with \"protobuf\"/\"cbor\" format for go-ipfs\n        // TODO: remove when https://github.com/ipfs/go-cid/issues/75 resolved\n        if (qs.format === 'dag-pb' || qs.format === 'dag-cbor') {\n          qs.format = qs.format === 'dag-pb' ? 'protobuf' : 'cbor'\n          return sendOneFile(block.data, { qs }, (err, result) => {\n            if (err) return callback(err)\n            callback(null, new Block(block.data, new CID(result.Key)))\n          })\n        }\n\n        return callback(err)\n      }\n\n      callback(null, new Block(block.data, new CID(result.Key)))\n    })\n  })\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}