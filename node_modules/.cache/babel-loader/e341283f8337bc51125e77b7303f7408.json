{"ast":null,"code":"'use strict';\n\nconst promisify = require('promisify-es6');\nconst CID = require('cids');\nmodule.exports = send => {\n  return promisify((cid, opts, callback) => {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    try {\n      cid = new CID(cid);\n    } catch (err) {\n      return callback(err);\n    }\n    send({\n      path: 'bitswap/unwant',\n      args: cid.toBaseEncodedString(),\n      qs: opts\n    }, callback);\n  });\n};","map":{"version":3,"names":["promisify","require","CID","module","exports","send","cid","opts","callback","err","path","args","toBaseEncodedString","qs"],"sources":["C:/blockchain/Victus-health-assistant-main/Victus-health-assistant-main/node_modules/ipfs-http-client/src/bitswap/unwant.js"],"sourcesContent":["'use strict'\n\nconst promisify = require('promisify-es6')\nconst CID = require('cids')\n\nmodule.exports = (send) => {\n  return promisify((cid, opts, callback) => {\n    if (typeof (opts) === 'function') {\n      callback = opts\n      opts = {}\n    }\n\n    try {\n      cid = new CID(cid)\n    } catch (err) {\n      return callback(err)\n    }\n\n    send({\n      path: 'bitswap/unwant',\n      args: cid.toBaseEncodedString(),\n      qs: opts\n    }, callback)\n  })\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,SAAS,GAAGC,OAAO,CAAC,eAAe,CAAC;AAC1C,MAAMC,GAAG,GAAGD,OAAO,CAAC,MAAM,CAAC;AAE3BE,MAAM,CAACC,OAAO,GAAIC,IAAI,IAAK;EACzB,OAAOL,SAAS,CAAC,CAACM,GAAG,EAAEC,IAAI,EAAEC,QAAQ,KAAK;IACxC,IAAI,OAAQD,IAAK,KAAK,UAAU,EAAE;MAChCC,QAAQ,GAAGD,IAAI;MACfA,IAAI,GAAG,CAAC,CAAC;IACX;IAEA,IAAI;MACFD,GAAG,GAAG,IAAIJ,GAAG,CAACI,GAAG,CAAC;IACpB,CAAC,CAAC,OAAOG,GAAG,EAAE;MACZ,OAAOD,QAAQ,CAACC,GAAG,CAAC;IACtB;IAEAJ,IAAI,CAAC;MACHK,IAAI,EAAE,gBAAgB;MACtBC,IAAI,EAAEL,GAAG,CAACM,mBAAmB,CAAC,CAAC;MAC/BC,EAAE,EAAEN;IACN,CAAC,EAAEC,QAAQ,CAAC;EACd,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"script"}