{"ast":null,"code":"'use strict';\n\nconst promisify = require('promisify-es6');\nconst multiaddr = require('multiaddr');\nmodule.exports = send => {\n  return promisify((opts, callback) => {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    send({\n      path: 'swarm/addrs/local',\n      qs: opts\n    }, (err, result) => {\n      if (err) {\n        return callback(err);\n      }\n      callback(null, result.Strings.map(addr => {\n        return multiaddr(addr);\n      }));\n    });\n  });\n};","map":{"version":3,"names":["promisify","require","multiaddr","module","exports","send","opts","callback","path","qs","err","result","Strings","map","addr"],"sources":["C:/blockchain/Victus-health-assistant-main/Victus-health-assistant-main/node_modules/ipfs-http-client/src/swarm/localAddrs.js"],"sourcesContent":["'use strict'\n\nconst promisify = require('promisify-es6')\nconst multiaddr = require('multiaddr')\n\nmodule.exports = (send) => {\n  return promisify((opts, callback) => {\n    if (typeof (opts) === 'function') {\n      callback = opts\n      opts = {}\n    }\n    send({\n      path: 'swarm/addrs/local',\n      qs: opts\n    }, (err, result) => {\n      if (err) {\n        return callback(err)\n      }\n      callback(null, result.Strings.map((addr) => {\n        return multiaddr(addr)\n      }))\n    })\n  })\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,SAAS,GAAGC,OAAO,CAAC,eAAe,CAAC;AAC1C,MAAMC,SAAS,GAAGD,OAAO,CAAC,WAAW,CAAC;AAEtCE,MAAM,CAACC,OAAO,GAAIC,IAAI,IAAK;EACzB,OAAOL,SAAS,CAAC,CAACM,IAAI,EAAEC,QAAQ,KAAK;IACnC,IAAI,OAAQD,IAAK,KAAK,UAAU,EAAE;MAChCC,QAAQ,GAAGD,IAAI;MACfA,IAAI,GAAG,CAAC,CAAC;IACX;IACAD,IAAI,CAAC;MACHG,IAAI,EAAE,mBAAmB;MACzBC,EAAE,EAAEH;IACN,CAAC,EAAE,CAACI,GAAG,EAAEC,MAAM,KAAK;MAClB,IAAID,GAAG,EAAE;QACP,OAAOH,QAAQ,CAACG,GAAG,CAAC;MACtB;MACAH,QAAQ,CAAC,IAAI,EAAEI,MAAM,CAACC,OAAO,CAACC,GAAG,CAAEC,IAAI,IAAK;QAC1C,OAAOZ,SAAS,CAACY,IAAI,CAAC;MACxB,CAAC,CAAC,CAAC;IACL,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"script"}