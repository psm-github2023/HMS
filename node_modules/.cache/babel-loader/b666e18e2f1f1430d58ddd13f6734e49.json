{"ast":null,"code":"'use strict';\n\nmodule.exports = args => {\n  const callback = args.pop();\n  let opts = {};\n  let sources = [];\n  if (!Array.isArray(args[args.length - 1]) && typeof args[args.length - 1] === 'object') {\n    opts = args.pop();\n  }\n  if (args.length === 1 && Array.isArray(args[0])) {\n    // support ipfs.file.cp([src, dest], opts, cb)\n    sources = args[0];\n  } else {\n    // support ipfs.file.cp(src, dest, opts, cb) and ipfs.file.cp(src1, src2, dest, opts, cb)\n    sources = args;\n  }\n  return {\n    callback,\n    sources,\n    opts\n  };\n};","map":{"version":3,"names":["module","exports","args","callback","pop","opts","sources","Array","isArray","length"],"sources":["C:/blockchain/Victus-health-assistant-main/Victus-health-assistant-main/node_modules/ipfs-http-client/src/utils/find-sources.js"],"sourcesContent":["'use strict'\n\nmodule.exports = (args) => {\n  const callback = args.pop()\n  let opts = {}\n  let sources = []\n\n  if (!Array.isArray(args[args.length - 1]) && typeof args[args.length - 1] === 'object') {\n    opts = args.pop()\n  }\n\n  if (args.length === 1 && Array.isArray(args[0])) {\n    // support ipfs.file.cp([src, dest], opts, cb)\n    sources = args[0]\n  } else {\n    // support ipfs.file.cp(src, dest, opts, cb) and ipfs.file.cp(src1, src2, dest, opts, cb)\n    sources = args\n  }\n\n  return {\n    callback,\n    sources,\n    opts\n  }\n}\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,OAAO,GAAIC,IAAI,IAAK;EACzB,MAAMC,QAAQ,GAAGD,IAAI,CAACE,GAAG,CAAC,CAAC;EAC3B,IAAIC,IAAI,GAAG,CAAC,CAAC;EACb,IAAIC,OAAO,GAAG,EAAE;EAEhB,IAAI,CAACC,KAAK,CAACC,OAAO,CAACN,IAAI,CAACA,IAAI,CAACO,MAAM,GAAG,CAAC,CAAC,CAAC,IAAI,OAAOP,IAAI,CAACA,IAAI,CAACO,MAAM,GAAG,CAAC,CAAC,KAAK,QAAQ,EAAE;IACtFJ,IAAI,GAAGH,IAAI,CAACE,GAAG,CAAC,CAAC;EACnB;EAEA,IAAIF,IAAI,CAACO,MAAM,KAAK,CAAC,IAAIF,KAAK,CAACC,OAAO,CAACN,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;IAC/C;IACAI,OAAO,GAAGJ,IAAI,CAAC,CAAC,CAAC;EACnB,CAAC,MAAM;IACL;IACAI,OAAO,GAAGJ,IAAI;EAChB;EAEA,OAAO;IACLC,QAAQ;IACRG,OAAO;IACPD;EACF,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"script"}