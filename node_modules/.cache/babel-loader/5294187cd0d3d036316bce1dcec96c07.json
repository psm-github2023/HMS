{"ast":null,"code":"'use strict';\n\n/**\n * Make certain getters enumnerable\n *\n * This can be used to add additional getters that are enumerable and hence\n * show up on an `Object.keys()` call.\n *\n * @param {Object} object - The object it should be applied to\n * @param {Array.<String>} fields - The fields that should be made enumnerable\n */\nconst addEnumerableGetters = (object, fields) => {\n  for (const field of fields) {\n    let prop;\n    let proto = object;\n    // Walk up the proottype chain until a property with the given name is\n    // found\n    while (prop === undefined) {\n      proto = Object.getPrototypeOf(proto);\n      if (proto === null) {\n        throw new Error(`no getter named '${field}' found`);\n      }\n      prop = Object.getOwnPropertyDescriptor(proto, field);\n    }\n\n    // There is a property with the correct name, but it's not a getter\n    if (prop.get === undefined) {\n      throw new Error(`no getter named '${field}' found`);\n    }\n    Object.defineProperty(object, field, {\n      enumerable: true,\n      get: prop.get\n    });\n  }\n};\n\n/**\n * Makes all properties with a leading underscore non-enumerable.\n *\n * @param {Object} object - The object it should be applied to\n */\nconst hidePrivateFields = object => {\n  for (const key in object) {\n    if (key[0] === '_') {\n      Object.defineProperty(object, key, {\n        enumerable: false\n      });\n    }\n  }\n};\nmodule.exports = {\n  addEnumerableGetters,\n  hidePrivateFields\n};","map":{"version":3,"names":["addEnumerableGetters","object","fields","field","prop","proto","undefined","Object","getPrototypeOf","Error","getOwnPropertyDescriptor","get","defineProperty","enumerable","hidePrivateFields","key","module","exports"],"sources":["C:/blockchain/Victus-health-assistant-main/Victus-health-assistant-main/node_modules/ipld-dag-pb/src/visibility.js"],"sourcesContent":["'use strict'\n\n/**\n * Make certain getters enumnerable\n *\n * This can be used to add additional getters that are enumerable and hence\n * show up on an `Object.keys()` call.\n *\n * @param {Object} object - The object it should be applied to\n * @param {Array.<String>} fields - The fields that should be made enumnerable\n */\nconst addEnumerableGetters = (object, fields) => {\n  for (const field of fields) {\n    let prop\n    let proto = object\n    // Walk up the proottype chain until a property with the given name is\n    // found\n    while (prop === undefined) {\n      proto = Object.getPrototypeOf(proto)\n      if (proto === null) {\n        throw new Error(`no getter named '${field}' found`)\n      }\n      prop = Object.getOwnPropertyDescriptor(proto, field)\n    }\n\n    // There is a property with the correct name, but it's not a getter\n    if (prop.get === undefined) {\n      throw new Error(`no getter named '${field}' found`)\n    }\n    Object.defineProperty(object, field, {\n      enumerable: true,\n      get: prop.get\n    })\n  }\n}\n\n/**\n * Makes all properties with a leading underscore non-enumerable.\n *\n * @param {Object} object - The object it should be applied to\n */\nconst hidePrivateFields = (object) => {\n  for (const key in object) {\n    if (key[0] === '_') {\n      Object.defineProperty(object, key, { enumerable: false })\n    }\n  }\n}\n\nmodule.exports = {\n  addEnumerableGetters,\n  hidePrivateFields\n}\n"],"mappings":"AAAA,YAAY;;AAEZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,oBAAoB,GAAGA,CAACC,MAAM,EAAEC,MAAM,KAAK;EAC/C,KAAK,MAAMC,KAAK,IAAID,MAAM,EAAE;IAC1B,IAAIE,IAAI;IACR,IAAIC,KAAK,GAAGJ,MAAM;IAClB;IACA;IACA,OAAOG,IAAI,KAAKE,SAAS,EAAE;MACzBD,KAAK,GAAGE,MAAM,CAACC,cAAc,CAACH,KAAK,CAAC;MACpC,IAAIA,KAAK,KAAK,IAAI,EAAE;QAClB,MAAM,IAAII,KAAK,CAAE,oBAAmBN,KAAM,SAAQ,CAAC;MACrD;MACAC,IAAI,GAAGG,MAAM,CAACG,wBAAwB,CAACL,KAAK,EAAEF,KAAK,CAAC;IACtD;;IAEA;IACA,IAAIC,IAAI,CAACO,GAAG,KAAKL,SAAS,EAAE;MAC1B,MAAM,IAAIG,KAAK,CAAE,oBAAmBN,KAAM,SAAQ,CAAC;IACrD;IACAI,MAAM,CAACK,cAAc,CAACX,MAAM,EAAEE,KAAK,EAAE;MACnCU,UAAU,EAAE,IAAI;MAChBF,GAAG,EAAEP,IAAI,CAACO;IACZ,CAAC,CAAC;EACJ;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,MAAMG,iBAAiB,GAAIb,MAAM,IAAK;EACpC,KAAK,MAAMc,GAAG,IAAId,MAAM,EAAE;IACxB,IAAIc,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;MAClBR,MAAM,CAACK,cAAc,CAACX,MAAM,EAAEc,GAAG,EAAE;QAAEF,UAAU,EAAE;MAAM,CAAC,CAAC;IAC3D;EACF;AACF,CAAC;AAEDG,MAAM,CAACC,OAAO,GAAG;EACfjB,oBAAoB;EACpBc;AACF,CAAC"},"metadata":{},"sourceType":"script"}