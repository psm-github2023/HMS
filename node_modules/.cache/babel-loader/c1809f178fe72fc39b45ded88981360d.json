{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport * as React from 'react';\nimport findDOMNode from \"rc-util/es/Dom/findDOMNode\";\nimport toArray from \"rc-util/es/Children/toArray\";\nimport warning from \"rc-util/es/warning\";\nimport { composeRef, supportRef } from \"rc-util/es/ref\";\nimport ResizeObserver from 'resize-observer-polyfill';\nvar INTERNAL_PREFIX_KEY = 'rc-observer-key'; // Still need to be compatible with React 15, we use class component here\n\nvar ReactResizeObserver = /*#__PURE__*/function (_React$Component) {\n  _inherits(ReactResizeObserver, _React$Component);\n  var _super = _createSuper(ReactResizeObserver);\n  function ReactResizeObserver() {\n    var _this;\n    _classCallCheck(this, ReactResizeObserver);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.resizeObserver = null;\n    _this.childNode = null;\n    _this.currentElement = null;\n    _this.state = {\n      width: 0,\n      height: 0,\n      offsetHeight: 0,\n      offsetWidth: 0\n    };\n    _this.onResize = function (entries) {\n      var onResize = _this.props.onResize;\n      var target = entries[0].target;\n      var _target$getBoundingCl = target.getBoundingClientRect(),\n        width = _target$getBoundingCl.width,\n        height = _target$getBoundingCl.height;\n      var offsetWidth = target.offsetWidth,\n        offsetHeight = target.offsetHeight;\n      /**\n       * Resize observer trigger when content size changed.\n       * In most case we just care about element size,\n       * let's use `boundary` instead of `contentRect` here to avoid shaking.\n       */\n\n      var fixedWidth = Math.floor(width);\n      var fixedHeight = Math.floor(height);\n      if (_this.state.width !== fixedWidth || _this.state.height !== fixedHeight || _this.state.offsetWidth !== offsetWidth || _this.state.offsetHeight !== offsetHeight) {\n        var size = {\n          width: fixedWidth,\n          height: fixedHeight,\n          offsetWidth: offsetWidth,\n          offsetHeight: offsetHeight\n        };\n        _this.setState(size);\n        if (onResize) {\n          var mergedOffsetWidth = offsetWidth === Math.round(width) ? width : offsetWidth;\n          var mergedOffsetHeight = offsetHeight === Math.round(height) ? height : offsetHeight; // defer the callback but not defer to next frame\n\n          Promise.resolve().then(function () {\n            onResize(_objectSpread(_objectSpread({}, size), {}, {\n              offsetWidth: mergedOffsetWidth,\n              offsetHeight: mergedOffsetHeight\n            }), target);\n          });\n        }\n      }\n    };\n    _this.setChildNode = function (node) {\n      _this.childNode = node;\n    };\n    return _this;\n  }\n  _createClass(ReactResizeObserver, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.onComponentUpdated();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.onComponentUpdated();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.destroyObserver();\n    }\n  }, {\n    key: \"onComponentUpdated\",\n    value: function onComponentUpdated() {\n      var disabled = this.props.disabled; // Unregister if disabled\n\n      if (disabled) {\n        this.destroyObserver();\n        return;\n      } // Unregister if element changed\n\n      var element = findDOMNode(this.childNode || this);\n      var elementChanged = element !== this.currentElement;\n      if (elementChanged) {\n        this.destroyObserver();\n        this.currentElement = element;\n      }\n      if (!this.resizeObserver && element) {\n        this.resizeObserver = new ResizeObserver(this.onResize);\n        this.resizeObserver.observe(element);\n      }\n    }\n  }, {\n    key: \"destroyObserver\",\n    value: function destroyObserver() {\n      if (this.resizeObserver) {\n        this.resizeObserver.disconnect();\n        this.resizeObserver = null;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var childNodes = toArray(children);\n      if (childNodes.length > 1) {\n        warning(false, 'Find more than one child node with `children` in ResizeObserver. Will only observe first one.');\n      } else if (childNodes.length === 0) {\n        warning(false, '`children` of ResizeObserver is empty. Nothing is in observe.');\n        return null;\n      }\n      var childNode = childNodes[0];\n      if ( /*#__PURE__*/React.isValidElement(childNode) && supportRef(childNode)) {\n        var ref = childNode.ref;\n        childNodes[0] = /*#__PURE__*/React.cloneElement(childNode, {\n          ref: composeRef(ref, this.setChildNode)\n        });\n      }\n      return childNodes.length === 1 ? childNodes[0] : childNodes.map(function (node, index) {\n        if (! /*#__PURE__*/React.isValidElement(node) || 'key' in node && node.key !== null) {\n          return node;\n        }\n        return /*#__PURE__*/React.cloneElement(node, {\n          key: \"\".concat(INTERNAL_PREFIX_KEY, \"-\").concat(index)\n        });\n      });\n    }\n  }]);\n  return ReactResizeObserver;\n}(React.Component);\nReactResizeObserver.displayName = 'ResizeObserver';\nexport default ReactResizeObserver;","map":{"version":3,"names":["_objectSpread","_classCallCheck","_createClass","_inherits","_createSuper","React","findDOMNode","toArray","warning","composeRef","supportRef","ResizeObserver","INTERNAL_PREFIX_KEY","ReactResizeObserver","_React$Component","_super","_this","_len","arguments","length","args","Array","_key","call","apply","concat","resizeObserver","childNode","currentElement","state","width","height","offsetHeight","offsetWidth","onResize","entries","props","target","_target$getBoundingCl","getBoundingClientRect","fixedWidth","Math","floor","fixedHeight","size","setState","mergedOffsetWidth","round","mergedOffsetHeight","Promise","resolve","then","setChildNode","node","key","value","componentDidMount","onComponentUpdated","componentDidUpdate","componentWillUnmount","destroyObserver","disabled","element","elementChanged","observe","disconnect","render","children","childNodes","isValidElement","ref","cloneElement","map","index","Component","displayName"],"sources":["C:/blockchain/Victus-health-assistant-main/Victus-health-assistant-main/node_modules/rc-resize-observer/es/index.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport * as React from 'react';\nimport findDOMNode from \"rc-util/es/Dom/findDOMNode\";\nimport toArray from \"rc-util/es/Children/toArray\";\nimport warning from \"rc-util/es/warning\";\nimport { composeRef, supportRef } from \"rc-util/es/ref\";\nimport ResizeObserver from 'resize-observer-polyfill';\nvar INTERNAL_PREFIX_KEY = 'rc-observer-key'; // Still need to be compatible with React 15, we use class component here\n\nvar ReactResizeObserver = /*#__PURE__*/function (_React$Component) {\n  _inherits(ReactResizeObserver, _React$Component);\n\n  var _super = _createSuper(ReactResizeObserver);\n\n  function ReactResizeObserver() {\n    var _this;\n\n    _classCallCheck(this, ReactResizeObserver);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.resizeObserver = null;\n    _this.childNode = null;\n    _this.currentElement = null;\n    _this.state = {\n      width: 0,\n      height: 0,\n      offsetHeight: 0,\n      offsetWidth: 0\n    };\n\n    _this.onResize = function (entries) {\n      var onResize = _this.props.onResize;\n      var target = entries[0].target;\n\n      var _target$getBoundingCl = target.getBoundingClientRect(),\n          width = _target$getBoundingCl.width,\n          height = _target$getBoundingCl.height;\n\n      var offsetWidth = target.offsetWidth,\n          offsetHeight = target.offsetHeight;\n      /**\n       * Resize observer trigger when content size changed.\n       * In most case we just care about element size,\n       * let's use `boundary` instead of `contentRect` here to avoid shaking.\n       */\n\n      var fixedWidth = Math.floor(width);\n      var fixedHeight = Math.floor(height);\n\n      if (_this.state.width !== fixedWidth || _this.state.height !== fixedHeight || _this.state.offsetWidth !== offsetWidth || _this.state.offsetHeight !== offsetHeight) {\n        var size = {\n          width: fixedWidth,\n          height: fixedHeight,\n          offsetWidth: offsetWidth,\n          offsetHeight: offsetHeight\n        };\n\n        _this.setState(size);\n\n        if (onResize) {\n          var mergedOffsetWidth = offsetWidth === Math.round(width) ? width : offsetWidth;\n          var mergedOffsetHeight = offsetHeight === Math.round(height) ? height : offsetHeight; // defer the callback but not defer to next frame\n\n          Promise.resolve().then(function () {\n            onResize(_objectSpread(_objectSpread({}, size), {}, {\n              offsetWidth: mergedOffsetWidth,\n              offsetHeight: mergedOffsetHeight\n            }), target);\n          });\n        }\n      }\n    };\n\n    _this.setChildNode = function (node) {\n      _this.childNode = node;\n    };\n\n    return _this;\n  }\n\n  _createClass(ReactResizeObserver, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.onComponentUpdated();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.onComponentUpdated();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.destroyObserver();\n    }\n  }, {\n    key: \"onComponentUpdated\",\n    value: function onComponentUpdated() {\n      var disabled = this.props.disabled; // Unregister if disabled\n\n      if (disabled) {\n        this.destroyObserver();\n        return;\n      } // Unregister if element changed\n\n\n      var element = findDOMNode(this.childNode || this);\n      var elementChanged = element !== this.currentElement;\n\n      if (elementChanged) {\n        this.destroyObserver();\n        this.currentElement = element;\n      }\n\n      if (!this.resizeObserver && element) {\n        this.resizeObserver = new ResizeObserver(this.onResize);\n        this.resizeObserver.observe(element);\n      }\n    }\n  }, {\n    key: \"destroyObserver\",\n    value: function destroyObserver() {\n      if (this.resizeObserver) {\n        this.resizeObserver.disconnect();\n        this.resizeObserver = null;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var childNodes = toArray(children);\n\n      if (childNodes.length > 1) {\n        warning(false, 'Find more than one child node with `children` in ResizeObserver. Will only observe first one.');\n      } else if (childNodes.length === 0) {\n        warning(false, '`children` of ResizeObserver is empty. Nothing is in observe.');\n        return null;\n      }\n\n      var childNode = childNodes[0];\n\n      if ( /*#__PURE__*/React.isValidElement(childNode) && supportRef(childNode)) {\n        var ref = childNode.ref;\n        childNodes[0] = /*#__PURE__*/React.cloneElement(childNode, {\n          ref: composeRef(ref, this.setChildNode)\n        });\n      }\n\n      return childNodes.length === 1 ? childNodes[0] : childNodes.map(function (node, index) {\n        if (! /*#__PURE__*/React.isValidElement(node) || 'key' in node && node.key !== null) {\n          return node;\n        }\n\n        return /*#__PURE__*/React.cloneElement(node, {\n          key: \"\".concat(INTERNAL_PREFIX_KEY, \"-\").concat(index)\n        });\n      });\n    }\n  }]);\n\n  return ReactResizeObserver;\n}(React.Component);\n\nReactResizeObserver.displayName = 'ResizeObserver';\nexport default ReactResizeObserver;"],"mappings":"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"},"metadata":{},"sourceType":"module"}