{"ast":null,"code":"'use strict';\n\nconst cleanCID = require('../utils/clean-cid');\nconst TarStreamToObjects = require('../utils/tar-stream-to-objects');\nconst v = require('is-ipfs');\nconst Stream = require('readable-stream');\nconst pump = require('pump');\nmodule.exports = send => {\n  return (path, opts) => {\n    opts = opts || {};\n    const pt = new Stream.PassThrough({\n      objectMode: true\n    });\n    try {\n      path = cleanCID(path);\n    } catch (err) {\n      if (!v.ipfsPath(path)) {\n        return pt.destroy(err);\n      }\n    }\n    const request = {\n      path: 'get',\n      args: path,\n      qs: opts\n    };\n\n    // Convert the response stream to TarStream objects\n    send.andTransform(request, TarStreamToObjects, (err, stream) => {\n      if (err) {\n        return pt.destroy(err);\n      }\n      pump(stream, pt);\n    });\n    return pt;\n  };\n};","map":{"version":3,"names":["cleanCID","require","TarStreamToObjects","v","Stream","pump","module","exports","send","path","opts","pt","PassThrough","objectMode","err","ipfsPath","destroy","request","args","qs","andTransform","stream"],"sources":["C:/blockchain/Victus-health-assistant-main/Victus-health-assistant-main/node_modules/ipfs-http-client/src/files-regular/get-readable-stream.js"],"sourcesContent":["'use strict'\n\nconst cleanCID = require('../utils/clean-cid')\nconst TarStreamToObjects = require('../utils/tar-stream-to-objects')\nconst v = require('is-ipfs')\nconst Stream = require('readable-stream')\nconst pump = require('pump')\n\nmodule.exports = (send) => {\n  return (path, opts) => {\n    opts = opts || {}\n\n    const pt = new Stream.PassThrough({ objectMode: true })\n\n    try {\n      path = cleanCID(path)\n    } catch (err) {\n      if (!v.ipfsPath(path)) {\n        return pt.destroy(err)\n      }\n    }\n\n    const request = { path: 'get', args: path, qs: opts }\n\n    // Convert the response stream to TarStream objects\n    send.andTransform(request, TarStreamToObjects, (err, stream) => {\n      if (err) { return pt.destroy(err) }\n\n      pump(stream, pt)\n    })\n\n    return pt\n  }\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,QAAQ,GAAGC,OAAO,CAAC,oBAAoB,CAAC;AAC9C,MAAMC,kBAAkB,GAAGD,OAAO,CAAC,gCAAgC,CAAC;AACpE,MAAME,CAAC,GAAGF,OAAO,CAAC,SAAS,CAAC;AAC5B,MAAMG,MAAM,GAAGH,OAAO,CAAC,iBAAiB,CAAC;AACzC,MAAMI,IAAI,GAAGJ,OAAO,CAAC,MAAM,CAAC;AAE5BK,MAAM,CAACC,OAAO,GAAIC,IAAI,IAAK;EACzB,OAAO,CAACC,IAAI,EAAEC,IAAI,KAAK;IACrBA,IAAI,GAAGA,IAAI,IAAI,CAAC,CAAC;IAEjB,MAAMC,EAAE,GAAG,IAAIP,MAAM,CAACQ,WAAW,CAAC;MAAEC,UAAU,EAAE;IAAK,CAAC,CAAC;IAEvD,IAAI;MACFJ,IAAI,GAAGT,QAAQ,CAACS,IAAI,CAAC;IACvB,CAAC,CAAC,OAAOK,GAAG,EAAE;MACZ,IAAI,CAACX,CAAC,CAACY,QAAQ,CAACN,IAAI,CAAC,EAAE;QACrB,OAAOE,EAAE,CAACK,OAAO,CAACF,GAAG,CAAC;MACxB;IACF;IAEA,MAAMG,OAAO,GAAG;MAAER,IAAI,EAAE,KAAK;MAAES,IAAI,EAAET,IAAI;MAAEU,EAAE,EAAET;IAAK,CAAC;;IAErD;IACAF,IAAI,CAACY,YAAY,CAACH,OAAO,EAAEf,kBAAkB,EAAE,CAACY,GAAG,EAAEO,MAAM,KAAK;MAC9D,IAAIP,GAAG,EAAE;QAAE,OAAOH,EAAE,CAACK,OAAO,CAACF,GAAG,CAAC;MAAC;MAElCT,IAAI,CAACgB,MAAM,EAAEV,EAAE,CAAC;IAClB,CAAC,CAAC;IAEF,OAAOA,EAAE;EACX,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"script"}