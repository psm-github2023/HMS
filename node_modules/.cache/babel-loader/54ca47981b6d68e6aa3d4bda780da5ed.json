{"ast":null,"code":"'use strict';\n\nvar Buffer = require('safe-buffer').Buffer;\nvar optimized = require('./optimized');\nfunction BN() {\n  this.negative = 0;\n  this.words = null;\n  this.length = 0;\n}\nBN.fromNumber = function (n) {\n  var bn = new BN();\n  bn.words = [n & 0x03ffffff];\n  bn.length = 1;\n  return bn;\n};\nBN.fromBuffer = function (b32) {\n  var bn = new BN();\n  bn.words = new Array(10);\n  bn.words[0] = (b32[28] & 0x03) << 24 | b32[29] << 16 | b32[30] << 8 | b32[31];\n  bn.words[1] = (b32[25] & 0x0F) << 22 | b32[26] << 14 | b32[27] << 6 | b32[28] >>> 2;\n  bn.words[2] = (b32[22] & 0x3F) << 20 | b32[23] << 12 | b32[24] << 4 | b32[25] >>> 4;\n  bn.words[3] = (b32[19] & 0xFF) << 18 | b32[20] << 10 | b32[21] << 2 | b32[22] >>> 6;\n  bn.words[4] = (b32[15] & 0x03) << 24 | b32[16] << 16 | b32[17] << 8 | b32[18];\n  bn.words[5] = (b32[12] & 0x0F) << 22 | b32[13] << 14 | b32[14] << 6 | b32[15] >>> 2;\n  bn.words[6] = (b32[9] & 0x3F) << 20 | b32[10] << 12 | b32[11] << 4 | b32[12] >>> 4;\n  bn.words[7] = (b32[6] & 0xFF) << 18 | b32[7] << 10 | b32[8] << 2 | b32[9] >>> 6;\n  bn.words[8] = (b32[2] & 0x03) << 24 | b32[3] << 16 | b32[4] << 8 | b32[5];\n  bn.words[9] = b32[0] << 14 | b32[1] << 6 | b32[2] >>> 2;\n  bn.length = 10;\n  return bn.strip();\n};\nBN.prototype.toBuffer = function () {\n  var w = this.words;\n  for (var i = this.length; i < 10; ++i) w[i] = 0;\n  return Buffer.from([w[9] >>> 14 & 0xFF, w[9] >>> 6 & 0xFF, (w[9] & 0x3F) << 2 | w[8] >>> 24 & 0x03,\n  // 0, 1, 2\n  w[8] >>> 16 & 0xFF, w[8] >>> 8 & 0xFF, w[8] & 0xFF,\n  // 3, 4, 5\n\n  w[7] >>> 18 & 0xFF, w[7] >>> 10 & 0xFF, w[7] >>> 2 & 0xFF,\n  // 6, 7, 8\n  (w[7] & 0x03) << 6 | w[6] >>> 20 & 0x3F, w[6] >>> 12 & 0xFF, w[6] >>> 4 & 0xFF,\n  // 9, 10, 11\n  (w[6] & 0x0F) << 4 | w[5] >>> 22 & 0x0F, w[5] >>> 14 & 0xFF, w[5] >>> 6 & 0xFF,\n  // 12, 13, 14\n  (w[5] & 0x3F) << 2 | w[4] >>> 24 & 0x03, w[4] >>> 16 & 0xFF, w[4] >>> 8 & 0xFF, w[4] & 0xFF,\n  // 15, 16, 17, 18\n\n  w[3] >>> 18 & 0xFF, w[3] >>> 10 & 0xFF, w[3] >>> 2 & 0xFF,\n  // 19, 20, 21\n  (w[3] & 0x03) << 6 | w[2] >>> 20 & 0x3F, w[2] >>> 12 & 0xFF, w[2] >>> 4 & 0xFF,\n  // 22, 23, 24\n  (w[2] & 0x0F) << 4 | w[1] >>> 22 & 0x0F, w[1] >>> 14 & 0xFF, w[1] >>> 6 & 0xFF,\n  // 25, 26, 27\n  (w[1] & 0x3F) << 2 | w[0] >>> 24 & 0x03, w[0] >>> 16 & 0xFF, w[0] >>> 8 & 0xFF, w[0] & 0xFF // 28, 29, 30, 31\n  ]);\n};\n\nBN.prototype.clone = function () {\n  var r = new BN();\n  r.words = new Array(this.length);\n  for (var i = 0; i < this.length; i++) r.words[i] = this.words[i];\n  r.length = this.length;\n  r.negative = this.negative;\n  return r;\n};\nBN.prototype.strip = function () {\n  while (this.length > 1 && (this.words[this.length - 1] | 0) === 0) this.length--;\n  return this;\n};\nBN.prototype.normSign = function () {\n  // -0 = 0\n  if (this.length === 1 && this.words[0] === 0) this.negative = 0;\n  return this;\n};\nBN.prototype.isEven = function () {\n  return (this.words[0] & 1) === 0;\n};\nBN.prototype.isOdd = function () {\n  return (this.words[0] & 1) === 1;\n};\nBN.prototype.isZero = function () {\n  return this.length === 1 && this.words[0] === 0;\n};\nBN.prototype.ucmp = function (num) {\n  if (this.length !== num.length) return this.length > num.length ? 1 : -1;\n  for (var i = this.length - 1; i >= 0; --i) {\n    if (this.words[i] !== num.words[i]) return this.words[i] > num.words[i] ? 1 : -1;\n  }\n  return 0;\n};\nBN.prototype.gtOne = function () {\n  return this.length > 1 || this.words[0] > 1;\n};\nBN.prototype.isOverflow = function () {\n  return this.ucmp(BN.n) >= 0;\n};\nBN.prototype.isHigh = function () {\n  return this.ucmp(BN.nh) === 1;\n};\nBN.prototype.bitLengthGT256 = function () {\n  return this.length > 10 || this.length === 10 && this.words[9] > 0x003fffff;\n};\nBN.prototype.iuaddn = function (num) {\n  this.words[0] += num;\n  for (var i = 0; this.words[i] > 0x03ffffff && i < this.length; ++i) {\n    this.words[i] -= 0x04000000;\n    this.words[i + 1] += 1;\n  }\n  if (i === this.length) {\n    this.words[i] = 1;\n    this.length += 1;\n  }\n  return this;\n};\nBN.prototype.iadd = function (num) {\n  // (-this) + num -> -(this - num)\n  // this + (-num) -> this - num\n  if (this.negative !== num.negative) {\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.isub(num);\n      this.negative ^= 1;\n    } else {\n      num.negative = 0;\n      this.isub(num);\n      num.negative = 1;\n    }\n    return this.normSign();\n  }\n\n  // a.length > b.length\n  var a;\n  var b;\n  if (this.length > num.length) {\n    a = this;\n    b = num;\n  } else {\n    a = num;\n    b = this;\n  }\n  for (var i = 0, carry = 0; i < b.length; ++i) {\n    var word = a.words[i] + b.words[i] + carry;\n    this.words[i] = word & 0x03ffffff;\n    carry = word >>> 26;\n  }\n  for (; carry !== 0 && i < a.length; ++i) {\n    word = a.words[i] + carry;\n    this.words[i] = word & 0x03ffffff;\n    carry = word >>> 26;\n  }\n  this.length = a.length;\n  if (carry !== 0) {\n    this.words[this.length++] = carry;\n  } else if (a !== this) {\n    for (; i < a.length; ++i) {\n      this.words[i] = a.words[i];\n    }\n  }\n  return this;\n};\nBN.prototype.add = function (num) {\n  return this.clone().iadd(num);\n};\nBN.prototype.isub = function (num) {\n  // (-this) - num -> -(this + num)\n  // this - (-num) -> this + num\n  if (this.negative !== num.negative) {\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n    } else {\n      num.negative = 0;\n      this.iadd(num);\n      num.negative = 1;\n    }\n    return this.normSign();\n  }\n  var cmp = this.ucmp(num);\n  if (cmp === 0) {\n    this.negative = 0;\n    this.words[0] = 0;\n    this.length = 1;\n    return this;\n  }\n\n  // a > b\n  var a;\n  var b;\n  if (cmp > 0) {\n    a = this;\n    b = num;\n  } else {\n    a = num;\n    b = this;\n  }\n  for (var i = 0, carry = 0; i < b.length; ++i) {\n    var word = a.words[i] - b.words[i] + carry;\n    carry = word >> 26;\n    this.words[i] = word & 0x03ffffff;\n  }\n  for (; carry !== 0 && i < a.length; ++i) {\n    word = a.words[i] + carry;\n    carry = word >> 26;\n    this.words[i] = word & 0x03ffffff;\n  }\n  if (carry === 0 && i < a.length && a !== this) {\n    for (; i < a.length; ++i) this.words[i] = a.words[i];\n  }\n  this.length = Math.max(this.length, i);\n  if (a !== this) this.negative ^= 1;\n  return this.strip().normSign();\n};\nBN.prototype.sub = function (num) {\n  return this.clone().isub(num);\n};\nBN.umulTo = function (num1, num2, out) {\n  out.length = num1.length + num2.length - 1;\n  var a1 = num1.words[0];\n  var b1 = num2.words[0];\n  var r1 = a1 * b1;\n  var carry = r1 / 0x04000000 | 0;\n  out.words[0] = r1 & 0x03ffffff;\n  for (var k = 1, maxK = out.length; k < maxK; k++) {\n    var ncarry = carry >>> 26;\n    var rword = carry & 0x03ffffff;\n    for (var j = Math.max(0, k - num1.length + 1), maxJ = Math.min(k, num2.length - 1); j <= maxJ; j++) {\n      var i = k - j;\n      var a = num1.words[i];\n      var b = num2.words[j];\n      var r = a * b + rword;\n      ncarry += r / 0x04000000 | 0;\n      rword = r & 0x03ffffff;\n    }\n    out.words[k] = rword;\n    carry = ncarry;\n  }\n  if (carry !== 0) out.words[out.length++] = carry;\n  return out.strip();\n};\nBN.umulTo10x10 = Math.imul ? optimized.umulTo10x10 : BN.umulTo;\nBN.umulnTo = function (num, k, out) {\n  if (k === 0) {\n    out.words = [0];\n    out.length = 1;\n    return out;\n  }\n  for (var i = 0, carry = 0; i < num.length; ++i) {\n    var r = num.words[i] * k + carry;\n    out.words[i] = r & 0x03ffffff;\n    carry = r / 0x04000000 | 0;\n  }\n  if (carry > 0) {\n    out.words[i] = carry;\n    out.length = num.length + 1;\n  } else {\n    out.length = num.length;\n  }\n  return out;\n};\nBN.prototype.umul = function (num) {\n  var out = new BN();\n  out.words = new Array(this.length + num.length);\n  if (this.length === 10 && num.length === 10) {\n    return BN.umulTo10x10(this, num, out);\n  } else if (this.length === 1) {\n    return BN.umulnTo(num, this.words[0], out);\n  } else if (num.length === 1) {\n    return BN.umulnTo(this, num.words[0], out);\n  } else {\n    return BN.umulTo(this, num, out);\n  }\n};\nBN.prototype.isplit = function (output) {\n  output.length = Math.min(this.length, 9);\n  for (var i = 0; i < output.length; ++i) output.words[i] = this.words[i];\n  if (this.length <= 9) {\n    this.words[0] = 0;\n    this.length = 1;\n    return this;\n  }\n\n  // Shift by 9 limbs\n  var prev = this.words[9];\n  output.words[output.length++] = prev & 0x003fffff;\n  for (i = 10; i < this.length; ++i) {\n    var word = this.words[i];\n    this.words[i - 10] = (word & 0x003fffff) << 4 | prev >>> 22;\n    prev = word;\n  }\n  prev >>>= 22;\n  this.words[i - 10] = prev;\n  if (prev === 0 && this.length > 10) {\n    this.length -= 10;\n  } else {\n    this.length -= 9;\n  }\n  return this;\n};\nBN.prototype.fireduce = function () {\n  if (this.isOverflow()) this.isub(BN.n);\n  return this;\n};\nBN.prototype.ureduce = function () {\n  var num = this.clone().isplit(BN.tmp).umul(BN.nc).iadd(BN.tmp);\n  if (num.bitLengthGT256()) {\n    num = num.isplit(BN.tmp).umul(BN.nc).iadd(BN.tmp);\n    if (num.bitLengthGT256()) num = num.isplit(BN.tmp).umul(BN.nc).iadd(BN.tmp);\n  }\n  return num.fireduce();\n};\nBN.prototype.ishrn = function (n) {\n  var mask = (1 << n) - 1;\n  var m = 26 - n;\n  for (var i = this.length - 1, carry = 0; i >= 0; --i) {\n    var word = this.words[i];\n    this.words[i] = carry << m | word >>> n;\n    carry = word & mask;\n  }\n  if (this.length > 1 && this.words[this.length - 1] === 0) this.length -= 1;\n  return this;\n};\nBN.prototype.uinvm = function () {\n  var x = this.clone();\n  var y = BN.n.clone();\n\n  // A * x + B * y = x\n  var A = BN.fromNumber(1);\n  var B = BN.fromNumber(0);\n\n  // C * x + D * y = y\n  var C = BN.fromNumber(0);\n  var D = BN.fromNumber(1);\n  while (x.isEven() && y.isEven()) {\n    for (var k = 1, m = 1; (x.words[0] & m) === 0 && (y.words[0] & m) === 0 && k < 26; ++k, m <<= 1);\n    x.ishrn(k);\n    y.ishrn(k);\n  }\n  var yp = y.clone();\n  var xp = x.clone();\n  while (!x.isZero()) {\n    for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n    if (i > 0) {\n      x.ishrn(i);\n      while (i-- > 0) {\n        if (A.isOdd() || B.isOdd()) {\n          A.iadd(yp);\n          B.isub(xp);\n        }\n        A.ishrn(1);\n        B.ishrn(1);\n      }\n    }\n    for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n    if (j > 0) {\n      y.ishrn(j);\n      while (j-- > 0) {\n        if (C.isOdd() || D.isOdd()) {\n          C.iadd(yp);\n          D.isub(xp);\n        }\n        C.ishrn(1);\n        D.ishrn(1);\n      }\n    }\n    if (x.ucmp(y) >= 0) {\n      x.isub(y);\n      A.isub(C);\n      B.isub(D);\n    } else {\n      y.isub(x);\n      C.isub(A);\n      D.isub(B);\n    }\n  }\n  if (C.negative === 1) {\n    C.negative = 0;\n    var result = C.ureduce();\n    result.negative ^= 1;\n    return result.normSign().iadd(BN.n);\n  } else {\n    return C.ureduce();\n  }\n};\nBN.prototype.imulK = function () {\n  this.words[this.length] = 0;\n  this.words[this.length + 1] = 0;\n  this.length += 2;\n  for (var i = 0, lo = 0; i < this.length; ++i) {\n    var w = this.words[i] | 0;\n    lo += w * 0x3d1;\n    this.words[i] = lo & 0x03ffffff;\n    lo = w * 0x40 + (lo / 0x04000000 | 0);\n  }\n  if (this.words[this.length - 1] === 0) {\n    this.length -= 1;\n    if (this.words[this.length - 1] === 0) this.length -= 1;\n  }\n  return this;\n};\nBN.prototype.redIReduce = function () {\n  this.isplit(BN.tmp).imulK().iadd(BN.tmp);\n  if (this.bitLengthGT256()) this.isplit(BN.tmp).imulK().iadd(BN.tmp);\n  var cmp = this.ucmp(BN.p);\n  if (cmp === 0) {\n    this.words[0] = 0;\n    this.length = 1;\n  } else if (cmp > 0) {\n    this.isub(BN.p);\n  } else {\n    this.strip();\n  }\n  return this;\n};\nBN.prototype.redNeg = function () {\n  if (this.isZero()) return BN.fromNumber(0);\n  return BN.p.sub(this);\n};\nBN.prototype.redAdd = function (num) {\n  return this.clone().redIAdd(num);\n};\nBN.prototype.redIAdd = function (num) {\n  this.iadd(num);\n  if (this.ucmp(BN.p) >= 0) this.isub(BN.p);\n  return this;\n};\nBN.prototype.redIAdd7 = function () {\n  this.iuaddn(7);\n  if (this.ucmp(BN.p) >= 0) this.isub(BN.p);\n  return this;\n};\nBN.prototype.redSub = function (num) {\n  return this.clone().redISub(num);\n};\nBN.prototype.redISub = function (num) {\n  this.isub(num);\n  if (this.negative !== 0) this.iadd(BN.p);\n  return this;\n};\nBN.prototype.redMul = function (num) {\n  return this.umul(num).redIReduce();\n};\nBN.prototype.redSqr = function () {\n  return this.umul(this).redIReduce();\n};\nBN.prototype.redSqrt = function () {\n  if (this.isZero()) return this.clone();\n  var wv2 = this.redSqr();\n  var wv4 = wv2.redSqr();\n  var wv12 = wv4.redSqr().redMul(wv4);\n  var wv14 = wv12.redMul(wv2);\n  var wv15 = wv14.redMul(this);\n  var out = wv15;\n  for (var i = 0; i < 54; ++i) out = out.redSqr().redSqr().redSqr().redSqr().redMul(wv15);\n  out = out.redSqr().redSqr().redSqr().redSqr().redMul(wv14);\n  for (i = 0; i < 5; ++i) out = out.redSqr().redSqr().redSqr().redSqr().redMul(wv15);\n  out = out.redSqr().redSqr().redSqr().redSqr().redMul(wv12);\n  out = out.redSqr().redSqr().redSqr().redSqr().redSqr().redSqr().redMul(wv12);\n  if (out.redSqr().ucmp(this) === 0) {\n    return out;\n  } else {\n    return null;\n  }\n};\nBN.prototype.redInvm = function () {\n  var a = this.clone();\n  var b = BN.p.clone();\n  var x1 = BN.fromNumber(1);\n  var x2 = BN.fromNumber(0);\n  while (a.gtOne() && b.gtOne()) {\n    for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n    if (i > 0) {\n      a.ishrn(i);\n      while (i-- > 0) {\n        if (x1.isOdd()) x1.iadd(BN.p);\n        x1.ishrn(1);\n      }\n    }\n    for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n    if (j > 0) {\n      b.ishrn(j);\n      while (j-- > 0) {\n        if (x2.isOdd()) x2.iadd(BN.p);\n        x2.ishrn(1);\n      }\n    }\n    if (a.ucmp(b) >= 0) {\n      a.isub(b);\n      x1.isub(x2);\n    } else {\n      b.isub(a);\n      x2.isub(x1);\n    }\n  }\n  var res;\n  if (a.length === 1 && a.words[0] === 1) {\n    res = x1;\n  } else {\n    res = x2;\n  }\n  if (res.negative !== 0) res.iadd(BN.p);\n  if (res.negative !== 0) {\n    res.negative = 0;\n    return res.redIReduce().redNeg();\n  } else {\n    return res.redIReduce();\n  }\n};\nBN.prototype.getNAF = function (w) {\n  var naf = [];\n  var ws = 1 << w + 1;\n  var wsm1 = ws - 1;\n  var ws2 = ws >> 1;\n  var k = this.clone();\n  while (!k.isZero()) {\n    for (var i = 0, m = 1; (k.words[0] & m) === 0 && i < 26; ++i, m <<= 1) naf.push(0);\n    if (i !== 0) {\n      k.ishrn(i);\n    } else {\n      var mod = k.words[0] & wsm1;\n      if (mod >= ws2) {\n        naf.push(ws2 - mod);\n        k.iuaddn(mod - ws2).ishrn(1);\n      } else {\n        naf.push(mod);\n        k.words[0] -= mod;\n        if (!k.isZero()) {\n          for (i = w - 1; i > 0; --i) naf.push(0);\n          k.ishrn(w);\n        }\n      }\n    }\n  }\n  return naf;\n};\nBN.prototype.inspect = function () {\n  if (this.isZero()) return '0';\n  var buffer = this.toBuffer().toString('hex');\n  for (var i = 0; buffer[i] === '0'; ++i);\n  return buffer.slice(i);\n};\nBN.n = BN.fromBuffer(Buffer.from('FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141', 'hex'));\nBN.nh = BN.n.clone().ishrn(1);\nBN.nc = BN.fromBuffer(Buffer.from('000000000000000000000000000000014551231950B75FC4402DA1732FC9BEBF', 'hex'));\nBN.p = BN.fromBuffer(Buffer.from('FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F', 'hex'));\nBN.psn = BN.p.sub(BN.n);\nBN.tmp = new BN();\nBN.tmp.words = new Array(10)\n\n// WTF?! it speed-up benchmark on ~20%\n;\n(function () {\n  var x = BN.fromNumber(1);\n  x.words[3] = 0;\n})();\nmodule.exports = BN;","map":{"version":3,"names":["Buffer","require","optimized","BN","negative","words","length","fromNumber","n","bn","fromBuffer","b32","Array","strip","prototype","toBuffer","w","i","from","clone","r","normSign","isEven","isOdd","isZero","ucmp","num","gtOne","isOverflow","isHigh","nh","bitLengthGT256","iuaddn","iadd","isub","a","b","carry","word","add","cmp","Math","max","sub","umulTo","num1","num2","out","a1","b1","r1","k","maxK","ncarry","rword","j","maxJ","min","umulTo10x10","imul","umulnTo","umul","isplit","output","prev","fireduce","ureduce","tmp","nc","ishrn","mask","m","uinvm","x","y","A","B","C","D","yp","xp","im","jm","result","imulK","lo","redIReduce","p","redNeg","redAdd","redIAdd","redIAdd7","redSub","redISub","redMul","redSqr","redSqrt","wv2","wv4","wv12","wv14","wv15","redInvm","x1","x2","res","getNAF","naf","ws","wsm1","ws2","push","mod","inspect","buffer","toString","slice","psn","module","exports"],"sources":["C:/blockchain/Victus-health-assistant-main/Victus-health-assistant-main/node_modules/libp2p-crypto-secp256k1/node_modules/secp256k1/lib/js/bn/index.js"],"sourcesContent":["'use strict'\nvar Buffer = require('safe-buffer').Buffer\nvar optimized = require('./optimized')\n\nfunction BN () {\n  this.negative = 0\n  this.words = null\n  this.length = 0\n}\n\nBN.fromNumber = function (n) {\n  var bn = new BN()\n  bn.words = [n & 0x03ffffff]\n  bn.length = 1\n  return bn\n}\n\nBN.fromBuffer = function (b32) {\n  var bn = new BN()\n\n  bn.words = new Array(10)\n  bn.words[0] = (b32[28] & 0x03) << 24 | b32[29] << 16 | b32[30] << 8 | b32[31]\n  bn.words[1] = (b32[25] & 0x0F) << 22 | b32[26] << 14 | b32[27] << 6 | b32[28] >>> 2\n  bn.words[2] = (b32[22] & 0x3F) << 20 | b32[23] << 12 | b32[24] << 4 | b32[25] >>> 4\n  bn.words[3] = (b32[19] & 0xFF) << 18 | b32[20] << 10 | b32[21] << 2 | b32[22] >>> 6\n\n  bn.words[4] = (b32[15] & 0x03) << 24 | b32[16] << 16 | b32[17] << 8 | b32[18]\n  bn.words[5] = (b32[12] & 0x0F) << 22 | b32[13] << 14 | b32[14] << 6 | b32[15] >>> 2\n  bn.words[6] = (b32[9] & 0x3F) << 20 | b32[10] << 12 | b32[11] << 4 | b32[12] >>> 4\n  bn.words[7] = (b32[6] & 0xFF) << 18 | b32[7] << 10 | b32[8] << 2 | b32[9] >>> 6\n\n  bn.words[8] = (b32[2] & 0x03) << 24 | b32[3] << 16 | b32[4] << 8 | b32[5]\n  bn.words[9] = b32[0] << 14 | b32[1] << 6 | b32[2] >>> 2\n\n  bn.length = 10\n  return bn.strip()\n}\n\nBN.prototype.toBuffer = function () {\n  var w = this.words\n  for (var i = this.length; i < 10; ++i) w[i] = 0\n\n  return Buffer.from([\n    (w[9] >>> 14) & 0xFF, (w[9] >>> 6) & 0xFF, (w[9] & 0x3F) << 2 | ((w[8] >>> 24) & 0x03), // 0, 1, 2\n    (w[8] >>> 16) & 0xFF, (w[8] >>> 8) & 0xFF, w[8] & 0xFF, // 3, 4, 5\n\n    (w[7] >>> 18) & 0xFF, (w[7] >>> 10) & 0xFF, (w[7] >>> 2) & 0xFF, // 6, 7, 8\n    ((w[7] & 0x03) << 6) | ((w[6] >>> 20) & 0x3F), (w[6] >>> 12) & 0xFF, (w[6] >>> 4) & 0xFF, // 9, 10, 11\n    ((w[6] & 0x0F) << 4) | ((w[5] >>> 22) & 0x0F), (w[5] >>> 14) & 0xFF, (w[5] >>> 6) & 0xFF, // 12, 13, 14\n    ((w[5] & 0x3F) << 2) | ((w[4] >>> 24) & 0x03), (w[4] >>> 16) & 0xFF, (w[4] >>> 8) & 0xFF, w[4] & 0xFF, // 15, 16, 17, 18\n\n    (w[3] >>> 18) & 0xFF, (w[3] >>> 10) & 0xFF, (w[3] >>> 2) & 0xFF, // 19, 20, 21\n    ((w[3] & 0x03) << 6) | ((w[2] >>> 20) & 0x3F), (w[2] >>> 12) & 0xFF, (w[2] >>> 4) & 0xFF, // 22, 23, 24\n    ((w[2] & 0x0F) << 4) | ((w[1] >>> 22) & 0x0F), (w[1] >>> 14) & 0xFF, (w[1] >>> 6) & 0xFF, // 25, 26, 27\n    ((w[1] & 0x3F) << 2) | ((w[0] >>> 24) & 0x03), (w[0] >>> 16) & 0xFF, (w[0] >>> 8) & 0xFF, w[0] & 0xFF // 28, 29, 30, 31\n  ])\n}\n\nBN.prototype.clone = function () {\n  var r = new BN()\n  r.words = new Array(this.length)\n  for (var i = 0; i < this.length; i++) r.words[i] = this.words[i]\n  r.length = this.length\n  r.negative = this.negative\n  return r\n}\n\nBN.prototype.strip = function () {\n  while (this.length > 1 && (this.words[this.length - 1] | 0) === 0) this.length--\n  return this\n}\n\nBN.prototype.normSign = function () {\n  // -0 = 0\n  if (this.length === 1 && this.words[0] === 0) this.negative = 0\n  return this\n}\n\nBN.prototype.isEven = function () {\n  return (this.words[0] & 1) === 0\n}\n\nBN.prototype.isOdd = function () {\n  return (this.words[0] & 1) === 1\n}\n\nBN.prototype.isZero = function () {\n  return this.length === 1 && this.words[0] === 0\n}\n\nBN.prototype.ucmp = function (num) {\n  if (this.length !== num.length) return this.length > num.length ? 1 : -1\n\n  for (var i = this.length - 1; i >= 0; --i) {\n    if (this.words[i] !== num.words[i]) return this.words[i] > num.words[i] ? 1 : -1\n  }\n\n  return 0\n}\n\nBN.prototype.gtOne = function () {\n  return this.length > 1 || this.words[0] > 1\n}\n\nBN.prototype.isOverflow = function () {\n  return this.ucmp(BN.n) >= 0\n}\n\nBN.prototype.isHigh = function () {\n  return this.ucmp(BN.nh) === 1\n}\n\nBN.prototype.bitLengthGT256 = function () {\n  return this.length > 10 || (this.length === 10 && this.words[9] > 0x003fffff)\n}\n\nBN.prototype.iuaddn = function (num) {\n  this.words[0] += num\n\n  for (var i = 0; this.words[i] > 0x03ffffff && i < this.length; ++i) {\n    this.words[i] -= 0x04000000\n    this.words[i + 1] += 1\n  }\n\n  if (i === this.length) {\n    this.words[i] = 1\n    this.length += 1\n  }\n\n  return this\n}\n\nBN.prototype.iadd = function (num) {\n  // (-this) + num -> -(this - num)\n  // this + (-num) -> this - num\n  if (this.negative !== num.negative) {\n    if (this.negative !== 0) {\n      this.negative = 0\n      this.isub(num)\n      this.negative ^= 1\n    } else {\n      num.negative = 0\n      this.isub(num)\n      num.negative = 1\n    }\n\n    return this.normSign()\n  }\n\n  // a.length > b.length\n  var a\n  var b\n  if (this.length > num.length) {\n    a = this\n    b = num\n  } else {\n    a = num\n    b = this\n  }\n\n  for (var i = 0, carry = 0; i < b.length; ++i) {\n    var word = a.words[i] + b.words[i] + carry\n    this.words[i] = word & 0x03ffffff\n    carry = word >>> 26\n  }\n\n  for (; carry !== 0 && i < a.length; ++i) {\n    word = a.words[i] + carry\n    this.words[i] = word & 0x03ffffff\n    carry = word >>> 26\n  }\n\n  this.length = a.length\n  if (carry !== 0) {\n    this.words[this.length++] = carry\n  } else if (a !== this) {\n    for (; i < a.length; ++i) {\n      this.words[i] = a.words[i]\n    }\n  }\n\n  return this\n}\n\nBN.prototype.add = function (num) {\n  return this.clone().iadd(num)\n}\n\nBN.prototype.isub = function (num) {\n  // (-this) - num -> -(this + num)\n  // this - (-num) -> this + num\n  if (this.negative !== num.negative) {\n    if (this.negative !== 0) {\n      this.negative = 0\n      this.iadd(num)\n      this.negative = 1\n    } else {\n      num.negative = 0\n      this.iadd(num)\n      num.negative = 1\n    }\n\n    return this.normSign()\n  }\n\n  var cmp = this.ucmp(num)\n  if (cmp === 0) {\n    this.negative = 0\n    this.words[0] = 0\n    this.length = 1\n    return this\n  }\n\n  // a > b\n  var a\n  var b\n  if (cmp > 0) {\n    a = this\n    b = num\n  } else {\n    a = num\n    b = this\n  }\n\n  for (var i = 0, carry = 0; i < b.length; ++i) {\n    var word = a.words[i] - b.words[i] + carry\n    carry = word >> 26\n    this.words[i] = word & 0x03ffffff\n  }\n\n  for (; carry !== 0 && i < a.length; ++i) {\n    word = a.words[i] + carry\n    carry = word >> 26\n    this.words[i] = word & 0x03ffffff\n  }\n\n  if (carry === 0 && i < a.length && a !== this) {\n    for (; i < a.length; ++i) this.words[i] = a.words[i]\n  }\n\n  this.length = Math.max(this.length, i)\n\n  if (a !== this) this.negative ^= 1\n\n  return this.strip().normSign()\n}\n\nBN.prototype.sub = function (num) {\n  return this.clone().isub(num)\n}\n\nBN.umulTo = function (num1, num2, out) {\n  out.length = num1.length + num2.length - 1\n\n  var a1 = num1.words[0]\n  var b1 = num2.words[0]\n  var r1 = a1 * b1\n\n  var carry = (r1 / 0x04000000) | 0\n  out.words[0] = r1 & 0x03ffffff\n\n  for (var k = 1, maxK = out.length; k < maxK; k++) {\n    var ncarry = carry >>> 26\n    var rword = carry & 0x03ffffff\n    for (var j = Math.max(0, k - num1.length + 1), maxJ = Math.min(k, num2.length - 1); j <= maxJ; j++) {\n      var i = k - j\n      var a = num1.words[i]\n      var b = num2.words[j]\n      var r = a * b + rword\n      ncarry += (r / 0x04000000) | 0\n      rword = r & 0x03ffffff\n    }\n    out.words[k] = rword\n    carry = ncarry\n  }\n\n  if (carry !== 0) out.words[out.length++] = carry\n\n  return out.strip()\n}\n\nBN.umulTo10x10 = Math.imul ? optimized.umulTo10x10 : BN.umulTo\n\nBN.umulnTo = function (num, k, out) {\n  if (k === 0) {\n    out.words = [0]\n    out.length = 1\n    return out\n  }\n\n  for (var i = 0, carry = 0; i < num.length; ++i) {\n    var r = num.words[i] * k + carry\n    out.words[i] = r & 0x03ffffff\n    carry = (r / 0x04000000) | 0\n  }\n\n  if (carry > 0) {\n    out.words[i] = carry\n    out.length = num.length + 1\n  } else {\n    out.length = num.length\n  }\n\n  return out\n}\n\nBN.prototype.umul = function (num) {\n  var out = new BN()\n  out.words = new Array(this.length + num.length)\n\n  if (this.length === 10 && num.length === 10) {\n    return BN.umulTo10x10(this, num, out)\n  } else if (this.length === 1) {\n    return BN.umulnTo(num, this.words[0], out)\n  } else if (num.length === 1) {\n    return BN.umulnTo(this, num.words[0], out)\n  } else {\n    return BN.umulTo(this, num, out)\n  }\n}\n\nBN.prototype.isplit = function (output) {\n  output.length = Math.min(this.length, 9)\n  for (var i = 0; i < output.length; ++i) output.words[i] = this.words[i]\n\n  if (this.length <= 9) {\n    this.words[0] = 0\n    this.length = 1\n    return this\n  }\n\n  // Shift by 9 limbs\n  var prev = this.words[9]\n  output.words[output.length++] = prev & 0x003fffff\n\n  for (i = 10; i < this.length; ++i) {\n    var word = this.words[i]\n    this.words[i - 10] = ((word & 0x003fffff) << 4) | (prev >>> 22)\n    prev = word\n  }\n  prev >>>= 22\n  this.words[i - 10] = prev\n\n  if (prev === 0 && this.length > 10) {\n    this.length -= 10\n  } else {\n    this.length -= 9\n  }\n\n  return this\n}\n\nBN.prototype.fireduce = function () {\n  if (this.isOverflow()) this.isub(BN.n)\n  return this\n}\n\nBN.prototype.ureduce = function () {\n  var num = this.clone().isplit(BN.tmp).umul(BN.nc).iadd(BN.tmp)\n  if (num.bitLengthGT256()) {\n    num = num.isplit(BN.tmp).umul(BN.nc).iadd(BN.tmp)\n    if (num.bitLengthGT256()) num = num.isplit(BN.tmp).umul(BN.nc).iadd(BN.tmp)\n  }\n\n  return num.fireduce()\n}\n\nBN.prototype.ishrn = function (n) {\n  var mask = (1 << n) - 1\n  var m = 26 - n\n\n  for (var i = this.length - 1, carry = 0; i >= 0; --i) {\n    var word = this.words[i]\n    this.words[i] = (carry << m) | (word >>> n)\n    carry = word & mask\n  }\n\n  if (this.length > 1 && this.words[this.length - 1] === 0) this.length -= 1\n\n  return this\n}\n\nBN.prototype.uinvm = function () {\n  var x = this.clone()\n  var y = BN.n.clone()\n\n  // A * x + B * y = x\n  var A = BN.fromNumber(1)\n  var B = BN.fromNumber(0)\n\n  // C * x + D * y = y\n  var C = BN.fromNumber(0)\n  var D = BN.fromNumber(1)\n\n  while (x.isEven() && y.isEven()) {\n    for (var k = 1, m = 1; (x.words[0] & m) === 0 && (y.words[0] & m) === 0 && k < 26; ++k, m <<= 1);\n    x.ishrn(k)\n    y.ishrn(k)\n  }\n\n  var yp = y.clone()\n  var xp = x.clone()\n\n  while (!x.isZero()) {\n    for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n    if (i > 0) {\n      x.ishrn(i)\n      while (i-- > 0) {\n        if (A.isOdd() || B.isOdd()) {\n          A.iadd(yp)\n          B.isub(xp)\n        }\n\n        A.ishrn(1)\n        B.ishrn(1)\n      }\n    }\n\n    for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n    if (j > 0) {\n      y.ishrn(j)\n      while (j-- > 0) {\n        if (C.isOdd() || D.isOdd()) {\n          C.iadd(yp)\n          D.isub(xp)\n        }\n\n        C.ishrn(1)\n        D.ishrn(1)\n      }\n    }\n\n    if (x.ucmp(y) >= 0) {\n      x.isub(y)\n      A.isub(C)\n      B.isub(D)\n    } else {\n      y.isub(x)\n      C.isub(A)\n      D.isub(B)\n    }\n  }\n\n  if (C.negative === 1) {\n    C.negative = 0\n    var result = C.ureduce()\n    result.negative ^= 1\n    return result.normSign().iadd(BN.n)\n  } else {\n    return C.ureduce()\n  }\n}\n\nBN.prototype.imulK = function () {\n  this.words[this.length] = 0\n  this.words[this.length + 1] = 0\n  this.length += 2\n\n  for (var i = 0, lo = 0; i < this.length; ++i) {\n    var w = this.words[i] | 0\n    lo += w * 0x3d1\n    this.words[i] = lo & 0x03ffffff\n    lo = w * 0x40 + ((lo / 0x04000000) | 0)\n  }\n\n  if (this.words[this.length - 1] === 0) {\n    this.length -= 1\n    if (this.words[this.length - 1] === 0) this.length -= 1\n  }\n\n  return this\n}\n\nBN.prototype.redIReduce = function () {\n  this.isplit(BN.tmp).imulK().iadd(BN.tmp)\n  if (this.bitLengthGT256()) this.isplit(BN.tmp).imulK().iadd(BN.tmp)\n\n  var cmp = this.ucmp(BN.p)\n  if (cmp === 0) {\n    this.words[0] = 0\n    this.length = 1\n  } else if (cmp > 0) {\n    this.isub(BN.p)\n  } else {\n    this.strip()\n  }\n\n  return this\n}\n\nBN.prototype.redNeg = function () {\n  if (this.isZero()) return BN.fromNumber(0)\n\n  return BN.p.sub(this)\n}\n\nBN.prototype.redAdd = function (num) {\n  return this.clone().redIAdd(num)\n}\n\nBN.prototype.redIAdd = function (num) {\n  this.iadd(num)\n  if (this.ucmp(BN.p) >= 0) this.isub(BN.p)\n\n  return this\n}\n\nBN.prototype.redIAdd7 = function () {\n  this.iuaddn(7)\n  if (this.ucmp(BN.p) >= 0) this.isub(BN.p)\n\n  return this\n}\n\nBN.prototype.redSub = function (num) {\n  return this.clone().redISub(num)\n}\n\nBN.prototype.redISub = function (num) {\n  this.isub(num)\n  if (this.negative !== 0) this.iadd(BN.p)\n\n  return this\n}\n\nBN.prototype.redMul = function (num) {\n  return this.umul(num).redIReduce()\n}\n\nBN.prototype.redSqr = function () {\n  return this.umul(this).redIReduce()\n}\n\nBN.prototype.redSqrt = function () {\n  if (this.isZero()) return this.clone()\n\n  var wv2 = this.redSqr()\n  var wv4 = wv2.redSqr()\n  var wv12 = wv4.redSqr().redMul(wv4)\n  var wv14 = wv12.redMul(wv2)\n  var wv15 = wv14.redMul(this)\n\n  var out = wv15\n  for (var i = 0; i < 54; ++i) out = out.redSqr().redSqr().redSqr().redSqr().redMul(wv15)\n  out = out.redSqr().redSqr().redSqr().redSqr().redMul(wv14)\n  for (i = 0; i < 5; ++i) out = out.redSqr().redSqr().redSqr().redSqr().redMul(wv15)\n  out = out.redSqr().redSqr().redSqr().redSqr().redMul(wv12)\n  out = out.redSqr().redSqr().redSqr().redSqr().redSqr().redSqr().redMul(wv12)\n\n  if (out.redSqr().ucmp(this) === 0) {\n    return out\n  } else {\n    return null\n  }\n}\n\nBN.prototype.redInvm = function () {\n  var a = this.clone()\n  var b = BN.p.clone()\n\n  var x1 = BN.fromNumber(1)\n  var x2 = BN.fromNumber(0)\n\n  while (a.gtOne() && b.gtOne()) {\n    for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n    if (i > 0) {\n      a.ishrn(i)\n      while (i-- > 0) {\n        if (x1.isOdd()) x1.iadd(BN.p)\n        x1.ishrn(1)\n      }\n    }\n\n    for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n    if (j > 0) {\n      b.ishrn(j)\n      while (j-- > 0) {\n        if (x2.isOdd()) x2.iadd(BN.p)\n        x2.ishrn(1)\n      }\n    }\n\n    if (a.ucmp(b) >= 0) {\n      a.isub(b)\n      x1.isub(x2)\n    } else {\n      b.isub(a)\n      x2.isub(x1)\n    }\n  }\n\n  var res\n  if (a.length === 1 && a.words[0] === 1) {\n    res = x1\n  } else {\n    res = x2\n  }\n\n  if (res.negative !== 0) res.iadd(BN.p)\n\n  if (res.negative !== 0) {\n    res.negative = 0\n    return res.redIReduce().redNeg()\n  } else {\n    return res.redIReduce()\n  }\n}\n\nBN.prototype.getNAF = function (w) {\n  var naf = []\n  var ws = 1 << (w + 1)\n  var wsm1 = ws - 1\n  var ws2 = ws >> 1\n\n  var k = this.clone()\n  while (!k.isZero()) {\n    for (var i = 0, m = 1; (k.words[0] & m) === 0 && i < 26; ++i, m <<= 1) naf.push(0)\n\n    if (i !== 0) {\n      k.ishrn(i)\n    } else {\n      var mod = k.words[0] & wsm1\n      if (mod >= ws2) {\n        naf.push(ws2 - mod)\n        k.iuaddn(mod - ws2).ishrn(1)\n      } else {\n        naf.push(mod)\n        k.words[0] -= mod\n        if (!k.isZero()) {\n          for (i = w - 1; i > 0; --i) naf.push(0)\n          k.ishrn(w)\n        }\n      }\n    }\n  }\n\n  return naf\n}\n\nBN.prototype.inspect = function () {\n  if (this.isZero()) return '0'\n\n  var buffer = this.toBuffer().toString('hex')\n  for (var i = 0; buffer[i] === '0'; ++i);\n  return buffer.slice(i)\n}\n\nBN.n = BN.fromBuffer(Buffer.from('FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141', 'hex'))\nBN.nh = BN.n.clone().ishrn(1)\nBN.nc = BN.fromBuffer(Buffer.from('000000000000000000000000000000014551231950B75FC4402DA1732FC9BEBF', 'hex'))\nBN.p = BN.fromBuffer(Buffer.from('FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F', 'hex'))\nBN.psn = BN.p.sub(BN.n)\nBN.tmp = new BN()\nBN.tmp.words = new Array(10)\n\n// WTF?! it speed-up benchmark on ~20%\n;(function () {\n  var x = BN.fromNumber(1)\n  x.words[3] = 0\n})()\n\nmodule.exports = BN\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}