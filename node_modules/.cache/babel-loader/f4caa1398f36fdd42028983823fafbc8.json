{"ast":null,"code":"var tokenize = require('./tokenize');\nvar MAX_RANGE = 0x1FFFFFFF;\n\n// \"Only repeated fields of primitive numeric types (types which use the varint, 32-bit, or 64-bit wire types) can be declared \"packed\".\"\n// https://developers.google.com/protocol-buffers/docs/encoding#optional\nvar PACKABLE_TYPES = [\n// varint wire types\n'int32', 'int64', 'uint32', 'uint64', 'sint32', 'sint64', 'bool',\n// + ENUMS\n// 64-bit wire types\n'fixed64', 'sfixed64', 'double',\n// 32-bit wire types\n'fixed32', 'sfixed32', 'float'];\nvar onfieldoptionvalue = function (tokens) {\n  var value = tokens.shift();\n  if (value !== '{') {\n    return value;\n  }\n  value = {};\n  var field = '';\n  while (tokens.length) {\n    switch (tokens[0]) {\n      case '}':\n        tokens.shift();\n        return value;\n      case ':':\n        tokens.shift();\n        value[field] = onfieldoptionvalue(tokens);\n        break;\n      default:\n        field = tokens.shift();\n    }\n  }\n};\nvar onfieldoptions = function (tokens) {\n  var opts = {};\n  while (tokens.length) {\n    switch (tokens[0]) {\n      case '[':\n      case ',':\n        {\n          tokens.shift();\n          var name = tokens.shift();\n          if (name === '(') {\n            // handling [(A) = B]\n            name = tokens.shift();\n            tokens.shift(); // remove the end of bracket\n          }\n\n          var field = [];\n          if (tokens[0][0] === '.') {\n            field = tokens[0].substr(1).split('.');\n            tokens.shift();\n          }\n          if (tokens[0] !== '=') throw new Error('Unexpected token in field options: ' + tokens[0]);\n          tokens.shift();\n          if (tokens[0] === ']') throw new Error('Unexpected ] in field option');\n\n          // for option (A).b.c\n          // path will be ['A', 'b'] and lastFieldName 'c'\n          var path = [name].concat(field);\n          var lastFieldName = path.pop();\n\n          // opt references opts.A.b\n          var opt = path.reduce(function (opt, n, index) {\n            if (opt[n] == null) {\n              opt[n] = {};\n            }\n            return opt[n];\n          }, opts);\n\n          // now set opt['c'] that references opts.A.b['c']\n          opt[lastFieldName] = onfieldoptionvalue(tokens);\n          break;\n        }\n      case ']':\n        tokens.shift();\n        return opts;\n      default:\n        throw new Error('Unexpected token in field options: ' + tokens[0]);\n    }\n  }\n  throw new Error('No closing tag for field options');\n};\nvar onfield = function (tokens) {\n  var field = {\n    name: null,\n    type: null,\n    tag: -1,\n    map: null,\n    oneof: null,\n    required: false,\n    repeated: false,\n    options: {}\n  };\n  while (tokens.length) {\n    switch (tokens[0]) {\n      case '=':\n        tokens.shift();\n        field.tag = Number(tokens.shift());\n        break;\n      case 'map':\n        field.type = 'map';\n        field.map = {\n          from: null,\n          to: null\n        };\n        tokens.shift();\n        if (tokens[0] !== '<') throw new Error('Unexpected token in map type: ' + tokens[0]);\n        tokens.shift();\n        field.map.from = tokens.shift();\n        if (tokens[0] !== ',') throw new Error('Unexpected token in map type: ' + tokens[0]);\n        tokens.shift();\n        field.map.to = tokens.shift();\n        if (tokens[0] !== '>') throw new Error('Unexpected token in map type: ' + tokens[0]);\n        tokens.shift();\n        field.name = tokens.shift();\n        break;\n      case 'repeated':\n      case 'required':\n      case 'optional':\n        var t = tokens.shift();\n        field.required = t === 'required';\n        field.repeated = t === 'repeated';\n        field.type = tokens.shift();\n        field.name = tokens.shift();\n        break;\n      case '[':\n        field.options = onfieldoptions(tokens);\n        break;\n      case ';':\n        if (field.name === null) throw new Error('Missing field name');\n        if (field.type === null) throw new Error('Missing type in message field: ' + field.name);\n        if (field.tag === -1) throw new Error('Missing tag number in message field: ' + field.name);\n        tokens.shift();\n        return field;\n      default:\n        throw new Error('Unexpected token in message field: ' + tokens[0]);\n    }\n  }\n  throw new Error('No ; found for message field');\n};\nvar onmessagebody = function (tokens) {\n  var body = {\n    enums: [],\n    options: {},\n    messages: [],\n    fields: [],\n    extends: [],\n    extensions: null\n  };\n  while (tokens.length) {\n    switch (tokens[0]) {\n      case 'map':\n      case 'repeated':\n      case 'optional':\n      case 'required':\n        body.fields.push(onfield(tokens));\n        break;\n      case 'enum':\n        body.enums.push(onenum(tokens));\n        break;\n      case 'message':\n        body.messages.push(onmessage(tokens));\n        break;\n      case 'extensions':\n        body.extensions = onextensions(tokens);\n        break;\n      case 'oneof':\n        tokens.shift();\n        var name = tokens.shift();\n        if (tokens[0] !== '{') throw new Error('Unexpected token in oneof: ' + tokens[0]);\n        tokens.shift();\n        while (tokens[0] !== '}') {\n          tokens.unshift('optional');\n          var field = onfield(tokens);\n          field.oneof = name;\n          body.fields.push(field);\n        }\n        tokens.shift();\n        break;\n      case 'extend':\n        body.extends.push(onextend(tokens));\n        break;\n      case ';':\n        tokens.shift();\n        break;\n      case 'reserved':\n        tokens.shift();\n        while (tokens[0] !== ';') {\n          tokens.shift();\n        }\n        break;\n      case 'option':\n        var opt = onoption(tokens);\n        if (body.options[opt.name] !== undefined) throw new Error('Duplicate option ' + opt.name);\n        body.options[opt.name] = opt.value;\n        break;\n      default:\n        // proto3 does not require the use of optional/required, assumed as optional\n        // \"singular: a well-formed message can have zero or one of this field (but not more than one).\"\n        // https://developers.google.com/protocol-buffers/docs/proto3#specifying-field-rules\n        tokens.unshift('optional');\n        body.fields.push(onfield(tokens));\n    }\n  }\n  return body;\n};\nvar onextend = function (tokens) {\n  var out = {\n    name: tokens[1],\n    message: onmessage(tokens)\n  };\n  return out;\n};\nvar onextensions = function (tokens) {\n  tokens.shift();\n  var from = Number(tokens.shift());\n  if (isNaN(from)) throw new Error('Invalid from in extensions definition');\n  if (tokens.shift() !== 'to') throw new Error(\"Expected keyword 'to' in extensions definition\");\n  var to = tokens.shift();\n  if (to === 'max') to = MAX_RANGE;\n  to = Number(to);\n  if (isNaN(to)) throw new Error('Invalid to in extensions definition');\n  if (tokens.shift() !== ';') throw new Error('Missing ; in extensions definition');\n  return {\n    from: from,\n    to: to\n  };\n};\nvar onmessage = function (tokens) {\n  tokens.shift();\n  var lvl = 1;\n  var body = [];\n  var msg = {\n    name: tokens.shift(),\n    options: {},\n    enums: [],\n    extends: [],\n    messages: [],\n    fields: []\n  };\n  if (tokens[0] !== '{') throw new Error('Expected { but found ' + tokens[0]);\n  tokens.shift();\n  while (tokens.length) {\n    if (tokens[0] === '{') lvl++;else if (tokens[0] === '}') lvl--;\n    if (!lvl) {\n      tokens.shift();\n      body = onmessagebody(body);\n      msg.enums = body.enums;\n      msg.messages = body.messages;\n      msg.fields = body.fields;\n      msg.extends = body.extends;\n      msg.extensions = body.extensions;\n      msg.options = body.options;\n      return msg;\n    }\n    body.push(tokens.shift());\n  }\n  if (lvl) throw new Error('No closing tag for message');\n};\nvar onpackagename = function (tokens) {\n  tokens.shift();\n  var name = tokens.shift();\n  if (tokens[0] !== ';') throw new Error('Expected ; but found ' + tokens[0]);\n  tokens.shift();\n  return name;\n};\nvar onsyntaxversion = function (tokens) {\n  tokens.shift();\n  if (tokens[0] !== '=') throw new Error('Expected = but found ' + tokens[0]);\n  tokens.shift();\n  var version = tokens.shift();\n  switch (version) {\n    case '\"proto2\"':\n      version = 2;\n      break;\n    case '\"proto3\"':\n      version = 3;\n      break;\n    default:\n      throw new Error('Expected protobuf syntax version but found ' + version);\n  }\n  if (tokens[0] !== ';') throw new Error('Expected ; but found ' + tokens[0]);\n  tokens.shift();\n  return version;\n};\nvar onenumvalue = function (tokens) {\n  if (tokens.length < 4) throw new Error('Invalid enum value: ' + tokens.slice(0, 3).join(' '));\n  if (tokens[0] === 'reserved') {\n    tokens.shift();\n    while (tokens[0] !== ';') {\n      tokens.shift();\n    }\n    tokens.shift();\n    return null;\n  }\n  if (tokens[1] !== '=') throw new Error('Expected = but found ' + tokens[1]);\n  if (tokens[3] !== ';' && tokens[3] !== '[') throw new Error('Expected ; or [ but found ' + tokens[1]);\n  var name = tokens.shift();\n  tokens.shift();\n  var val = {\n    value: null,\n    options: {}\n  };\n  val.value = Number(tokens.shift());\n  if (tokens[0] === '[') {\n    val.options = onfieldoptions(tokens);\n  }\n  tokens.shift(); // expecting the semicolon here\n\n  return {\n    name: name,\n    val: val\n  };\n};\nvar onenum = function (tokens) {\n  tokens.shift();\n  var options = {};\n  var e = {\n    name: tokens.shift(),\n    values: {},\n    options: {}\n  };\n  if (tokens[0] !== '{') throw new Error('Expected { but found ' + tokens[0]);\n  tokens.shift();\n  while (tokens.length) {\n    if (tokens[0] === '}') {\n      tokens.shift();\n      // there goes optional semicolon after the enclosing \"}\"\n      if (tokens[0] === ';') tokens.shift();\n      return e;\n    }\n    if (tokens[0] === 'option') {\n      options = onoption(tokens);\n      e.options[options.name] = options.value;\n      continue;\n    }\n    var val = onenumvalue(tokens);\n    if (val !== null) {\n      e.values[val.name] = val.val;\n    }\n  }\n  throw new Error('No closing tag for enum');\n};\nvar onoption = function (tokens) {\n  var name = null;\n  var value = null;\n  var parse = function (value) {\n    if (value === 'true') return true;\n    if (value === 'false') return false;\n    return value.replace(/^\"+|\"+$/gm, '');\n  };\n  while (tokens.length) {\n    if (tokens[0] === ';') {\n      tokens.shift();\n      return {\n        name: name,\n        value: value\n      };\n    }\n    switch (tokens[0]) {\n      case 'option':\n        tokens.shift();\n        var hasBracket = tokens[0] === '(';\n        if (hasBracket) tokens.shift();\n        name = tokens.shift();\n        if (hasBracket) {\n          if (tokens[0] !== ')') throw new Error('Expected ) but found ' + tokens[0]);\n          tokens.shift();\n        }\n        if (tokens[0][0] === '.') {\n          name += tokens.shift();\n        }\n        break;\n      case '=':\n        tokens.shift();\n        if (name === null) throw new Error('Expected key for option with value: ' + tokens[0]);\n        value = parse(tokens.shift());\n        if (name === 'optimize_for' && !/^(SPEED|CODE_SIZE|LITE_RUNTIME)$/.test(value)) {\n          throw new Error('Unexpected value for option optimize_for: ' + value);\n        } else if (value === '{') {\n          // option foo = {bar: baz}\n          value = onoptionMap(tokens);\n        }\n        break;\n      default:\n        throw new Error('Unexpected token in option: ' + tokens[0]);\n    }\n  }\n};\nvar onoptionMap = function (tokens) {\n  var parse = function (value) {\n    if (value === 'true') return true;\n    if (value === 'false') return false;\n    return value.replace(/^\"+|\"+$/gm, '');\n  };\n  var map = {};\n  while (tokens.length) {\n    if (tokens[0] === '}') {\n      tokens.shift();\n      return map;\n    }\n    var hasBracket = tokens[0] === '(';\n    if (hasBracket) tokens.shift();\n    var key = tokens.shift();\n    if (hasBracket) {\n      if (tokens[0] !== ')') throw new Error('Expected ) but found ' + tokens[0]);\n      tokens.shift();\n    }\n    var value = null;\n    switch (tokens[0]) {\n      case ':':\n        if (map[key] !== undefined) throw new Error('Duplicate option map key ' + key);\n        tokens.shift();\n        value = parse(tokens.shift());\n        if (value === '{') {\n          // option foo = {bar: baz}\n          value = onoptionMap(tokens);\n        }\n        map[key] = value;\n        if (tokens[0] === ';') {\n          tokens.shift();\n        }\n        break;\n      case '{':\n        tokens.shift();\n        value = onoptionMap(tokens);\n        if (map[key] === undefined) map[key] = [];\n        if (!Array.isArray(map[key])) throw new Error('Duplicate option map key ' + key);\n        map[key].push(value);\n        break;\n      default:\n        throw new Error('Unexpected token in option map: ' + tokens[0]);\n    }\n  }\n  throw new Error('No closing tag for option map');\n};\nvar onimport = function (tokens) {\n  tokens.shift();\n  var file = tokens.shift().replace(/^\"+|\"+$/gm, '');\n  if (tokens[0] !== ';') throw new Error('Unexpected token: ' + tokens[0] + '. Expected \";\"');\n  tokens.shift();\n  return file;\n};\nvar onservice = function (tokens) {\n  tokens.shift();\n  var service = {\n    name: tokens.shift(),\n    methods: [],\n    options: {}\n  };\n  if (tokens[0] !== '{') throw new Error('Expected { but found ' + tokens[0]);\n  tokens.shift();\n  while (tokens.length) {\n    if (tokens[0] === '}') {\n      tokens.shift();\n      // there goes optional semicolon after the enclosing \"}\"\n      if (tokens[0] === ';') tokens.shift();\n      return service;\n    }\n    switch (tokens[0]) {\n      case 'option':\n        var opt = onoption(tokens);\n        if (service.options[opt.name] !== undefined) throw new Error('Duplicate option ' + opt.name);\n        service.options[opt.name] = opt.value;\n        break;\n      case 'rpc':\n        service.methods.push(onrpc(tokens));\n        break;\n      default:\n        throw new Error('Unexpected token in service: ' + tokens[0]);\n    }\n  }\n  throw new Error('No closing tag for service');\n};\nvar onrpc = function (tokens) {\n  tokens.shift();\n  var rpc = {\n    name: tokens.shift(),\n    input_type: null,\n    output_type: null,\n    client_streaming: false,\n    server_streaming: false,\n    options: {}\n  };\n  if (tokens[0] !== '(') throw new Error('Expected ( but found ' + tokens[0]);\n  tokens.shift();\n  if (tokens[0] === 'stream') {\n    tokens.shift();\n    rpc.client_streaming = true;\n  }\n  rpc.input_type = tokens.shift();\n  if (tokens[0] !== ')') throw new Error('Expected ) but found ' + tokens[0]);\n  tokens.shift();\n  if (tokens[0] !== 'returns') throw new Error('Expected returns but found ' + tokens[0]);\n  tokens.shift();\n  if (tokens[0] !== '(') throw new Error('Expected ( but found ' + tokens[0]);\n  tokens.shift();\n  if (tokens[0] === 'stream') {\n    tokens.shift();\n    rpc.server_streaming = true;\n  }\n  rpc.output_type = tokens.shift();\n  if (tokens[0] !== ')') throw new Error('Expected ) but found ' + tokens[0]);\n  tokens.shift();\n  if (tokens[0] === ';') {\n    tokens.shift();\n    return rpc;\n  }\n  if (tokens[0] !== '{') throw new Error('Expected { but found ' + tokens[0]);\n  tokens.shift();\n  while (tokens.length) {\n    if (tokens[0] === '}') {\n      tokens.shift();\n      // there goes optional semicolon after the enclosing \"}\"\n      if (tokens[0] === ';') tokens.shift();\n      return rpc;\n    }\n    if (tokens[0] === 'option') {\n      var opt = onoption(tokens);\n      if (rpc.options[opt.name] !== undefined) throw new Error('Duplicate option ' + opt.name);\n      rpc.options[opt.name] = opt.value;\n    } else {\n      throw new Error('Unexpected token in rpc options: ' + tokens[0]);\n    }\n  }\n  throw new Error('No closing tag for rpc');\n};\nvar parse = function (buf) {\n  var tokens = tokenize(buf.toString());\n  // check for isolated strings in tokens by looking for opening quote\n  for (var i = 0; i < tokens.length; i++) {\n    if (/^(\"|')([^'\"]*)$/.test(tokens[i])) {\n      var j;\n      if (tokens[i].length === 1) {\n        j = i + 1;\n      } else {\n        j = i;\n      }\n      // look ahead for the closing quote and collapse all\n      // in-between tokens into a single token\n      for (j; j < tokens.length; j++) {\n        if (/^[^'\"\\\\]*(?:\\\\.[^'\"\\\\]*)*(\"|')$/.test(tokens[j])) {\n          tokens = tokens.slice(0, i).concat(tokens.slice(i, j + 1).join('')).concat(tokens.slice(j + 1));\n          break;\n        }\n      }\n    }\n  }\n  var schema = {\n    syntax: 3,\n    package: null,\n    imports: [],\n    enums: [],\n    messages: [],\n    options: {},\n    extends: []\n  };\n  var firstline = true;\n  while (tokens.length) {\n    switch (tokens[0]) {\n      case 'package':\n        schema.package = onpackagename(tokens);\n        break;\n      case 'syntax':\n        if (!firstline) throw new Error('Protobuf syntax version should be first thing in file');\n        schema.syntax = onsyntaxversion(tokens);\n        break;\n      case 'message':\n        schema.messages.push(onmessage(tokens));\n        break;\n      case 'enum':\n        schema.enums.push(onenum(tokens));\n        break;\n      case 'option':\n        var opt = onoption(tokens);\n        if (schema.options[opt.name]) throw new Error('Duplicate option ' + opt.name);\n        schema.options[opt.name] = opt.value;\n        break;\n      case 'import':\n        schema.imports.push(onimport(tokens));\n        break;\n      case 'extend':\n        schema.extends.push(onextend(tokens));\n        break;\n      case 'service':\n        if (!schema.services) schema.services = [];\n        schema.services.push(onservice(tokens));\n        break;\n      default:\n        throw new Error('Unexpected token: ' + tokens[0]);\n    }\n    firstline = false;\n  }\n\n  // now iterate over messages and propagate extends\n  schema.extends.forEach(function (ext) {\n    schema.messages.forEach(function (msg) {\n      if (msg.name === ext.name) {\n        ext.message.fields.forEach(function (field) {\n          if (!msg.extensions || field.tag < msg.extensions.from || field.tag > msg.extensions.to) {\n            throw new Error(msg.name + ' does not declare ' + field.tag + ' as an extension number');\n          }\n          msg.fields.push(field);\n        });\n      }\n    });\n  });\n  schema.messages.forEach(function (msg) {\n    msg.fields.forEach(function (field) {\n      var fieldSplit;\n      var messageName;\n      var nestedEnumName;\n      var message;\n      function enumNameIsFieldType(en) {\n        return en.name === field.type;\n      }\n      function enumNameIsNestedEnumName(en) {\n        return en.name === nestedEnumName;\n      }\n      if (field.options && field.options.packed === 'true') {\n        if (PACKABLE_TYPES.indexOf(field.type) === -1) {\n          // let's see if it's an enum\n          if (field.type.indexOf('.') === -1) {\n            if (msg.enums && msg.enums.some(enumNameIsFieldType)) {\n              return;\n            }\n          } else {\n            fieldSplit = field.type.split('.');\n            if (fieldSplit.length > 2) {\n              throw new Error('what is this?');\n            }\n            messageName = fieldSplit[0];\n            nestedEnumName = fieldSplit[1];\n            schema.messages.some(function (msg) {\n              if (msg.name === messageName) {\n                message = msg;\n                return msg;\n              }\n            });\n            if (message && message.enums && message.enums.some(enumNameIsNestedEnumName)) {\n              return;\n            }\n          }\n          throw new Error('Fields of type ' + field.type + ' cannot be declared [packed=true]. ' + 'Only repeated fields of primitive numeric types (types which use ' + 'the varint, 32-bit, or 64-bit wire types) can be declared \"packed\". ' + 'See https://developers.google.com/protocol-buffers/docs/encoding#optional');\n        }\n      }\n    });\n  });\n  return schema;\n};\nmodule.exports = parse;","map":{"version":3,"names":["tokenize","require","MAX_RANGE","PACKABLE_TYPES","onfieldoptionvalue","tokens","value","shift","field","length","onfieldoptions","opts","name","substr","split","Error","path","concat","lastFieldName","pop","opt","reduce","n","index","onfield","type","tag","map","oneof","required","repeated","options","Number","from","to","t","onmessagebody","body","enums","messages","fields","extends","extensions","push","onenum","onmessage","onextensions","unshift","onextend","onoption","undefined","out","message","isNaN","lvl","msg","onpackagename","onsyntaxversion","version","onenumvalue","slice","join","val","e","values","parse","replace","hasBracket","test","onoptionMap","key","Array","isArray","onimport","file","onservice","service","methods","onrpc","rpc","input_type","output_type","client_streaming","server_streaming","buf","toString","i","j","schema","syntax","package","imports","firstline","services","forEach","ext","fieldSplit","messageName","nestedEnumName","enumNameIsFieldType","en","enumNameIsNestedEnumName","packed","indexOf","some","module","exports"],"sources":["C:/blockchain/Victus-health-assistant-main/Victus-health-assistant-main/node_modules/protocol-buffers-schema/parse.js"],"sourcesContent":["var tokenize = require('./tokenize')\nvar MAX_RANGE = 0x1FFFFFFF\n\n// \"Only repeated fields of primitive numeric types (types which use the varint, 32-bit, or 64-bit wire types) can be declared \"packed\".\"\n// https://developers.google.com/protocol-buffers/docs/encoding#optional\nvar PACKABLE_TYPES = [\n  // varint wire types\n  'int32', 'int64', 'uint32', 'uint64', 'sint32', 'sint64', 'bool',\n  // + ENUMS\n  // 64-bit wire types\n  'fixed64', 'sfixed64', 'double',\n  // 32-bit wire types\n  'fixed32', 'sfixed32', 'float'\n]\n\nvar onfieldoptionvalue = function (tokens) {\n  var value = tokens.shift()\n  if (value !== '{') {\n    return value\n  }\n  value = {}\n  var field = ''\n  while (tokens.length) {\n    switch (tokens[0]) {\n      case '}':\n        tokens.shift()\n        return value\n      case ':':\n        tokens.shift()\n        value[field] = onfieldoptionvalue(tokens)\n        break\n      default:\n        field = tokens.shift()\n    }\n  }\n}\n\nvar onfieldoptions = function (tokens) {\n  var opts = {}\n\n  while (tokens.length) {\n    switch (tokens[0]) {\n      case '[':\n      case ',': {\n        tokens.shift()\n        var name = tokens.shift()\n        if (name === '(') { // handling [(A) = B]\n          name = tokens.shift()\n          tokens.shift() // remove the end of bracket\n        }\n        var field = []\n        if (tokens[0][0] === '.') {\n          field = tokens[0].substr(1).split('.')\n          tokens.shift()\n        }\n        if (tokens[0] !== '=') throw new Error('Unexpected token in field options: ' + tokens[0])\n        tokens.shift()\n        if (tokens[0] === ']') throw new Error('Unexpected ] in field option')\n\n        // for option (A).b.c\n        // path will be ['A', 'b'] and lastFieldName 'c'\n        var path = [name].concat(field)\n        var lastFieldName = path.pop()\n\n        // opt references opts.A.b\n        var opt = path.reduce(function (opt, n, index) {\n          if (opt[n] == null) {\n            opt[n] = {}\n          }\n          return opt[n]\n        }, opts)\n\n        // now set opt['c'] that references opts.A.b['c']\n        opt[lastFieldName] = onfieldoptionvalue(tokens)\n        break\n      }\n      case ']':\n        tokens.shift()\n        return opts\n\n      default:\n        throw new Error('Unexpected token in field options: ' + tokens[0])\n    }\n  }\n\n  throw new Error('No closing tag for field options')\n}\n\nvar onfield = function (tokens) {\n  var field = {\n    name: null,\n    type: null,\n    tag: -1,\n    map: null,\n    oneof: null,\n    required: false,\n    repeated: false,\n    options: {}\n  }\n\n  while (tokens.length) {\n    switch (tokens[0]) {\n      case '=':\n        tokens.shift()\n        field.tag = Number(tokens.shift())\n        break\n\n      case 'map':\n        field.type = 'map'\n        field.map = { from: null, to: null }\n        tokens.shift()\n        if (tokens[0] !== '<') throw new Error('Unexpected token in map type: ' + tokens[0])\n        tokens.shift()\n        field.map.from = tokens.shift()\n        if (tokens[0] !== ',') throw new Error('Unexpected token in map type: ' + tokens[0])\n        tokens.shift()\n        field.map.to = tokens.shift()\n        if (tokens[0] !== '>') throw new Error('Unexpected token in map type: ' + tokens[0])\n        tokens.shift()\n        field.name = tokens.shift()\n        break\n\n      case 'repeated':\n      case 'required':\n      case 'optional':\n        var t = tokens.shift()\n        field.required = t === 'required'\n        field.repeated = t === 'repeated'\n        field.type = tokens.shift()\n        field.name = tokens.shift()\n        break\n\n      case '[':\n        field.options = onfieldoptions(tokens)\n        break\n\n      case ';':\n        if (field.name === null) throw new Error('Missing field name')\n        if (field.type === null) throw new Error('Missing type in message field: ' + field.name)\n        if (field.tag === -1) throw new Error('Missing tag number in message field: ' + field.name)\n        tokens.shift()\n        return field\n\n      default:\n        throw new Error('Unexpected token in message field: ' + tokens[0])\n    }\n  }\n\n  throw new Error('No ; found for message field')\n}\n\nvar onmessagebody = function (tokens) {\n  var body = {\n    enums: [],\n    options: {},\n    messages: [],\n    fields: [],\n    extends: [],\n    extensions: null\n  }\n\n  while (tokens.length) {\n    switch (tokens[0]) {\n      case 'map':\n      case 'repeated':\n      case 'optional':\n      case 'required':\n        body.fields.push(onfield(tokens))\n        break\n\n      case 'enum':\n        body.enums.push(onenum(tokens))\n        break\n\n      case 'message':\n        body.messages.push(onmessage(tokens))\n        break\n\n      case 'extensions':\n        body.extensions = onextensions(tokens)\n        break\n\n      case 'oneof':\n        tokens.shift()\n        var name = tokens.shift()\n        if (tokens[0] !== '{') throw new Error('Unexpected token in oneof: ' + tokens[0])\n        tokens.shift()\n        while (tokens[0] !== '}') {\n          tokens.unshift('optional')\n          var field = onfield(tokens)\n          field.oneof = name\n          body.fields.push(field)\n        }\n        tokens.shift()\n        break\n\n      case 'extend':\n        body.extends.push(onextend(tokens))\n        break\n\n      case ';':\n        tokens.shift()\n        break\n\n      case 'reserved':\n        tokens.shift()\n        while (tokens[0] !== ';') {\n          tokens.shift()\n        }\n        break\n\n      case 'option':\n        var opt = onoption(tokens)\n        if (body.options[opt.name] !== undefined) throw new Error('Duplicate option ' + opt.name)\n        body.options[opt.name] = opt.value\n        break\n\n      default:\n        // proto3 does not require the use of optional/required, assumed as optional\n        // \"singular: a well-formed message can have zero or one of this field (but not more than one).\"\n        // https://developers.google.com/protocol-buffers/docs/proto3#specifying-field-rules\n        tokens.unshift('optional')\n        body.fields.push(onfield(tokens))\n    }\n  }\n\n  return body\n}\n\nvar onextend = function (tokens) {\n  var out = {\n    name: tokens[1],\n    message: onmessage(tokens)\n  }\n  return out\n}\n\nvar onextensions = function (tokens) {\n  tokens.shift()\n  var from = Number(tokens.shift())\n  if (isNaN(from)) throw new Error('Invalid from in extensions definition')\n  if (tokens.shift() !== 'to') throw new Error(\"Expected keyword 'to' in extensions definition\")\n  var to = tokens.shift()\n  if (to === 'max') to = MAX_RANGE\n  to = Number(to)\n  if (isNaN(to)) throw new Error('Invalid to in extensions definition')\n  if (tokens.shift() !== ';') throw new Error('Missing ; in extensions definition')\n  return { from: from, to: to }\n}\nvar onmessage = function (tokens) {\n  tokens.shift()\n\n  var lvl = 1\n  var body = []\n  var msg = {\n    name: tokens.shift(),\n    options: {},\n    enums: [],\n    extends: [],\n    messages: [],\n    fields: []\n  }\n\n  if (tokens[0] !== '{') throw new Error('Expected { but found ' + tokens[0])\n  tokens.shift()\n\n  while (tokens.length) {\n    if (tokens[0] === '{') lvl++\n    else if (tokens[0] === '}') lvl--\n\n    if (!lvl) {\n      tokens.shift()\n      body = onmessagebody(body)\n      msg.enums = body.enums\n      msg.messages = body.messages\n      msg.fields = body.fields\n      msg.extends = body.extends\n      msg.extensions = body.extensions\n      msg.options = body.options\n      return msg\n    }\n\n    body.push(tokens.shift())\n  }\n\n  if (lvl) throw new Error('No closing tag for message')\n}\n\nvar onpackagename = function (tokens) {\n  tokens.shift()\n  var name = tokens.shift()\n  if (tokens[0] !== ';') throw new Error('Expected ; but found ' + tokens[0])\n  tokens.shift()\n  return name\n}\n\nvar onsyntaxversion = function (tokens) {\n  tokens.shift()\n\n  if (tokens[0] !== '=') throw new Error('Expected = but found ' + tokens[0])\n  tokens.shift()\n\n  var version = tokens.shift()\n  switch (version) {\n    case '\"proto2\"':\n      version = 2\n      break\n\n    case '\"proto3\"':\n      version = 3\n      break\n\n    default:\n      throw new Error('Expected protobuf syntax version but found ' + version)\n  }\n\n  if (tokens[0] !== ';') throw new Error('Expected ; but found ' + tokens[0])\n  tokens.shift()\n\n  return version\n}\n\nvar onenumvalue = function (tokens) {\n  if (tokens.length < 4) throw new Error('Invalid enum value: ' + tokens.slice(0, 3).join(' '))\n  if (tokens[0] === 'reserved') {\n    tokens.shift()\n    while (tokens[0] !== ';') {\n      tokens.shift()\n    }\n    tokens.shift()\n    return null\n  }\n  if (tokens[1] !== '=') throw new Error('Expected = but found ' + tokens[1])\n  if (tokens[3] !== ';' && tokens[3] !== '[') throw new Error('Expected ; or [ but found ' + tokens[1])\n\n  var name = tokens.shift()\n  tokens.shift()\n  var val = {\n    value: null,\n    options: {}\n  }\n  val.value = Number(tokens.shift())\n  if (tokens[0] === '[') {\n    val.options = onfieldoptions(tokens)\n  }\n  tokens.shift() // expecting the semicolon here\n\n  return {\n    name: name,\n    val: val\n  }\n}\n\nvar onenum = function (tokens) {\n  tokens.shift()\n  var options = {}\n  var e = {\n    name: tokens.shift(),\n    values: {},\n    options: {}\n  }\n\n  if (tokens[0] !== '{') throw new Error('Expected { but found ' + tokens[0])\n  tokens.shift()\n\n  while (tokens.length) {\n    if (tokens[0] === '}') {\n      tokens.shift()\n      // there goes optional semicolon after the enclosing \"}\"\n      if (tokens[0] === ';') tokens.shift()\n      return e\n    }\n    if (tokens[0] === 'option') {\n      options = onoption(tokens)\n      e.options[options.name] = options.value\n      continue\n    }\n    var val = onenumvalue(tokens)\n    if (val !== null) {\n      e.values[val.name] = val.val\n    }\n  }\n\n  throw new Error('No closing tag for enum')\n}\n\nvar onoption = function (tokens) {\n  var name = null\n  var value = null\n\n  var parse = function (value) {\n    if (value === 'true') return true\n    if (value === 'false') return false\n    return value.replace(/^\"+|\"+$/gm, '')\n  }\n\n  while (tokens.length) {\n    if (tokens[0] === ';') {\n      tokens.shift()\n      return { name: name, value: value }\n    }\n    switch (tokens[0]) {\n      case 'option':\n        tokens.shift()\n\n        var hasBracket = tokens[0] === '('\n        if (hasBracket) tokens.shift()\n\n        name = tokens.shift()\n\n        if (hasBracket) {\n          if (tokens[0] !== ')') throw new Error('Expected ) but found ' + tokens[0])\n          tokens.shift()\n        }\n\n        if (tokens[0][0] === '.') {\n          name += tokens.shift()\n        }\n\n        break\n\n      case '=':\n        tokens.shift()\n        if (name === null) throw new Error('Expected key for option with value: ' + tokens[0])\n        value = parse(tokens.shift())\n\n        if (name === 'optimize_for' && !/^(SPEED|CODE_SIZE|LITE_RUNTIME)$/.test(value)) {\n          throw new Error('Unexpected value for option optimize_for: ' + value)\n        } else if (value === '{') {\n          // option foo = {bar: baz}\n          value = onoptionMap(tokens)\n        }\n        break\n\n      default:\n        throw new Error('Unexpected token in option: ' + tokens[0])\n    }\n  }\n}\n\nvar onoptionMap = function (tokens) {\n  var parse = function (value) {\n    if (value === 'true') return true\n    if (value === 'false') return false\n    return value.replace(/^\"+|\"+$/gm, '')\n  }\n\n  var map = {}\n\n  while (tokens.length) {\n    if (tokens[0] === '}') {\n      tokens.shift()\n      return map\n    }\n\n    var hasBracket = tokens[0] === '('\n    if (hasBracket) tokens.shift()\n\n    var key = tokens.shift()\n    if (hasBracket) {\n      if (tokens[0] !== ')') throw new Error('Expected ) but found ' + tokens[0])\n      tokens.shift()\n    }\n\n    var value = null\n\n    switch (tokens[0]) {\n      case ':':\n        if (map[key] !== undefined) throw new Error('Duplicate option map key ' + key)\n\n        tokens.shift()\n\n        value = parse(tokens.shift())\n\n        if (value === '{') {\n          // option foo = {bar: baz}\n          value = onoptionMap(tokens)\n        }\n\n        map[key] = value\n\n        if (tokens[0] === ';') {\n          tokens.shift()\n        }\n        break\n\n      case '{':\n        tokens.shift()\n        value = onoptionMap(tokens)\n\n        if (map[key] === undefined) map[key] = []\n        if (!Array.isArray(map[key])) throw new Error('Duplicate option map key ' + key)\n\n        map[key].push(value)\n        break\n\n      default:\n        throw new Error('Unexpected token in option map: ' + tokens[0])\n    }\n  }\n\n  throw new Error('No closing tag for option map')\n}\n\nvar onimport = function (tokens) {\n  tokens.shift()\n  var file = tokens.shift().replace(/^\"+|\"+$/gm, '')\n\n  if (tokens[0] !== ';') throw new Error('Unexpected token: ' + tokens[0] + '. Expected \";\"')\n\n  tokens.shift()\n  return file\n}\n\nvar onservice = function (tokens) {\n  tokens.shift()\n\n  var service = {\n    name: tokens.shift(),\n    methods: [],\n    options: {}\n  }\n\n  if (tokens[0] !== '{') throw new Error('Expected { but found ' + tokens[0])\n  tokens.shift()\n\n  while (tokens.length) {\n    if (tokens[0] === '}') {\n      tokens.shift()\n      // there goes optional semicolon after the enclosing \"}\"\n      if (tokens[0] === ';') tokens.shift()\n      return service\n    }\n\n    switch (tokens[0]) {\n      case 'option':\n        var opt = onoption(tokens)\n        if (service.options[opt.name] !== undefined) throw new Error('Duplicate option ' + opt.name)\n        service.options[opt.name] = opt.value\n        break\n      case 'rpc':\n        service.methods.push(onrpc(tokens))\n        break\n      default:\n        throw new Error('Unexpected token in service: ' + tokens[0])\n    }\n  }\n\n  throw new Error('No closing tag for service')\n}\n\nvar onrpc = function (tokens) {\n  tokens.shift()\n\n  var rpc = {\n    name: tokens.shift(),\n    input_type: null,\n    output_type: null,\n    client_streaming: false,\n    server_streaming: false,\n    options: {}\n  }\n\n  if (tokens[0] !== '(') throw new Error('Expected ( but found ' + tokens[0])\n  tokens.shift()\n\n  if (tokens[0] === 'stream') {\n    tokens.shift()\n    rpc.client_streaming = true\n  }\n\n  rpc.input_type = tokens.shift()\n\n  if (tokens[0] !== ')') throw new Error('Expected ) but found ' + tokens[0])\n  tokens.shift()\n\n  if (tokens[0] !== 'returns') throw new Error('Expected returns but found ' + tokens[0])\n  tokens.shift()\n\n  if (tokens[0] !== '(') throw new Error('Expected ( but found ' + tokens[0])\n  tokens.shift()\n\n  if (tokens[0] === 'stream') {\n    tokens.shift()\n    rpc.server_streaming = true\n  }\n\n  rpc.output_type = tokens.shift()\n\n  if (tokens[0] !== ')') throw new Error('Expected ) but found ' + tokens[0])\n  tokens.shift()\n\n  if (tokens[0] === ';') {\n    tokens.shift()\n    return rpc\n  }\n\n  if (tokens[0] !== '{') throw new Error('Expected { but found ' + tokens[0])\n  tokens.shift()\n\n  while (tokens.length) {\n    if (tokens[0] === '}') {\n      tokens.shift()\n      // there goes optional semicolon after the enclosing \"}\"\n      if (tokens[0] === ';') tokens.shift()\n      return rpc\n    }\n\n    if (tokens[0] === 'option') {\n      var opt = onoption(tokens)\n      if (rpc.options[opt.name] !== undefined) throw new Error('Duplicate option ' + opt.name)\n      rpc.options[opt.name] = opt.value\n    } else {\n      throw new Error('Unexpected token in rpc options: ' + tokens[0])\n    }\n  }\n\n  throw new Error('No closing tag for rpc')\n}\n\nvar parse = function (buf) {\n  var tokens = tokenize(buf.toString())\n  // check for isolated strings in tokens by looking for opening quote\n  for (var i = 0; i < tokens.length; i++) {\n    if (/^(\"|')([^'\"]*)$/.test(tokens[i])) {\n      var j\n      if (tokens[i].length === 1) {\n        j = i + 1\n      } else {\n        j = i\n      }\n      // look ahead for the closing quote and collapse all\n      // in-between tokens into a single token\n      for (j; j < tokens.length; j++) {\n        if (/^[^'\"\\\\]*(?:\\\\.[^'\"\\\\]*)*(\"|')$/.test(tokens[j])) {\n          tokens = tokens.slice(0, i).concat(tokens.slice(i, j + 1).join('')).concat(tokens.slice(j + 1))\n          break\n        }\n      }\n    }\n  }\n  var schema = {\n    syntax: 3,\n    package: null,\n    imports: [],\n    enums: [],\n    messages: [],\n    options: {},\n    extends: []\n  }\n\n  var firstline = true\n\n  while (tokens.length) {\n    switch (tokens[0]) {\n      case 'package':\n        schema.package = onpackagename(tokens)\n        break\n\n      case 'syntax':\n        if (!firstline) throw new Error('Protobuf syntax version should be first thing in file')\n        schema.syntax = onsyntaxversion(tokens)\n        break\n\n      case 'message':\n        schema.messages.push(onmessage(tokens))\n        break\n\n      case 'enum':\n        schema.enums.push(onenum(tokens))\n        break\n\n      case 'option':\n        var opt = onoption(tokens)\n        if (schema.options[opt.name]) throw new Error('Duplicate option ' + opt.name)\n        schema.options[opt.name] = opt.value\n        break\n\n      case 'import':\n        schema.imports.push(onimport(tokens))\n        break\n\n      case 'extend':\n        schema.extends.push(onextend(tokens))\n        break\n\n      case 'service':\n        if (!schema.services) schema.services = []\n        schema.services.push(onservice(tokens))\n        break\n\n      default:\n        throw new Error('Unexpected token: ' + tokens[0])\n    }\n    firstline = false\n  }\n\n  // now iterate over messages and propagate extends\n  schema.extends.forEach(function (ext) {\n    schema.messages.forEach(function (msg) {\n      if (msg.name === ext.name) {\n        ext.message.fields.forEach(function (field) {\n          if (!msg.extensions || field.tag < msg.extensions.from || field.tag > msg.extensions.to) {\n            throw new Error(msg.name + ' does not declare ' + field.tag + ' as an extension number')\n          }\n          msg.fields.push(field)\n        })\n      }\n    })\n  })\n\n  schema.messages.forEach(function (msg) {\n    msg.fields.forEach(function (field) {\n      var fieldSplit\n      var messageName\n      var nestedEnumName\n      var message\n\n      function enumNameIsFieldType (en) {\n        return en.name === field.type\n      }\n\n      function enumNameIsNestedEnumName (en) {\n        return en.name === nestedEnumName\n      }\n\n      if (field.options && field.options.packed === 'true') {\n        if (PACKABLE_TYPES.indexOf(field.type) === -1) {\n          // let's see if it's an enum\n          if (field.type.indexOf('.') === -1) {\n            if (msg.enums && msg.enums.some(enumNameIsFieldType)) {\n              return\n            }\n          } else {\n            fieldSplit = field.type.split('.')\n            if (fieldSplit.length > 2) {\n              throw new Error('what is this?')\n            }\n\n            messageName = fieldSplit[0]\n            nestedEnumName = fieldSplit[1]\n\n            schema.messages.some(function (msg) {\n              if (msg.name === messageName) {\n                message = msg\n                return msg\n              }\n            })\n\n            if (message && message.enums && message.enums.some(enumNameIsNestedEnumName)) {\n              return\n            }\n          }\n\n          throw new Error(\n            'Fields of type ' + field.type + ' cannot be declared [packed=true]. ' +\n            'Only repeated fields of primitive numeric types (types which use ' +\n            'the varint, 32-bit, or 64-bit wire types) can be declared \"packed\". ' +\n            'See https://developers.google.com/protocol-buffers/docs/encoding#optional'\n          )\n        }\n      }\n    })\n  })\n\n  return schema\n}\n\nmodule.exports = parse\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}