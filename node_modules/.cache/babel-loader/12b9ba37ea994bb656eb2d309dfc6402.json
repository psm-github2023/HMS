{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n    m = s && o[s],\n    i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ConsensusAlgorithm = exports.ConsensusType = exports.Hardfork = exports.Chain = exports.CustomChain = void 0;\nvar events_1 = require(\"events\");\nvar crc_32_1 = require(\"crc-32\");\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\nvar chains_1 = require(\"./chains\");\nvar hardforks_1 = require(\"./hardforks\");\nvar eips_1 = require(\"./eips\");\nvar CustomChain;\n(function (CustomChain) {\n  /**\n   * Polygon (Matic) Mainnet\n   *\n   * - [Documentation](https://docs.matic.network/docs/develop/network-details/network)\n   */\n  CustomChain[\"PolygonMainnet\"] = \"polygon-mainnet\";\n  /**\n   * Polygon (Matic) Mumbai Testnet\n   *\n   * - [Documentation](https://docs.matic.network/docs/develop/network-details/network)\n   */\n  CustomChain[\"PolygonMumbai\"] = \"polygon-mumbai\";\n  /**\n   * Arbitrum Rinkeby Testnet\n   *\n   * - [Documentation](https://developer.offchainlabs.com/docs/public_testnet)\n   */\n  CustomChain[\"ArbitrumRinkebyTestnet\"] = \"arbitrum-rinkeby-testnet\";\n  /**\n   * xDai EVM sidechain with a native stable token\n   *\n   * - [Documentation](https://www.xdaichain.com/)\n   */\n  CustomChain[\"xDaiChain\"] = \"x-dai-chain\";\n})(CustomChain = exports.CustomChain || (exports.CustomChain = {}));\nvar Chain;\n(function (Chain) {\n  Chain[Chain[\"Mainnet\"] = 1] = \"Mainnet\";\n  Chain[Chain[\"Ropsten\"] = 3] = \"Ropsten\";\n  Chain[Chain[\"Rinkeby\"] = 4] = \"Rinkeby\";\n  Chain[Chain[\"Kovan\"] = 42] = \"Kovan\";\n  Chain[Chain[\"Goerli\"] = 5] = \"Goerli\";\n})(Chain = exports.Chain || (exports.Chain = {}));\nvar Hardfork;\n(function (Hardfork) {\n  Hardfork[\"Chainstart\"] = \"chainstart\";\n  Hardfork[\"Homestead\"] = \"homestead\";\n  Hardfork[\"Dao\"] = \"dao\";\n  Hardfork[\"TangerineWhistle\"] = \"tangerineWhistle\";\n  Hardfork[\"SpuriousDragon\"] = \"spuriousDragon\";\n  Hardfork[\"Byzantium\"] = \"byzantium\";\n  Hardfork[\"Constantinople\"] = \"constantinople\";\n  Hardfork[\"Petersburg\"] = \"petersburg\";\n  Hardfork[\"Istanbul\"] = \"istanbul\";\n  Hardfork[\"MuirGlacier\"] = \"muirGlacier\";\n  Hardfork[\"Berlin\"] = \"berlin\";\n  Hardfork[\"London\"] = \"london\";\n  Hardfork[\"Shanghai\"] = \"shanghai\";\n  Hardfork[\"Merge\"] = \"merge\";\n})(Hardfork = exports.Hardfork || (exports.Hardfork = {}));\nvar ConsensusType;\n(function (ConsensusType) {\n  ConsensusType[\"ProofOfStake\"] = \"pos\";\n  ConsensusType[\"ProofOfWork\"] = \"pow\";\n  ConsensusType[\"ProofOfAuthority\"] = \"poa\";\n})(ConsensusType = exports.ConsensusType || (exports.ConsensusType = {}));\nvar ConsensusAlgorithm;\n(function (ConsensusAlgorithm) {\n  ConsensusAlgorithm[\"Ethash\"] = \"ethash\";\n  ConsensusAlgorithm[\"Clique\"] = \"clique\";\n  ConsensusAlgorithm[\"Casper\"] = \"casper\";\n})(ConsensusAlgorithm = exports.ConsensusAlgorithm || (exports.ConsensusAlgorithm = {}));\n/**\n * Common class to access chain and hardfork parameters and to provide\n * a unified and shared view on the network and hardfork state.\n *\n * Use the {@link Common.custom} static constructor for creating simple\n * custom chain {@link Common} objects (more complete custom chain setups\n * can be created via the main constructor and the {@link CommonOpts.customChains} parameter).\n */\nvar Common = /** @class */function (_super) {\n  __extends(Common, _super);\n  /**\n   *\n   * @constructor\n   */\n  function Common(opts) {\n    var e_1, _a;\n    var _b, _c;\n    var _this = _super.call(this) || this;\n    _this._supportedHardforks = [];\n    _this._eips = [];\n    _this._customChains = (_b = opts.customChains) !== null && _b !== void 0 ? _b : [];\n    _this._chainParams = _this.setChain(opts.chain);\n    _this.DEFAULT_HARDFORK = (_c = _this._chainParams.defaultHardfork) !== null && _c !== void 0 ? _c : Hardfork.Istanbul;\n    try {\n      for (var _d = __values(_this._chainParams.hardforks), _e = _d.next(); !_e.done; _e = _d.next()) {\n        var hf = _e.value;\n        if (!hf.forkHash) {\n          hf.forkHash = _this._calcForkHash(hf.name);\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_e && !_e.done && (_a = _d.return)) _a.call(_d);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n    _this._hardfork = _this.DEFAULT_HARDFORK;\n    if (opts.supportedHardforks) {\n      _this._supportedHardforks = opts.supportedHardforks;\n    }\n    if (opts.hardfork) {\n      _this.setHardfork(opts.hardfork);\n    }\n    if (opts.eips) {\n      _this.setEIPs(opts.eips);\n    }\n    return _this;\n  }\n  /**\n   * Creates a {@link Common} object for a custom chain, based on a standard one.\n   *\n   * It uses all the {@link Chain} parameters from the {@link baseChain} option except the ones overridden\n   * in a provided {@link chainParamsOrName} dictionary. Some usage example:\n   *\n   * ```javascript\n   * Common.custom({chainId: 123})\n   * ```\n   *\n   * There are also selected supported custom chains which can be initialized by using one of the\n   * {@link CustomChains} for {@link chainParamsOrName}, e.g.:\n   *\n   * ```javascript\n   * Common.custom(CustomChains.MaticMumbai)\n   * ```\n   *\n   * Note that these supported custom chains only provide some base parameters (usually the chain and\n   * network ID and a name) and can only be used for selected use cases (e.g. sending a tx with\n   * the `@ethereumjs/tx` library to a Layer-2 chain).\n   *\n   * @param chainParamsOrName Custom parameter dict (`name` will default to `custom-chain`) or string with name of a supported custom chain\n   * @param opts Custom chain options to set the {@link CustomCommonOpts.baseChain}, selected {@link CustomCommonOpts.hardfork} and others\n   */\n  Common.custom = function (chainParamsOrName, opts) {\n    var _a;\n    if (opts === void 0) {\n      opts = {};\n    }\n    var baseChain = (_a = opts.baseChain) !== null && _a !== void 0 ? _a : 'mainnet';\n    var standardChainParams = __assign({}, Common._getChainParams(baseChain));\n    standardChainParams['name'] = 'custom-chain';\n    if (typeof chainParamsOrName !== 'string') {\n      return new Common(__assign({\n        chain: __assign(__assign({}, standardChainParams), chainParamsOrName)\n      }, opts));\n    } else {\n      if (chainParamsOrName === CustomChain.PolygonMainnet) {\n        return Common.custom({\n          name: CustomChain.PolygonMainnet,\n          chainId: 137,\n          networkId: 137\n        });\n      }\n      if (chainParamsOrName === CustomChain.PolygonMumbai) {\n        return Common.custom({\n          name: CustomChain.PolygonMumbai,\n          chainId: 80001,\n          networkId: 80001\n        });\n      }\n      if (chainParamsOrName === CustomChain.ArbitrumRinkebyTestnet) {\n        return Common.custom({\n          name: CustomChain.ArbitrumRinkebyTestnet,\n          chainId: 421611,\n          networkId: 421611\n        });\n      }\n      if (chainParamsOrName === CustomChain.xDaiChain) {\n        return Common.custom({\n          name: CustomChain.xDaiChain,\n          chainId: 100,\n          networkId: 100\n        });\n      }\n      throw new Error(\"Custom chain \" + chainParamsOrName + \" not supported\");\n    }\n  };\n  /**\n   * Creates a {@link Common} object for a custom chain, based on a standard one. It uses all the `Chain`\n   * params from {@link baseChain} except the ones overridden in {@link customChainParams}.\n   *\n   * @deprecated Use {@link Common.custom} instead\n   *\n   * @param baseChain The name (`mainnet`) or id (`1`) of a standard chain used to base the custom\n   * chain params on.\n   * @param customChainParams The custom parameters of the chain.\n   * @param hardfork String identifier ('byzantium') for hardfork (optional)\n   * @param supportedHardforks Limit parameter returns to the given hardforks (optional)\n   */\n  Common.forCustomChain = function (baseChain, customChainParams, hardfork, supportedHardforks) {\n    var standardChainParams = Common._getChainParams(baseChain);\n    return new Common({\n      chain: __assign(__assign({}, standardChainParams), customChainParams),\n      hardfork: hardfork,\n      supportedHardforks: supportedHardforks\n    });\n  };\n  /**\n   * Static method to determine if a {@link chainId} is supported as a standard chain\n   * @param chainId BN id (`1`) of a standard chain\n   * @returns boolean\n   */\n  Common.isSupportedChainId = function (chainId) {\n    var initializedChains = (0, chains_1._getInitializedChains)();\n    return Boolean(initializedChains['names'][chainId.toString()]);\n  };\n  Common._getChainParams = function (chain, customChains) {\n    var initializedChains = (0, chains_1._getInitializedChains)(customChains);\n    if (typeof chain === 'number' || ethereumjs_util_1.BN.isBN(chain)) {\n      chain = chain.toString();\n      if (initializedChains['names'][chain]) {\n        var name_1 = initializedChains['names'][chain];\n        return initializedChains[name_1];\n      }\n      throw new Error(\"Chain with ID \" + chain + \" not supported\");\n    }\n    if (initializedChains[chain]) {\n      return initializedChains[chain];\n    }\n    throw new Error(\"Chain with name \" + chain + \" not supported\");\n  };\n  /**\n   * Sets the chain\n   * @param chain String ('mainnet') or Number (1) chain\n   *     representation. Or, a Dictionary of chain parameters for a private network.\n   * @returns The dictionary with parameters set as chain\n   */\n  Common.prototype.setChain = function (chain) {\n    var e_2, _a;\n    if (typeof chain === 'number' || typeof chain === 'string' || ethereumjs_util_1.BN.isBN(chain)) {\n      // Filter out genesis states if passed in to customChains\n      var plainCustomChains = void 0;\n      if (this._customChains && this._customChains.length > 0 && Array.isArray(this._customChains[0])) {\n        plainCustomChains = this._customChains.map(function (e) {\n          return e[0];\n        });\n      } else {\n        plainCustomChains = this._customChains;\n      }\n      this._chainParams = Common._getChainParams(chain, plainCustomChains);\n    } else if (typeof chain === 'object') {\n      if (this._customChains.length > 0) {\n        throw new Error('Chain must be a string, number, or BN when initialized with customChains passed in');\n      }\n      var required = ['networkId', 'genesis', 'hardforks', 'bootstrapNodes'];\n      try {\n        for (var required_1 = __values(required), required_1_1 = required_1.next(); !required_1_1.done; required_1_1 = required_1.next()) {\n          var param = required_1_1.value;\n          if (chain[param] === undefined) {\n            throw new Error(\"Missing required chain parameter: \" + param);\n          }\n        }\n      } catch (e_2_1) {\n        e_2 = {\n          error: e_2_1\n        };\n      } finally {\n        try {\n          if (required_1_1 && !required_1_1.done && (_a = required_1.return)) _a.call(required_1);\n        } finally {\n          if (e_2) throw e_2.error;\n        }\n      }\n      this._chainParams = chain;\n    } else {\n      throw new Error('Wrong input format');\n    }\n    return this._chainParams;\n  };\n  /**\n   * Sets the hardfork to get params for\n   * @param hardfork String identifier (e.g. 'byzantium') or {@link Hardfork} enum\n   */\n  Common.prototype.setHardfork = function (hardfork) {\n    var e_3, _a;\n    if (!this._isSupportedHardfork(hardfork)) {\n      throw new Error(\"Hardfork \" + hardfork + \" not set as supported in supportedHardforks\");\n    }\n    var existing = false;\n    try {\n      for (var HARDFORK_CHANGES_1 = __values(hardforks_1.hardforks), HARDFORK_CHANGES_1_1 = HARDFORK_CHANGES_1.next(); !HARDFORK_CHANGES_1_1.done; HARDFORK_CHANGES_1_1 = HARDFORK_CHANGES_1.next()) {\n        var hfChanges = HARDFORK_CHANGES_1_1.value;\n        if (hfChanges[0] === hardfork) {\n          if (this._hardfork !== hardfork) {\n            this._hardfork = hardfork;\n            this.emit('hardforkChanged', hardfork);\n          }\n          existing = true;\n        }\n      }\n    } catch (e_3_1) {\n      e_3 = {\n        error: e_3_1\n      };\n    } finally {\n      try {\n        if (HARDFORK_CHANGES_1_1 && !HARDFORK_CHANGES_1_1.done && (_a = HARDFORK_CHANGES_1.return)) _a.call(HARDFORK_CHANGES_1);\n      } finally {\n        if (e_3) throw e_3.error;\n      }\n    }\n    if (!existing) {\n      throw new Error(\"Hardfork with name \" + hardfork + \" not supported\");\n    }\n  };\n  /**\n   * Returns the hardfork based on the block number or an optional\n   * total difficulty (Merge HF) provided.\n   *\n   * An optional TD takes precedence in case the corresponding HF block\n   * is set to `null` or otherwise needs to match (if not an error\n   * will be thrown).\n   *\n   * @param blockNumber\n   * @param td\n   * @returns The name of the HF\n   */\n  Common.prototype.getHardforkByBlockNumber = function (blockNumber, td) {\n    var e_4, _a;\n    blockNumber = (0, ethereumjs_util_1.toType)(blockNumber, ethereumjs_util_1.TypeOutput.BN);\n    td = td ? (0, ethereumjs_util_1.toType)(td, ethereumjs_util_1.TypeOutput.BN) : undefined;\n    var hardfork = Hardfork.Chainstart;\n    var minTdHF;\n    var maxTdHF;\n    var previousHF;\n    try {\n      for (var _b = __values(this.hardforks()), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var hf = _c.value;\n        // Skip comparison for not applied HFs\n        if (hf.block === null) {\n          if (td && hf.td) {\n            if (td.gten(hf.td)) {\n              return hf.name;\n            }\n          }\n          continue;\n        }\n        if (blockNumber.gte(new ethereumjs_util_1.BN(hf.block))) {\n          hardfork = hf.name;\n        }\n        if (td && hf.td) {\n          if (td.gten(hf.td)) {\n            minTdHF = hf.name;\n          } else {\n            maxTdHF = previousHF;\n          }\n        }\n        previousHF = hf.name;\n      }\n    } catch (e_4_1) {\n      e_4 = {\n        error: e_4_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_4) throw e_4.error;\n      }\n    }\n    if (td) {\n      var msgAdd = \"block number: \" + blockNumber + \" (-> \" + hardfork + \"), \";\n      if (minTdHF) {\n        if (!this.hardforkGteHardfork(hardfork, minTdHF)) {\n          var msg = 'HF determined by block number is lower than the minimum total difficulty HF';\n          msgAdd += \"total difficulty: \" + td + \" (-> \" + minTdHF + \")\";\n          throw new Error(msg + \": \" + msgAdd);\n        }\n      }\n      if (maxTdHF) {\n        if (!this.hardforkGteHardfork(maxTdHF, hardfork)) {\n          var msg = 'Maximum HF determined by total difficulty is lower than the block number HF';\n          msgAdd += \"total difficulty: \" + td + \" (-> \" + maxTdHF + \")\";\n          throw new Error(msg + \": \" + msgAdd);\n        }\n      }\n    }\n    return hardfork;\n  };\n  /**\n   * Sets a new hardfork based on the block number or an optional\n   * total difficulty (Merge HF) provided.\n   *\n   * An optional TD takes precedence in case the corresponding HF block\n   * is set to `null` or otherwise needs to match (if not an error\n   * will be thrown).\n   *\n   * @param blockNumber\n   * @param td\n   * @returns The name of the HF set\n   */\n  Common.prototype.setHardforkByBlockNumber = function (blockNumber, td) {\n    var hardfork = this.getHardforkByBlockNumber(blockNumber, td);\n    this.setHardfork(hardfork);\n    return hardfork;\n  };\n  /**\n   * Internal helper function to choose between hardfork set and hardfork provided as param\n   * @param hardfork Hardfork given to function as a parameter\n   * @returns Hardfork chosen to be used\n   */\n  Common.prototype._chooseHardfork = function (hardfork, onlySupported) {\n    if (onlySupported === void 0) {\n      onlySupported = true;\n    }\n    if (!hardfork) {\n      hardfork = this._hardfork;\n    } else if (onlySupported && !this._isSupportedHardfork(hardfork)) {\n      throw new Error(\"Hardfork \" + hardfork + \" not set as supported in supportedHardforks\");\n    }\n    return hardfork;\n  };\n  /**\n   * Internal helper function, returns the params for the given hardfork for the chain set\n   * @param hardfork Hardfork name\n   * @returns Dictionary with hardfork params\n   */\n  Common.prototype._getHardfork = function (hardfork) {\n    var e_5, _a;\n    var hfs = this.hardforks();\n    try {\n      for (var hfs_1 = __values(hfs), hfs_1_1 = hfs_1.next(); !hfs_1_1.done; hfs_1_1 = hfs_1.next()) {\n        var hf = hfs_1_1.value;\n        if (hf['name'] === hardfork) return hf;\n      }\n    } catch (e_5_1) {\n      e_5 = {\n        error: e_5_1\n      };\n    } finally {\n      try {\n        if (hfs_1_1 && !hfs_1_1.done && (_a = hfs_1.return)) _a.call(hfs_1);\n      } finally {\n        if (e_5) throw e_5.error;\n      }\n    }\n    throw new Error(\"Hardfork \" + hardfork + \" not defined for chain \" + this.chainName());\n  };\n  /**\n   * Internal helper function to check if a hardfork is set to be supported by the library\n   * @param hardfork Hardfork name\n   * @returns True if hardfork is supported\n   */\n  Common.prototype._isSupportedHardfork = function (hardfork) {\n    var e_6, _a;\n    if (this._supportedHardforks.length > 0) {\n      try {\n        for (var _b = __values(this._supportedHardforks), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var supportedHf = _c.value;\n          if (hardfork === supportedHf) return true;\n        }\n      } catch (e_6_1) {\n        e_6 = {\n          error: e_6_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_6) throw e_6.error;\n        }\n      }\n    } else {\n      return true;\n    }\n    return false;\n  };\n  /**\n   * Sets the active EIPs\n   * @param eips\n   */\n  Common.prototype.setEIPs = function (eips) {\n    var e_7, _a;\n    var _this = this;\n    if (eips === void 0) {\n      eips = [];\n    }\n    var _loop_1 = function (eip) {\n      if (!(eip in eips_1.EIPs)) {\n        throw new Error(eip + \" not supported\");\n      }\n      var minHF = this_1.gteHardfork(eips_1.EIPs[eip]['minimumHardfork']);\n      if (!minHF) {\n        throw new Error(eip + \" cannot be activated on hardfork \" + this_1.hardfork() + \", minimumHardfork: \" + minHF);\n      }\n      if (eips_1.EIPs[eip].requiredEIPs) {\n        // eslint-disable-next-line prettier/prettier\n        eips_1.EIPs[eip].requiredEIPs.forEach(function (elem) {\n          if (!(eips.includes(elem) || _this.isActivatedEIP(elem))) {\n            throw new Error(eip + \" requires EIP \" + elem + \", but is not included in the EIP list\");\n          }\n        });\n      }\n    };\n    var this_1 = this;\n    try {\n      for (var eips_2 = __values(eips), eips_2_1 = eips_2.next(); !eips_2_1.done; eips_2_1 = eips_2.next()) {\n        var eip = eips_2_1.value;\n        _loop_1(eip);\n      }\n    } catch (e_7_1) {\n      e_7 = {\n        error: e_7_1\n      };\n    } finally {\n      try {\n        if (eips_2_1 && !eips_2_1.done && (_a = eips_2.return)) _a.call(eips_2);\n      } finally {\n        if (e_7) throw e_7.error;\n      }\n    }\n    this._eips = eips;\n  };\n  /**\n   * Returns a parameter for the current chain setup\n   *\n   * If the parameter is present in an EIP, the EIP always takes precendence.\n   * Otherwise the parameter if taken from the latest applied HF with\n   * a change on the respective parameter.\n   *\n   * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n   * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n   * @returns The value requested or `null` if not found\n   */\n  Common.prototype.param = function (topic, name) {\n    var e_8, _a;\n    // TODO: consider the case that different active EIPs\n    // can change the same parameter\n    var value = null;\n    try {\n      for (var _b = __values(this._eips), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var eip = _c.value;\n        value = this.paramByEIP(topic, name, eip);\n        if (value !== null) {\n          return value;\n        }\n      }\n    } catch (e_8_1) {\n      e_8 = {\n        error: e_8_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_8) throw e_8.error;\n      }\n    }\n    return this.paramByHardfork(topic, name, this._hardfork);\n  };\n  /**\n   * Returns the parameter corresponding to a hardfork\n   * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n   * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n   * @param hardfork Hardfork name\n   * @returns The value requested or `null` if not found\n   */\n  Common.prototype.paramByHardfork = function (topic, name, hardfork) {\n    var e_9, _a, e_10, _b;\n    hardfork = this._chooseHardfork(hardfork);\n    var value = null;\n    try {\n      for (var HARDFORK_CHANGES_2 = __values(hardforks_1.hardforks), HARDFORK_CHANGES_2_1 = HARDFORK_CHANGES_2.next(); !HARDFORK_CHANGES_2_1.done; HARDFORK_CHANGES_2_1 = HARDFORK_CHANGES_2.next()) {\n        var hfChanges = HARDFORK_CHANGES_2_1.value;\n        // EIP-referencing HF file (e.g. berlin.json)\n        if ('eips' in hfChanges[1]) {\n          var hfEIPs = hfChanges[1]['eips'];\n          try {\n            for (var hfEIPs_1 = (e_10 = void 0, __values(hfEIPs)), hfEIPs_1_1 = hfEIPs_1.next(); !hfEIPs_1_1.done; hfEIPs_1_1 = hfEIPs_1.next()) {\n              var eip = hfEIPs_1_1.value;\n              var valueEIP = this.paramByEIP(topic, name, eip);\n              value = valueEIP !== null ? valueEIP : value;\n            }\n          } catch (e_10_1) {\n            e_10 = {\n              error: e_10_1\n            };\n          } finally {\n            try {\n              if (hfEIPs_1_1 && !hfEIPs_1_1.done && (_b = hfEIPs_1.return)) _b.call(hfEIPs_1);\n            } finally {\n              if (e_10) throw e_10.error;\n            }\n          }\n          // Paramater-inlining HF file (e.g. istanbul.json)\n        } else {\n          if (!hfChanges[1][topic]) {\n            throw new Error(\"Topic \" + topic + \" not defined\");\n          }\n          if (hfChanges[1][topic][name] !== undefined) {\n            value = hfChanges[1][topic][name].v;\n          }\n        }\n        if (hfChanges[0] === hardfork) break;\n      }\n    } catch (e_9_1) {\n      e_9 = {\n        error: e_9_1\n      };\n    } finally {\n      try {\n        if (HARDFORK_CHANGES_2_1 && !HARDFORK_CHANGES_2_1.done && (_a = HARDFORK_CHANGES_2.return)) _a.call(HARDFORK_CHANGES_2);\n      } finally {\n        if (e_9) throw e_9.error;\n      }\n    }\n    return value;\n  };\n  /**\n   * Returns a parameter corresponding to an EIP\n   * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n   * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n   * @param eip Number of the EIP\n   * @returns The value requested or `null` if not found\n   */\n  Common.prototype.paramByEIP = function (topic, name, eip) {\n    if (!(eip in eips_1.EIPs)) {\n      throw new Error(eip + \" not supported\");\n    }\n    var eipParams = eips_1.EIPs[eip];\n    if (!(topic in eipParams)) {\n      throw new Error(\"Topic \" + topic + \" not defined\");\n    }\n    if (eipParams[topic][name] === undefined) {\n      return null;\n    }\n    var value = eipParams[topic][name].v;\n    return value;\n  };\n  /**\n   * Returns a parameter for the hardfork active on block number\n   * @param topic Parameter topic\n   * @param name Parameter name\n   * @param blockNumber Block number\n   */\n  Common.prototype.paramByBlock = function (topic, name, blockNumber) {\n    var activeHfs = this.activeHardforks(blockNumber);\n    var hardfork = activeHfs[activeHfs.length - 1]['name'];\n    return this.paramByHardfork(topic, name, hardfork);\n  };\n  /**\n   * Checks if an EIP is activated by either being included in the EIPs\n   * manually passed in with the {@link CommonOpts.eips} or in a\n   * hardfork currently being active\n   *\n   * Note: this method only works for EIPs being supported\n   * by the {@link CommonOpts.eips} constructor option\n   * @param eip\n   */\n  Common.prototype.isActivatedEIP = function (eip) {\n    var e_11, _a;\n    if (this.eips().includes(eip)) {\n      return true;\n    }\n    try {\n      for (var HARDFORK_CHANGES_3 = __values(hardforks_1.hardforks), HARDFORK_CHANGES_3_1 = HARDFORK_CHANGES_3.next(); !HARDFORK_CHANGES_3_1.done; HARDFORK_CHANGES_3_1 = HARDFORK_CHANGES_3.next()) {\n        var hfChanges = HARDFORK_CHANGES_3_1.value;\n        var hf = hfChanges[1];\n        if (this.gteHardfork(hf['name']) && 'eips' in hf) {\n          if (hf['eips'].includes(eip)) {\n            return true;\n          }\n        }\n      }\n    } catch (e_11_1) {\n      e_11 = {\n        error: e_11_1\n      };\n    } finally {\n      try {\n        if (HARDFORK_CHANGES_3_1 && !HARDFORK_CHANGES_3_1.done && (_a = HARDFORK_CHANGES_3.return)) _a.call(HARDFORK_CHANGES_3);\n      } finally {\n        if (e_11) throw e_11.error;\n      }\n    }\n    return false;\n  };\n  /**\n   * Checks if set or provided hardfork is active on block number\n   * @param hardfork Hardfork name or null (for HF set)\n   * @param blockNumber\n   * @param opts Hardfork options (onlyActive unused)\n   * @returns True if HF is active on block number\n   */\n  Common.prototype.hardforkIsActiveOnBlock = function (hardfork, blockNumber, opts) {\n    var _a;\n    if (opts === void 0) {\n      opts = {};\n    }\n    blockNumber = (0, ethereumjs_util_1.toType)(blockNumber, ethereumjs_util_1.TypeOutput.BN);\n    var onlySupported = (_a = opts.onlySupported) !== null && _a !== void 0 ? _a : false;\n    hardfork = this._chooseHardfork(hardfork, onlySupported);\n    var hfBlock = this.hardforkBlockBN(hardfork);\n    if (hfBlock && blockNumber.gte(hfBlock)) {\n      return true;\n    }\n    return false;\n  };\n  /**\n   * Alias to hardforkIsActiveOnBlock when hardfork is set\n   * @param blockNumber\n   * @param opts Hardfork options (onlyActive unused)\n   * @returns True if HF is active on block number\n   */\n  Common.prototype.activeOnBlock = function (blockNumber, opts) {\n    return this.hardforkIsActiveOnBlock(null, blockNumber, opts);\n  };\n  /**\n   * Sequence based check if given or set HF1 is greater than or equal HF2\n   * @param hardfork1 Hardfork name or null (if set)\n   * @param hardfork2 Hardfork name\n   * @param opts Hardfork options\n   * @returns True if HF1 gte HF2\n   */\n  Common.prototype.hardforkGteHardfork = function (hardfork1, hardfork2, opts) {\n    var e_12, _a;\n    if (opts === void 0) {\n      opts = {};\n    }\n    var onlyActive = opts.onlyActive === undefined ? false : opts.onlyActive;\n    hardfork1 = this._chooseHardfork(hardfork1, opts.onlySupported);\n    var hardforks;\n    if (onlyActive) {\n      hardforks = this.activeHardforks(null, opts);\n    } else {\n      hardforks = this.hardforks();\n    }\n    var posHf1 = -1,\n      posHf2 = -1;\n    var index = 0;\n    try {\n      for (var hardforks_2 = __values(hardforks), hardforks_2_1 = hardforks_2.next(); !hardforks_2_1.done; hardforks_2_1 = hardforks_2.next()) {\n        var hf = hardforks_2_1.value;\n        if (hf['name'] === hardfork1) posHf1 = index;\n        if (hf['name'] === hardfork2) posHf2 = index;\n        index += 1;\n      }\n    } catch (e_12_1) {\n      e_12 = {\n        error: e_12_1\n      };\n    } finally {\n      try {\n        if (hardforks_2_1 && !hardforks_2_1.done && (_a = hardforks_2.return)) _a.call(hardforks_2);\n      } finally {\n        if (e_12) throw e_12.error;\n      }\n    }\n    return posHf1 >= posHf2 && posHf2 !== -1;\n  };\n  /**\n   * Alias to hardforkGteHardfork when hardfork is set\n   * @param hardfork Hardfork name\n   * @param opts Hardfork options\n   * @returns True if hardfork set is greater than hardfork provided\n   */\n  Common.prototype.gteHardfork = function (hardfork, opts) {\n    return this.hardforkGteHardfork(null, hardfork, opts);\n  };\n  /**\n   * Checks if given or set hardfork is active on the chain\n   * @param hardfork Hardfork name, optional if HF set\n   * @param opts Hardfork options (onlyActive unused)\n   * @returns True if hardfork is active on the chain\n   */\n  Common.prototype.hardforkIsActiveOnChain = function (hardfork, opts) {\n    var e_13, _a;\n    var _b;\n    if (opts === void 0) {\n      opts = {};\n    }\n    var onlySupported = (_b = opts.onlySupported) !== null && _b !== void 0 ? _b : false;\n    hardfork = this._chooseHardfork(hardfork, onlySupported);\n    try {\n      for (var _c = __values(this.hardforks()), _d = _c.next(); !_d.done; _d = _c.next()) {\n        var hf = _d.value;\n        if (hf['name'] === hardfork && hf['block'] !== null) return true;\n      }\n    } catch (e_13_1) {\n      e_13 = {\n        error: e_13_1\n      };\n    } finally {\n      try {\n        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n      } finally {\n        if (e_13) throw e_13.error;\n      }\n    }\n    return false;\n  };\n  /**\n   * Returns the active hardfork switches for the current chain\n   * @param blockNumber up to block if provided, otherwise for the whole chain\n   * @param opts Hardfork options (onlyActive unused)\n   * @return Array with hardfork arrays\n   */\n  Common.prototype.activeHardforks = function (blockNumber, opts) {\n    var e_14, _a;\n    if (opts === void 0) {\n      opts = {};\n    }\n    var activeHardforks = [];\n    var hfs = this.hardforks();\n    try {\n      for (var hfs_2 = __values(hfs), hfs_2_1 = hfs_2.next(); !hfs_2_1.done; hfs_2_1 = hfs_2.next()) {\n        var hf = hfs_2_1.value;\n        if (hf['block'] === null) continue;\n        if (blockNumber !== undefined && blockNumber !== null && blockNumber < hf['block']) break;\n        if (opts.onlySupported && !this._isSupportedHardfork(hf['name'])) continue;\n        activeHardforks.push(hf);\n      }\n    } catch (e_14_1) {\n      e_14 = {\n        error: e_14_1\n      };\n    } finally {\n      try {\n        if (hfs_2_1 && !hfs_2_1.done && (_a = hfs_2.return)) _a.call(hfs_2);\n      } finally {\n        if (e_14) throw e_14.error;\n      }\n    }\n    return activeHardforks;\n  };\n  /**\n   * Returns the latest active hardfork name for chain or block or throws if unavailable\n   * @param blockNumber up to block if provided, otherwise for the whole chain\n   * @param opts Hardfork options (onlyActive unused)\n   * @return Hardfork name\n   */\n  Common.prototype.activeHardfork = function (blockNumber, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    var activeHardforks = this.activeHardforks(blockNumber, opts);\n    if (activeHardforks.length > 0) {\n      return activeHardforks[activeHardforks.length - 1]['name'];\n    } else {\n      throw new Error(\"No (supported) active hardfork found\");\n    }\n  };\n  /**\n   * Returns the hardfork change block for hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Block number or null if unscheduled\n   * @deprecated Please use {@link Common.hardforkBlockBN} for large number support\n   */\n  Common.prototype.hardforkBlock = function (hardfork) {\n    var block = this.hardforkBlockBN(hardfork);\n    return block ? (0, ethereumjs_util_1.toType)(block, ethereumjs_util_1.TypeOutput.Number) : null;\n  };\n  /**\n   * Returns the hardfork change block for hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Block number or null if unscheduled\n   */\n  Common.prototype.hardforkBlockBN = function (hardfork) {\n    hardfork = this._chooseHardfork(hardfork, false);\n    var block = this._getHardfork(hardfork)['block'];\n    if (block === undefined || block === null) {\n      return null;\n    }\n    return new ethereumjs_util_1.BN(block);\n  };\n  /**\n   * Returns the hardfork change total difficulty (Merge HF) for hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Total difficulty or null if no set\n   */\n  Common.prototype.hardforkTD = function (hardfork) {\n    hardfork = this._chooseHardfork(hardfork, false);\n    var td = this._getHardfork(hardfork)['td'];\n    if (td === undefined || td === null) {\n      return null;\n    }\n    return new ethereumjs_util_1.BN(td);\n  };\n  /**\n   * True if block number provided is the hardfork (given or set) change block\n   * @param blockNumber Number of the block to check\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns True if blockNumber is HF block\n   */\n  Common.prototype.isHardforkBlock = function (blockNumber, hardfork) {\n    blockNumber = (0, ethereumjs_util_1.toType)(blockNumber, ethereumjs_util_1.TypeOutput.BN);\n    hardfork = this._chooseHardfork(hardfork, false);\n    var block = this.hardforkBlockBN(hardfork);\n    return block ? block.eq(blockNumber) : false;\n  };\n  /**\n   * Returns the change block for the next hardfork after the hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Block number or null if not available\n   * @deprecated Please use {@link Common.nextHardforkBlockBN} for large number support\n   */\n  Common.prototype.nextHardforkBlock = function (hardfork) {\n    var block = this.nextHardforkBlockBN(hardfork);\n    return block === null ? null : (0, ethereumjs_util_1.toType)(block, ethereumjs_util_1.TypeOutput.Number);\n  };\n  /**\n   * Returns the change block for the next hardfork after the hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Block number or null if not available\n   */\n  Common.prototype.nextHardforkBlockBN = function (hardfork) {\n    hardfork = this._chooseHardfork(hardfork, false);\n    var hfBlock = this.hardforkBlockBN(hardfork);\n    if (hfBlock === null) {\n      return null;\n    }\n    // Next fork block number or null if none available\n    // Logic: if accumulator is still null and on the first occurrence of\n    // a block greater than the current hfBlock set the accumulator,\n    // pass on the accumulator as the final result from this time on\n    var nextHfBlock = this.hardforks().reduce(function (acc, hf) {\n      var block = new ethereumjs_util_1.BN(hf.block);\n      return block.gt(hfBlock) && acc === null ? block : acc;\n    }, null);\n    return nextHfBlock;\n  };\n  /**\n   * True if block number provided is the hardfork change block following the hardfork given or set\n   * @param blockNumber Number of the block to check\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns True if blockNumber is HF block\n   */\n  Common.prototype.isNextHardforkBlock = function (blockNumber, hardfork) {\n    blockNumber = (0, ethereumjs_util_1.toType)(blockNumber, ethereumjs_util_1.TypeOutput.BN);\n    hardfork = this._chooseHardfork(hardfork, false);\n    var nextHardforkBlock = this.nextHardforkBlockBN(hardfork);\n    return nextHardforkBlock === null ? false : nextHardforkBlock.eq(blockNumber);\n  };\n  /**\n   * Internal helper function to calculate a fork hash\n   * @param hardfork Hardfork name\n   * @returns Fork hash as hex string\n   */\n  Common.prototype._calcForkHash = function (hardfork) {\n    var e_15, _a;\n    var genesis = Buffer.from(this.genesis().hash.substr(2), 'hex');\n    var hfBuffer = Buffer.alloc(0);\n    var prevBlock = 0;\n    try {\n      for (var _b = __values(this.hardforks()), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var hf = _c.value;\n        var block = hf.block;\n        // Skip for chainstart (0), not applied HFs (null) and\n        // when already applied on same block number HFs\n        if (block !== 0 && block !== null && block !== prevBlock) {\n          var hfBlockBuffer = Buffer.from(block.toString(16).padStart(16, '0'), 'hex');\n          hfBuffer = Buffer.concat([hfBuffer, hfBlockBuffer]);\n        }\n        if (hf.name === hardfork) break;\n        if (block !== null) {\n          prevBlock = block;\n        }\n      }\n    } catch (e_15_1) {\n      e_15 = {\n        error: e_15_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_15) throw e_15.error;\n      }\n    }\n    var inputBuffer = Buffer.concat([genesis, hfBuffer]);\n    // CRC32 delivers result as signed (negative) 32-bit integer,\n    // convert to hex string\n    var forkhash = (0, ethereumjs_util_1.intToBuffer)((0, crc_32_1.buf)(inputBuffer) >>> 0).toString('hex');\n    return \"0x\" + forkhash;\n  };\n  /**\n   * Returns an eth/64 compliant fork hash (EIP-2124)\n   * @param hardfork Hardfork name, optional if HF set\n   */\n  Common.prototype.forkHash = function (hardfork) {\n    hardfork = this._chooseHardfork(hardfork, false);\n    var data = this._getHardfork(hardfork);\n    if (data['block'] === null) {\n      var msg = 'No fork hash calculation possible for non-applied or future hardfork';\n      throw new Error(msg);\n    }\n    if (data['forkHash'] !== undefined) {\n      return data['forkHash'];\n    }\n    return this._calcForkHash(hardfork);\n  };\n  /**\n   *\n   * @param forkHash Fork hash as a hex string\n   * @returns Array with hardfork data (name, block, forkHash)\n   */\n  Common.prototype.hardforkForForkHash = function (forkHash) {\n    var resArray = this.hardforks().filter(function (hf) {\n      return hf.forkHash === forkHash;\n    });\n    return resArray.length >= 1 ? resArray[resArray.length - 1] : null;\n  };\n  /**\n   * Returns the Genesis parameters of the current chain\n   * @returns Genesis dictionary\n   */\n  Common.prototype.genesis = function () {\n    return this._chainParams['genesis'];\n  };\n  /**\n   * Returns the Genesis state of the current chain,\n   * both account addresses and values are provided\n   * as hex-prefixed strings\n   *\n   * @returns {Array} Genesis state\n   */\n  Common.prototype.genesisState = function () {\n    var e_16, _a;\n    // Use require statements here in favor of import statements\n    // to load json files on demand\n    // (high memory usage by large mainnet.json genesis state file)\n    switch (this.chainName()) {\n      case 'mainnet':\n        return require('./genesisStates/mainnet.json');\n      case 'ropsten':\n        return require('./genesisStates/ropsten.json');\n      case 'rinkeby':\n        return require('./genesisStates/rinkeby.json');\n      case 'kovan':\n        return require('./genesisStates/kovan.json');\n      case 'goerli':\n        return require('./genesisStates/goerli.json');\n    }\n    // Custom chains with genesis state provided\n    if (this._customChains && this._customChains.length > 0 && Array.isArray(this._customChains[0])) {\n      try {\n        for (var _b = __values(this._customChains), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var chainArrayWithGenesis = _c.value;\n          if (chainArrayWithGenesis[0].name === this.chainName()) {\n            return chainArrayWithGenesis[1];\n          }\n        }\n      } catch (e_16_1) {\n        e_16 = {\n          error: e_16_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_16) throw e_16.error;\n        }\n      }\n    }\n    return {};\n  };\n  /**\n   * Returns the hardforks for current chain\n   * @returns {Array} Array with arrays of hardforks\n   */\n  Common.prototype.hardforks = function () {\n    return this._chainParams['hardforks'];\n  };\n  /**\n   * Returns bootstrap nodes for the current chain\n   * @returns {Dictionary} Dict with bootstrap nodes\n   */\n  Common.prototype.bootstrapNodes = function () {\n    return this._chainParams['bootstrapNodes'];\n  };\n  /**\n   * Returns DNS networks for the current chain\n   * @returns {String[]} Array of DNS ENR urls\n   */\n  Common.prototype.dnsNetworks = function () {\n    return this._chainParams['dnsNetworks'];\n  };\n  /**\n   * Returns the hardfork set\n   * @returns Hardfork name\n   */\n  Common.prototype.hardfork = function () {\n    return this._hardfork;\n  };\n  /**\n   * Returns the Id of current chain\n   * @returns chain Id\n   * @deprecated Please use {@link Common.chainIdBN} for large number support\n   */\n  Common.prototype.chainId = function () {\n    return (0, ethereumjs_util_1.toType)(this.chainIdBN(), ethereumjs_util_1.TypeOutput.Number);\n  };\n  /**\n   * Returns the Id of current chain\n   * @returns chain Id\n   */\n  Common.prototype.chainIdBN = function () {\n    return new ethereumjs_util_1.BN(this._chainParams['chainId']);\n  };\n  /**\n   * Returns the name of current chain\n   * @returns chain name (lower case)\n   */\n  Common.prototype.chainName = function () {\n    return this._chainParams['name'];\n  };\n  /**\n   * Returns the Id of current network\n   * @returns network Id\n   * @deprecated Please use {@link Common.networkIdBN} for large number support\n   */\n  Common.prototype.networkId = function () {\n    return (0, ethereumjs_util_1.toType)(this.networkIdBN(), ethereumjs_util_1.TypeOutput.Number);\n  };\n  /**\n   * Returns the Id of current network\n   * @returns network Id\n   */\n  Common.prototype.networkIdBN = function () {\n    return new ethereumjs_util_1.BN(this._chainParams['networkId']);\n  };\n  /**\n   * Returns the active EIPs\n   * @returns List of EIPs\n   */\n  Common.prototype.eips = function () {\n    return this._eips;\n  };\n  /**\n   * Returns the consensus type of the network\n   * Possible values: \"pow\"|\"poa\"|\"pos\"\n   *\n   * Note: This value can update along a hardfork.\n   */\n  Common.prototype.consensusType = function () {\n    var e_17, _a;\n    var hardfork = this.hardfork();\n    var value;\n    try {\n      for (var HARDFORK_CHANGES_4 = __values(hardforks_1.hardforks), HARDFORK_CHANGES_4_1 = HARDFORK_CHANGES_4.next(); !HARDFORK_CHANGES_4_1.done; HARDFORK_CHANGES_4_1 = HARDFORK_CHANGES_4.next()) {\n        var hfChanges = HARDFORK_CHANGES_4_1.value;\n        if ('consensus' in hfChanges[1]) {\n          value = hfChanges[1]['consensus']['type'];\n        }\n        if (hfChanges[0] === hardfork) break;\n      }\n    } catch (e_17_1) {\n      e_17 = {\n        error: e_17_1\n      };\n    } finally {\n      try {\n        if (HARDFORK_CHANGES_4_1 && !HARDFORK_CHANGES_4_1.done && (_a = HARDFORK_CHANGES_4.return)) _a.call(HARDFORK_CHANGES_4);\n      } finally {\n        if (e_17) throw e_17.error;\n      }\n    }\n    if (value) {\n      return value;\n    }\n    return this._chainParams['consensus']['type'];\n  };\n  /**\n   * Returns the concrete consensus implementation\n   * algorithm or protocol for the network\n   * e.g. \"ethash\" for \"pow\" consensus type,\n   * \"clique\" for \"poa\" consensus type or\n   * \"casper\" for \"pos\" consensus type.\n   *\n   * Note: This value can update along a hardfork.\n   */\n  Common.prototype.consensusAlgorithm = function () {\n    var e_18, _a;\n    var hardfork = this.hardfork();\n    var value;\n    try {\n      for (var HARDFORK_CHANGES_5 = __values(hardforks_1.hardforks), HARDFORK_CHANGES_5_1 = HARDFORK_CHANGES_5.next(); !HARDFORK_CHANGES_5_1.done; HARDFORK_CHANGES_5_1 = HARDFORK_CHANGES_5.next()) {\n        var hfChanges = HARDFORK_CHANGES_5_1.value;\n        if ('consensus' in hfChanges[1]) {\n          value = hfChanges[1]['consensus']['algorithm'];\n        }\n        if (hfChanges[0] === hardfork) break;\n      }\n    } catch (e_18_1) {\n      e_18 = {\n        error: e_18_1\n      };\n    } finally {\n      try {\n        if (HARDFORK_CHANGES_5_1 && !HARDFORK_CHANGES_5_1.done && (_a = HARDFORK_CHANGES_5.return)) _a.call(HARDFORK_CHANGES_5);\n      } finally {\n        if (e_18) throw e_18.error;\n      }\n    }\n    if (value) {\n      return value;\n    }\n    return this._chainParams['consensus']['algorithm'];\n  };\n  /**\n   * Returns a dictionary with consensus configuration\n   * parameters based on the consensus algorithm\n   *\n   * Expected returns (parameters must be present in\n   * the respective chain json files):\n   *\n   * ethash: -\n   * clique: period, epoch\n   * aura: -\n   * casper: -\n   *\n   * Note: This value can update along a hardfork.\n   */\n  Common.prototype.consensusConfig = function () {\n    var e_19, _a;\n    var hardfork = this.hardfork();\n    var value;\n    try {\n      for (var HARDFORK_CHANGES_6 = __values(hardforks_1.hardforks), HARDFORK_CHANGES_6_1 = HARDFORK_CHANGES_6.next(); !HARDFORK_CHANGES_6_1.done; HARDFORK_CHANGES_6_1 = HARDFORK_CHANGES_6.next()) {\n        var hfChanges = HARDFORK_CHANGES_6_1.value;\n        if ('consensus' in hfChanges[1]) {\n          // The config parameter is named after the respective consensus algorithm\n          value = hfChanges[1]['consensus'][hfChanges[1]['consensus']['algorithm']];\n        }\n        if (hfChanges[0] === hardfork) break;\n      }\n    } catch (e_19_1) {\n      e_19 = {\n        error: e_19_1\n      };\n    } finally {\n      try {\n        if (HARDFORK_CHANGES_6_1 && !HARDFORK_CHANGES_6_1.done && (_a = HARDFORK_CHANGES_6.return)) _a.call(HARDFORK_CHANGES_6);\n      } finally {\n        if (e_19) throw e_19.error;\n      }\n    }\n    if (value) {\n      return value;\n    }\n    var consensusAlgorithm = this.consensusAlgorithm();\n    return this._chainParams['consensus'][consensusAlgorithm];\n  };\n  /**\n   * Returns a deep copy of this {@link Common} instance.\n   */\n  Common.prototype.copy = function () {\n    return Object.assign(Object.create(Object.getPrototypeOf(this)), this);\n  };\n  return Common;\n}(events_1.EventEmitter);\nexports.default = Common;","map":{"version":3,"names":["events_1","require","crc_32_1","ethereumjs_util_1","chains_1","hardforks_1","eips_1","CustomChain","exports","Chain","Hardfork","ConsensusType","ConsensusAlgorithm","Common","_super","__extends","opts","_this","call","_supportedHardforks","_eips","_customChains","_b","customChains","_chainParams","setChain","chain","DEFAULT_HARDFORK","_c","defaultHardfork","Istanbul","_d","__values","hardforks","_e","next","done","hf","value","forkHash","_calcForkHash","name","_hardfork","supportedHardforks","hardfork","setHardfork","eips","setEIPs","custom","chainParamsOrName","baseChain","_a","standardChainParams","__assign","_getChainParams","PolygonMainnet","chainId","networkId","PolygonMumbai","ArbitrumRinkebyTestnet","xDaiChain","Error","forCustomChain","customChainParams","isSupportedChainId","initializedChains","_getInitializedChains","Boolean","toString","BN","isBN","name_1","prototype","plainCustomChains","length","Array","isArray","map","e","required","required_1","required_1_1","param","undefined","_isSupportedHardfork","existing","HARDFORK_CHANGES_1","HARDFORK_CHANGES_1_1","hfChanges","emit","getHardforkByBlockNumber","blockNumber","td","toType","TypeOutput","Chainstart","minTdHF","maxTdHF","previousHF","block","gten","gte","msgAdd","hardforkGteHardfork","msg","setHardforkByBlockNumber","_chooseHardfork","onlySupported","_getHardfork","hfs","hfs_1","hfs_1_1","chainName","supportedHf","eip","EIPs","minHF","this_1","gteHardfork","requiredEIPs","forEach","elem","includes","isActivatedEIP","eips_2","eips_2_1","topic","paramByEIP","paramByHardfork","HARDFORK_CHANGES_2","HARDFORK_CHANGES_2_1","hfEIPs","hfEIPs_1","e_10","hfEIPs_1_1","valueEIP","v","eipParams","paramByBlock","activeHfs","activeHardforks","HARDFORK_CHANGES_3","HARDFORK_CHANGES_3_1","hardforkIsActiveOnBlock","hfBlock","hardforkBlockBN","activeOnBlock","hardfork1","hardfork2","onlyActive","posHf1","posHf2","index","hardforks_2","hardforks_2_1","hardforkIsActiveOnChain","hfs_2","hfs_2_1","push","activeHardfork","hardforkBlock","Number","hardforkTD","isHardforkBlock","eq","nextHardforkBlock","nextHardforkBlockBN","nextHfBlock","reduce","acc","gt","isNextHardforkBlock","genesis","Buffer","from","hash","substr","hfBuffer","alloc","prevBlock","hfBlockBuffer","padStart","concat","inputBuffer","forkhash","intToBuffer","buf","data","hardforkForForkHash","resArray","filter","genesisState","chainArrayWithGenesis","bootstrapNodes","dnsNetworks","chainIdBN","networkIdBN","consensusType","HARDFORK_CHANGES_4","HARDFORK_CHANGES_4_1","consensusAlgorithm","HARDFORK_CHANGES_5","HARDFORK_CHANGES_5_1","consensusConfig","HARDFORK_CHANGES_6","HARDFORK_CHANGES_6_1","copy","Object","assign","create","getPrototypeOf","EventEmitter"],"sources":["../src/index.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script"}