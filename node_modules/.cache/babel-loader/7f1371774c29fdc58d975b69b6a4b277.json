{"ast":null,"code":"'use strict';\n\nconst dagNodeUtil = require('./util');\nconst cloneLinks = dagNodeUtil.cloneLinks;\nconst cloneData = dagNodeUtil.cloneData;\nconst toDAGLink = dagNodeUtil.toDAGLink;\nconst DAGLink = require('../dag-link');\nconst DAGNode = require('./index');\nconst create = require('./create');\nconst asDAGLink = async link => {\n  if (DAGLink.isDAGLink(link)) {\n    // It's a DAGLink instance\n    // no need to do anything\n    return link;\n  }\n  if (DAGNode.isDAGNode(link)) {\n    // It's a DAGNode instance\n    // convert to link\n    return toDAGLink(link, {});\n  }\n\n  // It's a Object with name, multihash/hash/cid and size\n  return new DAGLink(link.Name || link.name, link.Tsize || link.size, link.Hash || link.multihash || link.hash || link.cid);\n};\nconst addLink = async (node, link) => {\n  const links = cloneLinks(node);\n  const data = cloneData(node);\n  const dagLink = await asDAGLink(link);\n  links.push(dagLink);\n  return create(data, links);\n};\nmodule.exports = addLink;","map":{"version":3,"names":["dagNodeUtil","require","cloneLinks","cloneData","toDAGLink","DAGLink","DAGNode","create","asDAGLink","link","isDAGLink","isDAGNode","Name","name","Tsize","size","Hash","multihash","hash","cid","addLink","node","links","data","dagLink","push","module","exports"],"sources":["C:/blockchain/Victus-health-assistant-main/Victus-health-assistant-main/node_modules/ipld-dag-pb/src/dag-node/addLink.js"],"sourcesContent":["'use strict'\n\nconst dagNodeUtil = require('./util')\nconst cloneLinks = dagNodeUtil.cloneLinks\nconst cloneData = dagNodeUtil.cloneData\nconst toDAGLink = dagNodeUtil.toDAGLink\nconst DAGLink = require('../dag-link')\nconst DAGNode = require('./index')\nconst create = require('./create')\n\nconst asDAGLink = async (link) => {\n  if (DAGLink.isDAGLink(link)) {\n    // It's a DAGLink instance\n    // no need to do anything\n    return link\n  }\n\n  if (DAGNode.isDAGNode(link)) {\n    // It's a DAGNode instance\n    // convert to link\n    return toDAGLink(link, {})\n  }\n\n  // It's a Object with name, multihash/hash/cid and size\n  return new DAGLink(link.Name || link.name, link.Tsize || link.size, link.Hash || link.multihash || link.hash || link.cid)\n}\n\nconst addLink = async (node, link) => {\n  const links = cloneLinks(node)\n  const data = cloneData(node)\n\n  const dagLink = await asDAGLink(link)\n  links.push(dagLink)\n  return create(data, links)\n}\n\nmodule.exports = addLink\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,WAAW,GAAGC,OAAO,CAAC,QAAQ,CAAC;AACrC,MAAMC,UAAU,GAAGF,WAAW,CAACE,UAAU;AACzC,MAAMC,SAAS,GAAGH,WAAW,CAACG,SAAS;AACvC,MAAMC,SAAS,GAAGJ,WAAW,CAACI,SAAS;AACvC,MAAMC,OAAO,GAAGJ,OAAO,CAAC,aAAa,CAAC;AACtC,MAAMK,OAAO,GAAGL,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMM,MAAM,GAAGN,OAAO,CAAC,UAAU,CAAC;AAElC,MAAMO,SAAS,GAAG,MAAOC,IAAI,IAAK;EAChC,IAAIJ,OAAO,CAACK,SAAS,CAACD,IAAI,CAAC,EAAE;IAC3B;IACA;IACA,OAAOA,IAAI;EACb;EAEA,IAAIH,OAAO,CAACK,SAAS,CAACF,IAAI,CAAC,EAAE;IAC3B;IACA;IACA,OAAOL,SAAS,CAACK,IAAI,EAAE,CAAC,CAAC,CAAC;EAC5B;;EAEA;EACA,OAAO,IAAIJ,OAAO,CAACI,IAAI,CAACG,IAAI,IAAIH,IAAI,CAACI,IAAI,EAAEJ,IAAI,CAACK,KAAK,IAAIL,IAAI,CAACM,IAAI,EAAEN,IAAI,CAACO,IAAI,IAAIP,IAAI,CAACQ,SAAS,IAAIR,IAAI,CAACS,IAAI,IAAIT,IAAI,CAACU,GAAG,CAAC;AAC3H,CAAC;AAED,MAAMC,OAAO,GAAG,MAAAA,CAAOC,IAAI,EAAEZ,IAAI,KAAK;EACpC,MAAMa,KAAK,GAAGpB,UAAU,CAACmB,IAAI,CAAC;EAC9B,MAAME,IAAI,GAAGpB,SAAS,CAACkB,IAAI,CAAC;EAE5B,MAAMG,OAAO,GAAG,MAAMhB,SAAS,CAACC,IAAI,CAAC;EACrCa,KAAK,CAACG,IAAI,CAACD,OAAO,CAAC;EACnB,OAAOjB,MAAM,CAACgB,IAAI,EAAED,KAAK,CAAC;AAC5B,CAAC;AAEDI,MAAM,CAACC,OAAO,GAAGP,OAAO"},"metadata":{},"sourceType":"script"}