{"ast":null,"code":"'use strict';\n\nconst promisify = require('promisify-es6');\nconst cleanCID = require('../utils/clean-cid');\nconst TarStreamToObjects = require('../utils/tar-stream-to-objects');\nconst concat = require('concat-stream');\nconst through = require('through2');\nconst v = require('is-ipfs');\nmodule.exports = send => {\n  return promisify((path, opts, callback) => {\n    if (typeof opts === 'function' && !callback) {\n      callback = opts;\n      opts = {};\n    }\n\n    // opts is the real callback --\n    // 'callback' is being injected by promisify\n    if (typeof opts === 'function' && typeof callback === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    try {\n      path = cleanCID(path);\n    } catch (err) {\n      if (!v.ipfsPath(path)) {\n        return callback(err);\n      }\n    }\n    const request = {\n      path: 'get',\n      args: path,\n      qs: opts\n    };\n\n    // Convert the response stream to TarStream objects\n    send.andTransform(request, TarStreamToObjects, (err, stream) => {\n      if (err) {\n        return callback(err);\n      }\n      const files = [];\n      stream.pipe(through.obj((file, enc, next) => {\n        if (file.content) {\n          file.content.pipe(concat(content => {\n            files.push({\n              path: file.path,\n              content: content\n            });\n          }));\n        } else {\n          files.push(file);\n        }\n        next();\n      }, () => callback(null, files)));\n    });\n  });\n};","map":{"version":3,"names":["promisify","require","cleanCID","TarStreamToObjects","concat","through","v","module","exports","send","path","opts","callback","err","ipfsPath","request","args","qs","andTransform","stream","files","pipe","obj","file","enc","next","content","push"],"sources":["C:/blockchain/Victus-health-assistant-main/Victus-health-assistant-main/node_modules/ipfs-http-client/src/files-regular/get.js"],"sourcesContent":["'use strict'\n\nconst promisify = require('promisify-es6')\nconst cleanCID = require('../utils/clean-cid')\nconst TarStreamToObjects = require('../utils/tar-stream-to-objects')\nconst concat = require('concat-stream')\nconst through = require('through2')\nconst v = require('is-ipfs')\n\nmodule.exports = (send) => {\n  return promisify((path, opts, callback) => {\n    if (typeof opts === 'function' && !callback) {\n      callback = opts\n      opts = {}\n    }\n\n    // opts is the real callback --\n    // 'callback' is being injected by promisify\n    if (typeof opts === 'function' && typeof callback === 'function') {\n      callback = opts\n      opts = {}\n    }\n\n    try {\n      path = cleanCID(path)\n    } catch (err) {\n      if (!v.ipfsPath(path)) {\n        return callback(err)\n      }\n    }\n\n    const request = { path: 'get', args: path, qs: opts }\n\n    // Convert the response stream to TarStream objects\n    send.andTransform(request, TarStreamToObjects, (err, stream) => {\n      if (err) { return callback(err) }\n\n      const files = []\n\n      stream.pipe(through.obj((file, enc, next) => {\n        if (file.content) {\n          file.content.pipe(concat((content) => {\n            files.push({ path: file.path, content: content })\n          }))\n        } else {\n          files.push(file)\n        }\n        next()\n      }, () => callback(null, files)))\n    })\n  })\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,SAAS,GAAGC,OAAO,CAAC,eAAe,CAAC;AAC1C,MAAMC,QAAQ,GAAGD,OAAO,CAAC,oBAAoB,CAAC;AAC9C,MAAME,kBAAkB,GAAGF,OAAO,CAAC,gCAAgC,CAAC;AACpE,MAAMG,MAAM,GAAGH,OAAO,CAAC,eAAe,CAAC;AACvC,MAAMI,OAAO,GAAGJ,OAAO,CAAC,UAAU,CAAC;AACnC,MAAMK,CAAC,GAAGL,OAAO,CAAC,SAAS,CAAC;AAE5BM,MAAM,CAACC,OAAO,GAAIC,IAAI,IAAK;EACzB,OAAOT,SAAS,CAAC,CAACU,IAAI,EAAEC,IAAI,EAAEC,QAAQ,KAAK;IACzC,IAAI,OAAOD,IAAI,KAAK,UAAU,IAAI,CAACC,QAAQ,EAAE;MAC3CA,QAAQ,GAAGD,IAAI;MACfA,IAAI,GAAG,CAAC,CAAC;IACX;;IAEA;IACA;IACA,IAAI,OAAOA,IAAI,KAAK,UAAU,IAAI,OAAOC,QAAQ,KAAK,UAAU,EAAE;MAChEA,QAAQ,GAAGD,IAAI;MACfA,IAAI,GAAG,CAAC,CAAC;IACX;IAEA,IAAI;MACFD,IAAI,GAAGR,QAAQ,CAACQ,IAAI,CAAC;IACvB,CAAC,CAAC,OAAOG,GAAG,EAAE;MACZ,IAAI,CAACP,CAAC,CAACQ,QAAQ,CAACJ,IAAI,CAAC,EAAE;QACrB,OAAOE,QAAQ,CAACC,GAAG,CAAC;MACtB;IACF;IAEA,MAAME,OAAO,GAAG;MAAEL,IAAI,EAAE,KAAK;MAAEM,IAAI,EAAEN,IAAI;MAAEO,EAAE,EAAEN;IAAK,CAAC;;IAErD;IACAF,IAAI,CAACS,YAAY,CAACH,OAAO,EAAEZ,kBAAkB,EAAE,CAACU,GAAG,EAAEM,MAAM,KAAK;MAC9D,IAAIN,GAAG,EAAE;QAAE,OAAOD,QAAQ,CAACC,GAAG,CAAC;MAAC;MAEhC,MAAMO,KAAK,GAAG,EAAE;MAEhBD,MAAM,CAACE,IAAI,CAAChB,OAAO,CAACiB,GAAG,CAAC,CAACC,IAAI,EAAEC,GAAG,EAAEC,IAAI,KAAK;QAC3C,IAAIF,IAAI,CAACG,OAAO,EAAE;UAChBH,IAAI,CAACG,OAAO,CAACL,IAAI,CAACjB,MAAM,CAAEsB,OAAO,IAAK;YACpCN,KAAK,CAACO,IAAI,CAAC;cAAEjB,IAAI,EAAEa,IAAI,CAACb,IAAI;cAAEgB,OAAO,EAAEA;YAAQ,CAAC,CAAC;UACnD,CAAC,CAAC,CAAC;QACL,CAAC,MAAM;UACLN,KAAK,CAACO,IAAI,CAACJ,IAAI,CAAC;QAClB;QACAE,IAAI,CAAC,CAAC;MACR,CAAC,EAAE,MAAMb,QAAQ,CAAC,IAAI,EAAEQ,KAAK,CAAC,CAAC,CAAC;IAClC,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"script"}