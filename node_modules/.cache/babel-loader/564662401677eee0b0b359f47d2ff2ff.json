{"ast":null,"code":"var pull = require('pull-stream/pull');\nvar looper = require('looper');\nfunction destroy(stream) {\n  if (!stream.destroy) console.error('warning, stream-to-pull-stream: \\n' + 'the wrapped node-stream does not implement `destroy`, \\n' + 'this may cause resource leaks.');else stream.destroy();\n}\nfunction write(read, stream, cb) {\n  var ended,\n    closed = false,\n    did;\n  function done() {\n    if (did) return;\n    did = true;\n    cb && cb(ended === true ? null : ended);\n  }\n  function onClose() {\n    if (closed) return;\n    closed = true;\n    cleanup();\n    if (!ended) read(ended = true, done);else done();\n  }\n  function onError(err) {\n    cleanup();\n    if (!ended) read(ended = err, done);\n  }\n  function cleanup() {\n    stream.on('finish', onClose);\n    stream.removeListener('close', onClose);\n    stream.removeListener('error', onError);\n  }\n  stream.on('close', onClose);\n  stream.on('finish', onClose);\n  stream.on('error', onError);\n  process.nextTick(function () {\n    looper(function (next) {\n      read(null, function (end, data) {\n        ended = ended || end;\n        //you can't \"end\" a stdout stream, so this needs to be handled specially.\n        if (end === true) return stream._isStdio ? done() : stream.end();\n        if (ended = ended || end) {\n          destroy(stream);\n          return done(ended);\n        }\n\n        //I noticed a problem streaming to the terminal:\n        //sometimes the end got cut off, creating invalid output.\n        //it seems that stdout always emits \"drain\" when it ends.\n        //so this seems to work, but i have been unable to reproduce this test\n        //automatically, so you need to run ./test/stdout.js a few times and the end is valid json.\n        if (stream._isStdio) stream.write(data, function () {\n          next();\n        });else {\n          var pause = stream.write(data);\n          if (pause === false) stream.once('drain', next);else next();\n        }\n      });\n    });\n  });\n}\nfunction first(emitter, events, handler) {\n  function listener(val) {\n    events.forEach(function (e) {\n      emitter.removeListener(e, listener);\n    });\n    handler(val);\n  }\n  events.forEach(function (e) {\n    emitter.on(e, listener);\n  });\n  return emitter;\n}\nfunction read2(stream) {\n  var ended = false,\n    waiting = false;\n  var _cb;\n  function read() {\n    var data = stream.read();\n    if (data !== null && _cb) {\n      var cb = _cb;\n      _cb = null;\n      cb(null, data);\n    }\n  }\n  stream.on('readable', function () {\n    waiting = true;\n    _cb && read();\n  }).on('end', function () {\n    ended = true;\n    _cb && _cb(ended);\n  }).on('error', function (err) {\n    ended = err;\n    _cb && _cb(ended);\n  });\n  return function (end, cb) {\n    _cb = cb;\n    if (ended) cb(ended);else if (waiting) read();\n  };\n}\nfunction read1(stream) {\n  var buffer = [],\n    cbs = [],\n    ended,\n    paused = false;\n  var draining;\n  function drain() {\n    while ((buffer.length || ended) && cbs.length) cbs.shift()(buffer.length ? null : ended, buffer.shift());\n    if (!buffer.length && paused) {\n      paused = false;\n      stream.resume();\n    }\n  }\n  stream.on('data', function (data) {\n    buffer.push(data);\n    drain();\n    if (buffer.length && stream.pause) {\n      paused = true;\n      stream.pause();\n    }\n  });\n  stream.on('end', function () {\n    ended = true;\n    drain();\n  });\n  stream.on('close', function () {\n    ended = true;\n    drain();\n  });\n  stream.on('error', function (err) {\n    ended = err;\n    drain();\n  });\n  return function (abort, cb) {\n    if (!cb) throw new Error('*must* provide cb');\n    if (abort) {\n      function onAbort() {\n        while (cbs.length) cbs.shift()(abort);\n        cb(abort);\n      }\n      //if the stream happens to have already ended, then we don't need to abort.\n      if (ended) return onAbort();\n      stream.once('close', onAbort);\n      destroy(stream);\n    } else {\n      cbs.push(cb);\n      drain();\n    }\n  };\n}\nvar read = read1;\nvar sink = function (stream, cb) {\n  return function (read) {\n    return write(read, stream, cb);\n  };\n};\nvar source = function (stream) {\n  return read1(stream);\n};\nexports = module.exports = function (stream, cb) {\n  return stream.writable && stream.write ? stream.readable ? function (_read) {\n    write(_read, stream, cb);\n    return read1(stream);\n  } : sink(stream, cb) : source(stream);\n};\nexports.sink = sink;\nexports.source = source;\nexports.read = read;\nexports.read1 = read1;\nexports.read2 = read2;\nexports.duplex = function (stream, cb) {\n  return {\n    source: source(stream),\n    sink: sink(stream, cb)\n  };\n};\nexports.transform = function (stream) {\n  return function (read) {\n    var _source = source(stream);\n    sink(stream)(read);\n    return _source;\n  };\n};","map":{"version":3,"names":["pull","require","looper","destroy","stream","console","error","write","read","cb","ended","closed","did","done","onClose","cleanup","onError","err","on","removeListener","process","nextTick","next","end","data","_isStdio","pause","once","first","emitter","events","handler","listener","val","forEach","e","read2","waiting","_cb","read1","buffer","cbs","paused","draining","drain","length","shift","resume","push","abort","Error","onAbort","sink","source","exports","module","writable","readable","_read","duplex","transform","_source"],"sources":["C:/blockchain/Victus-health-assistant-main/Victus-health-assistant-main/node_modules/stream-to-pull-stream/index.js"],"sourcesContent":["var pull = require('pull-stream/pull')\nvar looper = require('looper')\n\nfunction destroy (stream) {\n  if(!stream.destroy)\n    console.error(\n      'warning, stream-to-pull-stream: \\n'\n    + 'the wrapped node-stream does not implement `destroy`, \\n'\n    + 'this may cause resource leaks.'\n    )\n  else stream.destroy()\n\n}\n\nfunction write(read, stream, cb) {\n  var ended, closed = false, did\n  function done () {\n    if(did) return\n    did = true\n    cb && cb(ended === true ? null : ended)\n  }\n\n  function onClose () {\n    if(closed) return\n    closed = true\n    cleanup()\n    if(!ended) read(ended = true, done)\n    else       done()\n  }\n  function onError (err) {\n    cleanup()\n    if(!ended) read(ended = err, done)\n  }\n  function cleanup() {\n    stream.on('finish', onClose)\n    stream.removeListener('close', onClose)\n    stream.removeListener('error', onError)\n  }\n  stream.on('close', onClose)\n  stream.on('finish', onClose)\n  stream.on('error', onError)\n  process.nextTick(function () {\n    looper(function (next) {\n      read(null, function (end, data) {\n        ended = ended || end\n        //you can't \"end\" a stdout stream, so this needs to be handled specially.\n        if(end === true)\n          return stream._isStdio ? done() : stream.end()\n\n        if(ended = ended || end) {\n          destroy(stream)\n          return done(ended)\n        }\n\n        //I noticed a problem streaming to the terminal:\n        //sometimes the end got cut off, creating invalid output.\n        //it seems that stdout always emits \"drain\" when it ends.\n        //so this seems to work, but i have been unable to reproduce this test\n        //automatically, so you need to run ./test/stdout.js a few times and the end is valid json.\n        if(stream._isStdio)\n          stream.write(data, function () { next() })\n        else {\n          var pause = stream.write(data)\n          if(pause === false)\n            stream.once('drain', next)\n          else next()\n        }\n      })\n    })\n  })\n}\n\nfunction first (emitter, events, handler) {\n  function listener (val) {\n    events.forEach(function (e) {\n      emitter.removeListener(e, listener)\n    })\n    handler(val)\n  }\n  events.forEach(function (e) {\n    emitter.on(e, listener)\n  })\n  return emitter\n}\n\nfunction read2(stream) {\n  var ended = false, waiting = false\n  var _cb\n\n  function read () {\n    var data = stream.read()\n    if(data !== null && _cb) {\n      var cb = _cb; _cb = null\n      cb(null, data)\n    }\n  }\n\n  stream.on('readable', function () {\n    waiting = true\n    _cb && read()\n  })\n  .on('end', function () {\n    ended = true\n    _cb && _cb(ended)\n  })\n  .on('error', function (err) {\n    ended = err\n    _cb && _cb(ended)\n  })\n\n  return function (end, cb) {\n    _cb = cb\n    if(ended)\n      cb(ended)\n    else if(waiting)\n      read()\n  }\n}\n\nfunction read1(stream) {\n  var buffer = [], cbs = [], ended, paused = false\n\n  var draining\n  function drain() {\n    while((buffer.length || ended) && cbs.length)\n      cbs.shift()(buffer.length ? null : ended, buffer.shift())\n    if(!buffer.length && (paused)) {\n      paused = false\n      stream.resume()\n    }\n  }\n\n  stream.on('data', function (data) {\n    buffer.push(data)\n    drain()\n    if(buffer.length && stream.pause) {\n      paused = true\n      stream.pause()\n    }\n  })\n  stream.on('end', function () {\n    ended = true\n    drain()\n  })\n  stream.on('close', function () {\n    ended = true\n    drain()\n  })\n  stream.on('error', function (err) {\n    ended = err\n    drain()\n  })\n  return function (abort, cb) {\n    if(!cb) throw new Error('*must* provide cb')\n    if(abort) {\n      function onAbort () {\n        while(cbs.length) cbs.shift()(abort)\n        cb(abort)\n      }\n      //if the stream happens to have already ended, then we don't need to abort.\n      if(ended) return onAbort()\n      stream.once('close', onAbort)\n      destroy(stream)\n    }\n    else {\n      cbs.push(cb)\n      drain()\n    }\n  }\n}\n\nvar read = read1\n\nvar sink = function (stream, cb) {\n  return function (read) {\n    return write(read, stream, cb)\n  }\n}\n\nvar source = function (stream) {\n  return read1(stream)\n}\n\nexports = module.exports = function (stream, cb) {\n  return (\n    (stream.writable && stream.write)\n    ? stream.readable\n      ? function(_read) {\n          write(_read, stream, cb);\n          return read1(stream)\n        }\n      : sink(stream, cb)\n    : source(stream)\n  )\n}\n\nexports.sink = sink\nexports.source = source\nexports.read = read\nexports.read1 = read1\nexports.read2 = read2\nexports.duplex = function (stream, cb) {\n  return {\n    source: source(stream),\n    sink: sink(stream, cb)\n  }\n}\nexports.transform = function (stream) {\n  return function (read) {\n    var _source = source(stream)\n    sink(stream)(read); return _source\n  }\n}\n\n\n\n\n\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}