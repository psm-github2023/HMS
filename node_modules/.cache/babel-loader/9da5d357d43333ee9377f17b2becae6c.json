{"ast":null,"code":"'use strict';\n\nconst sort = require('stable');\nconst {\n  serialize\n} = require('../util.js');\nconst dagNodeUtil = require('./util.js');\nconst linkSort = dagNodeUtil.linkSort;\nconst DAGNode = require('./index.js');\nconst DAGLink = require('../dag-link');\nconst create = (data, links = []) => {\n  if (typeof data === 'string') {\n    data = Buffer.from(data);\n  }\n  if (!Buffer.isBuffer(data)) {\n    throw new Error('Passed \\'data\\' is not a buffer or a string!');\n  }\n  links = links.map(link => {\n    return DAGLink.isDAGLink(link) ? link : DAGLink.util.createDagLinkFromB58EncodedHash(link);\n  });\n  links = sort(links, linkSort);\n  const serialized = serialize({\n    Data: data,\n    Links: links\n  });\n  return new DAGNode(data, links, serialized.length);\n};\nmodule.exports = create;","map":{"version":3,"names":["sort","require","serialize","dagNodeUtil","linkSort","DAGNode","DAGLink","create","data","links","Buffer","from","isBuffer","Error","map","link","isDAGLink","util","createDagLinkFromB58EncodedHash","serialized","Data","Links","length","module","exports"],"sources":["C:/blockchain/Victus-health-assistant-main/Victus-health-assistant-main/node_modules/ipld-dag-pb/src/dag-node/create.js"],"sourcesContent":["'use strict'\n\nconst sort = require('stable')\nconst {\n  serialize\n} = require('../util.js')\nconst dagNodeUtil = require('./util.js')\nconst linkSort = dagNodeUtil.linkSort\nconst DAGNode = require('./index.js')\nconst DAGLink = require('../dag-link')\n\nconst create = (data, links = []) => {\n  if (typeof data === 'string') {\n    data = Buffer.from(data)\n  }\n\n  if (!Buffer.isBuffer(data)) {\n    throw new Error('Passed \\'data\\' is not a buffer or a string!')\n  }\n  links = links.map((link) => {\n    return DAGLink.isDAGLink(link) ? link : DAGLink.util.createDagLinkFromB58EncodedHash(link)\n  })\n  links = sort(links, linkSort)\n\n  const serialized = serialize({\n    Data: data,\n    Links: links\n  })\n\n  return new DAGNode(data, links, serialized.length)\n}\n\nmodule.exports = create\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,IAAI,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAC9B,MAAM;EACJC;AACF,CAAC,GAAGD,OAAO,CAAC,YAAY,CAAC;AACzB,MAAME,WAAW,GAAGF,OAAO,CAAC,WAAW,CAAC;AACxC,MAAMG,QAAQ,GAAGD,WAAW,CAACC,QAAQ;AACrC,MAAMC,OAAO,GAAGJ,OAAO,CAAC,YAAY,CAAC;AACrC,MAAMK,OAAO,GAAGL,OAAO,CAAC,aAAa,CAAC;AAEtC,MAAMM,MAAM,GAAGA,CAACC,IAAI,EAAEC,KAAK,GAAG,EAAE,KAAK;EACnC,IAAI,OAAOD,IAAI,KAAK,QAAQ,EAAE;IAC5BA,IAAI,GAAGE,MAAM,CAACC,IAAI,CAACH,IAAI,CAAC;EAC1B;EAEA,IAAI,CAACE,MAAM,CAACE,QAAQ,CAACJ,IAAI,CAAC,EAAE;IAC1B,MAAM,IAAIK,KAAK,CAAC,8CAA8C,CAAC;EACjE;EACAJ,KAAK,GAAGA,KAAK,CAACK,GAAG,CAAEC,IAAI,IAAK;IAC1B,OAAOT,OAAO,CAACU,SAAS,CAACD,IAAI,CAAC,GAAGA,IAAI,GAAGT,OAAO,CAACW,IAAI,CAACC,+BAA+B,CAACH,IAAI,CAAC;EAC5F,CAAC,CAAC;EACFN,KAAK,GAAGT,IAAI,CAACS,KAAK,EAAEL,QAAQ,CAAC;EAE7B,MAAMe,UAAU,GAAGjB,SAAS,CAAC;IAC3BkB,IAAI,EAAEZ,IAAI;IACVa,KAAK,EAAEZ;EACT,CAAC,CAAC;EAEF,OAAO,IAAIJ,OAAO,CAACG,IAAI,EAAEC,KAAK,EAAEU,UAAU,CAACG,MAAM,CAAC;AACpD,CAAC;AAEDC,MAAM,CAACC,OAAO,GAAGjB,MAAM"},"metadata":{},"sourceType":"script"}