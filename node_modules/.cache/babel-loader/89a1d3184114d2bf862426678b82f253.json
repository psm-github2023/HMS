{"ast":null,"code":"'use strict';\n\nconst promisify = require('promisify-es6');\nconst CID = require('cids');\nconst multihash = require('multihashes');\nmodule.exports = send => {\n  return promisify((args, opts, callback) => {\n    // TODO this needs to be adjusted with the new go-ipfs http-api\n    if (args && CID.isCID(args)) {\n      args = multihash.toB58String(args.multihash);\n    }\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    const request = {\n      path: 'block/stat',\n      args: args,\n      qs: opts\n    };\n\n    // Transform the response from { Key, Size } objects to { key, size } objects\n    const transform = (stats, callback) => {\n      callback(null, {\n        key: stats.Key,\n        size: stats.Size\n      });\n    };\n    send.andTransform(request, transform, callback);\n  });\n};","map":{"version":3,"names":["promisify","require","CID","multihash","module","exports","send","args","opts","callback","isCID","toB58String","request","path","qs","transform","stats","key","Key","size","Size","andTransform"],"sources":["C:/blockchain/Victus-health-assistant-main/Victus-health-assistant-main/node_modules/ipfs-http-client/src/block/stat.js"],"sourcesContent":["'use strict'\n\nconst promisify = require('promisify-es6')\nconst CID = require('cids')\nconst multihash = require('multihashes')\n\nmodule.exports = (send) => {\n  return promisify((args, opts, callback) => {\n    // TODO this needs to be adjusted with the new go-ipfs http-api\n    if (args && CID.isCID(args)) {\n      args = multihash.toB58String(args.multihash)\n    }\n\n    if (typeof (opts) === 'function') {\n      callback = opts\n      opts = {}\n    }\n\n    const request = {\n      path: 'block/stat',\n      args: args,\n      qs: opts\n    }\n\n    // Transform the response from { Key, Size } objects to { key, size } objects\n    const transform = (stats, callback) => {\n      callback(null, {\n        key: stats.Key,\n        size: stats.Size\n      })\n    }\n\n    send.andTransform(request, transform, callback)\n  })\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,SAAS,GAAGC,OAAO,CAAC,eAAe,CAAC;AAC1C,MAAMC,GAAG,GAAGD,OAAO,CAAC,MAAM,CAAC;AAC3B,MAAME,SAAS,GAAGF,OAAO,CAAC,aAAa,CAAC;AAExCG,MAAM,CAACC,OAAO,GAAIC,IAAI,IAAK;EACzB,OAAON,SAAS,CAAC,CAACO,IAAI,EAAEC,IAAI,EAAEC,QAAQ,KAAK;IACzC;IACA,IAAIF,IAAI,IAAIL,GAAG,CAACQ,KAAK,CAACH,IAAI,CAAC,EAAE;MAC3BA,IAAI,GAAGJ,SAAS,CAACQ,WAAW,CAACJ,IAAI,CAACJ,SAAS,CAAC;IAC9C;IAEA,IAAI,OAAQK,IAAK,KAAK,UAAU,EAAE;MAChCC,QAAQ,GAAGD,IAAI;MACfA,IAAI,GAAG,CAAC,CAAC;IACX;IAEA,MAAMI,OAAO,GAAG;MACdC,IAAI,EAAE,YAAY;MAClBN,IAAI,EAAEA,IAAI;MACVO,EAAE,EAAEN;IACN,CAAC;;IAED;IACA,MAAMO,SAAS,GAAGA,CAACC,KAAK,EAAEP,QAAQ,KAAK;MACrCA,QAAQ,CAAC,IAAI,EAAE;QACbQ,GAAG,EAAED,KAAK,CAACE,GAAG;QACdC,IAAI,EAAEH,KAAK,CAACI;MACd,CAAC,CAAC;IACJ,CAAC;IAEDd,IAAI,CAACe,YAAY,CAACT,OAAO,EAAEG,SAAS,EAAEN,QAAQ,CAAC;EACjD,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"script"}