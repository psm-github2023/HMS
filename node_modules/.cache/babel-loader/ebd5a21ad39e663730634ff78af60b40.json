{"ast":null,"code":"'use strict';\n\nconst nodeify = require('../nodeify');\nconst webcrypto = require('../webcrypto');\nconst randomBytes = require('../random-bytes');\nexports.utils = require('./rsa-utils');\nexports.generateKey = function (bits, callback) {\n  nodeify(webcrypto.subtle.generateKey({\n    name: 'RSASSA-PKCS1-v1_5',\n    modulusLength: bits,\n    publicExponent: new Uint8Array([0x01, 0x00, 0x01]),\n    hash: {\n      name: 'SHA-256'\n    }\n  }, true, ['sign', 'verify']).then(exportKey).then(keys => ({\n    privateKey: keys[0],\n    publicKey: keys[1]\n  })), callback);\n};\n\n// Takes a jwk key\nexports.unmarshalPrivateKey = function (key, callback) {\n  const privateKey = webcrypto.subtle.importKey('jwk', key, {\n    name: 'RSASSA-PKCS1-v1_5',\n    hash: {\n      name: 'SHA-256'\n    }\n  }, true, ['sign']);\n  nodeify(Promise.all([privateKey, derivePublicFromPrivate(key)]).then(keys => exportKey({\n    privateKey: keys[0],\n    publicKey: keys[1]\n  })).then(keys => ({\n    privateKey: keys[0],\n    publicKey: keys[1]\n  })), callback);\n};\nexports.getRandomValues = randomBytes;\nexports.hashAndSign = function (key, msg, callback) {\n  nodeify(webcrypto.subtle.importKey('jwk', key, {\n    name: 'RSASSA-PKCS1-v1_5',\n    hash: {\n      name: 'SHA-256'\n    }\n  }, false, ['sign']).then(privateKey => {\n    return webcrypto.subtle.sign({\n      name: 'RSASSA-PKCS1-v1_5'\n    }, privateKey, Uint8Array.from(msg));\n  }).then(sig => Buffer.from(sig)), callback);\n};\nexports.hashAndVerify = function (key, sig, msg, callback) {\n  nodeify(webcrypto.subtle.importKey('jwk', key, {\n    name: 'RSASSA-PKCS1-v1_5',\n    hash: {\n      name: 'SHA-256'\n    }\n  }, false, ['verify']).then(publicKey => {\n    return webcrypto.subtle.verify({\n      name: 'RSASSA-PKCS1-v1_5'\n    }, publicKey, sig, msg);\n  }), callback);\n};\nfunction exportKey(pair) {\n  return Promise.all([webcrypto.subtle.exportKey('jwk', pair.privateKey), webcrypto.subtle.exportKey('jwk', pair.publicKey)]);\n}\nfunction derivePublicFromPrivate(jwKey) {\n  return webcrypto.subtle.importKey('jwk', {\n    kty: jwKey.kty,\n    n: jwKey.n,\n    e: jwKey.e\n  }, {\n    name: 'RSASSA-PKCS1-v1_5',\n    hash: {\n      name: 'SHA-256'\n    }\n  }, true, ['verify']);\n}\n\n/*\n\nRSA encryption/decryption for the browser with webcrypto workarround\n\"bloody dark magic. webcrypto's why.\"\n\nExplanation:\n  - Convert JWK to nodeForge\n  - Convert msg buffer to nodeForge buffer: ByteBuffer is a \"binary-string backed buffer\", so let's make our buffer a binary string\n  - Convert resulting nodeForge buffer to buffer: it returns a binary string, turn that into a uint8array(buffer)\n\n*/\n\nconst {\n  jwk2pub,\n  jwk2priv\n} = require('./jwk2pem');\nfunction convertKey(key, pub, msg, handle) {\n  const fkey = pub ? jwk2pub(key) : jwk2priv(key);\n  const fmsg = Buffer.from(msg).toString('binary');\n  const fomsg = handle(fmsg, fkey);\n  return Buffer.from(fomsg, 'binary');\n}\nexports.encrypt = function (key, msg) {\n  return convertKey(key, true, msg, (msg, key) => key.encrypt(msg));\n};\nexports.decrypt = function (key, msg) {\n  return convertKey(key, false, msg, (msg, key) => key.decrypt(msg));\n};","map":{"version":3,"names":["nodeify","require","webcrypto","randomBytes","exports","utils","generateKey","bits","callback","subtle","name","modulusLength","publicExponent","Uint8Array","hash","then","exportKey","keys","privateKey","publicKey","unmarshalPrivateKey","key","importKey","Promise","all","derivePublicFromPrivate","getRandomValues","hashAndSign","msg","sign","from","sig","Buffer","hashAndVerify","verify","pair","jwKey","kty","n","e","jwk2pub","jwk2priv","convertKey","pub","handle","fkey","fmsg","toString","fomsg","encrypt","decrypt"],"sources":["C:/blockchain/Victus-health-assistant-main/Victus-health-assistant-main/node_modules/libp2p-crypto/src/keys/rsa-browser.js"],"sourcesContent":["'use strict'\n\nconst nodeify = require('../nodeify')\nconst webcrypto = require('../webcrypto')\nconst randomBytes = require('../random-bytes')\n\nexports.utils = require('./rsa-utils')\n\nexports.generateKey = function (bits, callback) {\n  nodeify(webcrypto.subtle.generateKey(\n    {\n      name: 'RSASSA-PKCS1-v1_5',\n      modulusLength: bits,\n      publicExponent: new Uint8Array([0x01, 0x00, 0x01]),\n      hash: { name: 'SHA-256' }\n    },\n    true,\n    ['sign', 'verify']\n  )\n    .then(exportKey)\n    .then((keys) => ({\n      privateKey: keys[0],\n      publicKey: keys[1]\n    })), callback)\n}\n\n// Takes a jwk key\nexports.unmarshalPrivateKey = function (key, callback) {\n  const privateKey = webcrypto.subtle.importKey(\n    'jwk',\n    key,\n    {\n      name: 'RSASSA-PKCS1-v1_5',\n      hash: { name: 'SHA-256' }\n    },\n    true,\n    ['sign']\n  )\n\n  nodeify(Promise.all([\n    privateKey,\n    derivePublicFromPrivate(key)\n  ]).then((keys) => exportKey({\n    privateKey: keys[0],\n    publicKey: keys[1]\n  })).then((keys) => ({\n    privateKey: keys[0],\n    publicKey: keys[1]\n  })), callback)\n}\n\nexports.getRandomValues = randomBytes\n\nexports.hashAndSign = function (key, msg, callback) {\n  nodeify(webcrypto.subtle.importKey(\n    'jwk',\n    key,\n    {\n      name: 'RSASSA-PKCS1-v1_5',\n      hash: { name: 'SHA-256' }\n    },\n    false,\n    ['sign']\n  ).then((privateKey) => {\n    return webcrypto.subtle.sign(\n      { name: 'RSASSA-PKCS1-v1_5' },\n      privateKey,\n      Uint8Array.from(msg)\n    )\n  }).then((sig) => Buffer.from(sig)), callback)\n}\n\nexports.hashAndVerify = function (key, sig, msg, callback) {\n  nodeify(webcrypto.subtle.importKey(\n    'jwk',\n    key,\n    {\n      name: 'RSASSA-PKCS1-v1_5',\n      hash: { name: 'SHA-256' }\n    },\n    false,\n    ['verify']\n  ).then((publicKey) => {\n    return webcrypto.subtle.verify(\n      { name: 'RSASSA-PKCS1-v1_5' },\n      publicKey,\n      sig,\n      msg\n    )\n  }), callback)\n}\n\nfunction exportKey (pair) {\n  return Promise.all([\n    webcrypto.subtle.exportKey('jwk', pair.privateKey),\n    webcrypto.subtle.exportKey('jwk', pair.publicKey)\n  ])\n}\n\nfunction derivePublicFromPrivate (jwKey) {\n  return webcrypto.subtle.importKey(\n    'jwk',\n    {\n      kty: jwKey.kty,\n      n: jwKey.n,\n      e: jwKey.e\n    },\n    {\n      name: 'RSASSA-PKCS1-v1_5',\n      hash: { name: 'SHA-256' }\n    },\n    true,\n    ['verify']\n  )\n}\n\n/*\n\nRSA encryption/decryption for the browser with webcrypto workarround\n\"bloody dark magic. webcrypto's why.\"\n\nExplanation:\n  - Convert JWK to nodeForge\n  - Convert msg buffer to nodeForge buffer: ByteBuffer is a \"binary-string backed buffer\", so let's make our buffer a binary string\n  - Convert resulting nodeForge buffer to buffer: it returns a binary string, turn that into a uint8array(buffer)\n\n*/\n\nconst { jwk2pub, jwk2priv } = require('./jwk2pem')\n\nfunction convertKey (key, pub, msg, handle) {\n  const fkey = pub ? jwk2pub(key) : jwk2priv(key)\n  const fmsg = Buffer.from(msg).toString('binary')\n  const fomsg = handle(fmsg, fkey)\n  return Buffer.from(fomsg, 'binary')\n}\n\nexports.encrypt = function (key, msg) {\n  return convertKey(key, true, msg, (msg, key) => key.encrypt(msg))\n}\n\nexports.decrypt = function (key, msg) {\n  return convertKey(key, false, msg, (msg, key) => key.decrypt(msg))\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}