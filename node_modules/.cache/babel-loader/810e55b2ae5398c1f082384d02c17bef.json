{"ast":null,"code":"'use strict';\n\nconst {\n  Buffer\n} = require('buffer');\nconst ieee754 = require('ieee754');\nconst Bignumber = require('bignumber.js').BigNumber;\nconst parser = require('./decoder.asm');\nconst utils = require('./utils');\nconst c = require('./constants');\nconst Simple = require('./simple');\nconst Tagged = require('./tagged');\nconst {\n  URL\n} = require('iso-url');\n\n/**\n * Transform binary cbor data into JavaScript objects.\n */\nclass Decoder {\n  /**\n   * @param {Object} [opts={}]\n   * @param {number} [opts.size=65536] - Size of the allocated heap.\n   */\n  constructor(opts) {\n    opts = opts || {};\n    if (!opts.size || opts.size < 0x10000) {\n      opts.size = 0x10000;\n    } else {\n      // Ensure the size is a power of 2\n      opts.size = utils.nextPowerOf2(opts.size);\n    }\n\n    // Heap use to share the input with the parser\n    this._heap = new ArrayBuffer(opts.size);\n    this._heap8 = new Uint8Array(this._heap);\n    this._buffer = Buffer.from(this._heap);\n    this._reset();\n\n    // Known tags\n    this._knownTags = Object.assign({\n      0: val => new Date(val),\n      1: val => new Date(val * 1000),\n      2: val => utils.arrayBufferToBignumber(val),\n      3: val => c.NEG_ONE.minus(utils.arrayBufferToBignumber(val)),\n      4: v => {\n        // const v = new Uint8Array(val)\n        return c.TEN.pow(v[0]).times(v[1]);\n      },\n      5: v => {\n        // const v = new Uint8Array(val)\n        return c.TWO.pow(v[0]).times(v[1]);\n      },\n      32: val => new URL(val),\n      35: val => new RegExp(val)\n    }, opts.tags);\n\n    // Initialize asm based parser\n    this.parser = parser(global, {\n      // eslint-disable-next-line no-console\n      log: console.log.bind(console),\n      pushInt: this.pushInt.bind(this),\n      pushInt32: this.pushInt32.bind(this),\n      pushInt32Neg: this.pushInt32Neg.bind(this),\n      pushInt64: this.pushInt64.bind(this),\n      pushInt64Neg: this.pushInt64Neg.bind(this),\n      pushFloat: this.pushFloat.bind(this),\n      pushFloatSingle: this.pushFloatSingle.bind(this),\n      pushFloatDouble: this.pushFloatDouble.bind(this),\n      pushTrue: this.pushTrue.bind(this),\n      pushFalse: this.pushFalse.bind(this),\n      pushUndefined: this.pushUndefined.bind(this),\n      pushNull: this.pushNull.bind(this),\n      pushInfinity: this.pushInfinity.bind(this),\n      pushInfinityNeg: this.pushInfinityNeg.bind(this),\n      pushNaN: this.pushNaN.bind(this),\n      pushNaNNeg: this.pushNaNNeg.bind(this),\n      pushArrayStart: this.pushArrayStart.bind(this),\n      pushArrayStartFixed: this.pushArrayStartFixed.bind(this),\n      pushArrayStartFixed32: this.pushArrayStartFixed32.bind(this),\n      pushArrayStartFixed64: this.pushArrayStartFixed64.bind(this),\n      pushObjectStart: this.pushObjectStart.bind(this),\n      pushObjectStartFixed: this.pushObjectStartFixed.bind(this),\n      pushObjectStartFixed32: this.pushObjectStartFixed32.bind(this),\n      pushObjectStartFixed64: this.pushObjectStartFixed64.bind(this),\n      pushByteString: this.pushByteString.bind(this),\n      pushByteStringStart: this.pushByteStringStart.bind(this),\n      pushUtf8String: this.pushUtf8String.bind(this),\n      pushUtf8StringStart: this.pushUtf8StringStart.bind(this),\n      pushSimpleUnassigned: this.pushSimpleUnassigned.bind(this),\n      pushTagUnassigned: this.pushTagUnassigned.bind(this),\n      pushTagStart: this.pushTagStart.bind(this),\n      pushTagStart4: this.pushTagStart4.bind(this),\n      pushTagStart8: this.pushTagStart8.bind(this),\n      pushBreak: this.pushBreak.bind(this)\n    }, this._heap);\n  }\n  get _depth() {\n    return this._parents.length;\n  }\n  get _currentParent() {\n    return this._parents[this._depth - 1];\n  }\n  get _ref() {\n    return this._currentParent.ref;\n  }\n\n  // Finish the current parent\n  _closeParent() {\n    var p = this._parents.pop();\n    if (p.length > 0) {\n      throw new Error(`Missing ${p.length} elements`);\n    }\n    switch (p.type) {\n      case c.PARENT.TAG:\n        this._push(this.createTag(p.ref[0], p.ref[1]));\n        break;\n      case c.PARENT.BYTE_STRING:\n        this._push(this.createByteString(p.ref, p.length));\n        break;\n      case c.PARENT.UTF8_STRING:\n        this._push(this.createUtf8String(p.ref, p.length));\n        break;\n      case c.PARENT.MAP:\n        if (p.values % 2 > 0) {\n          throw new Error('Odd number of elements in the map');\n        }\n        this._push(this.createMap(p.ref, p.length));\n        break;\n      case c.PARENT.OBJECT:\n        if (p.values % 2 > 0) {\n          throw new Error('Odd number of elements in the map');\n        }\n        this._push(this.createObject(p.ref, p.length));\n        break;\n      case c.PARENT.ARRAY:\n        this._push(this.createArray(p.ref, p.length));\n        break;\n      default:\n        break;\n    }\n    if (this._currentParent && this._currentParent.type === c.PARENT.TAG) {\n      this._dec();\n    }\n  }\n\n  // Reduce the expected length of the current parent by one\n  _dec() {\n    const p = this._currentParent;\n    // The current parent does not know the epxected child length\n\n    if (p.length < 0) {\n      return;\n    }\n    p.length--;\n\n    // All children were seen, we can close the current parent\n    if (p.length === 0) {\n      this._closeParent();\n    }\n  }\n\n  // Push any value to the current parent\n  _push(val, hasChildren) {\n    const p = this._currentParent;\n    p.values++;\n    switch (p.type) {\n      case c.PARENT.ARRAY:\n      case c.PARENT.BYTE_STRING:\n      case c.PARENT.UTF8_STRING:\n        if (p.length > -1) {\n          this._ref[this._ref.length - p.length] = val;\n        } else {\n          this._ref.push(val);\n        }\n        this._dec();\n        break;\n      case c.PARENT.OBJECT:\n        if (p.tmpKey != null) {\n          this._ref[p.tmpKey] = val;\n          p.tmpKey = null;\n          this._dec();\n        } else {\n          p.tmpKey = val;\n          if (typeof p.tmpKey !== 'string') {\n            // too bad, convert to a Map\n            p.type = c.PARENT.MAP;\n            p.ref = utils.buildMap(p.ref);\n          }\n        }\n        break;\n      case c.PARENT.MAP:\n        if (p.tmpKey != null) {\n          this._ref.set(p.tmpKey, val);\n          p.tmpKey = null;\n          this._dec();\n        } else {\n          p.tmpKey = val;\n        }\n        break;\n      case c.PARENT.TAG:\n        this._ref.push(val);\n        if (!hasChildren) {\n          this._dec();\n        }\n        break;\n      default:\n        throw new Error('Unknown parent type');\n    }\n  }\n\n  // Create a new parent in the parents list\n  _createParent(obj, type, len) {\n    this._parents[this._depth] = {\n      type: type,\n      length: len,\n      ref: obj,\n      values: 0,\n      tmpKey: null\n    };\n  }\n\n  // Reset all state back to the beginning, also used for initiatlization\n  _reset() {\n    this._res = [];\n    this._parents = [{\n      type: c.PARENT.ARRAY,\n      length: -1,\n      ref: this._res,\n      values: 0,\n      tmpKey: null\n    }];\n  }\n\n  // -- Interface to customize deoding behaviour\n  createTag(tagNumber, value) {\n    const typ = this._knownTags[tagNumber];\n    if (!typ) {\n      return new Tagged(tagNumber, value);\n    }\n    return typ(value);\n  }\n  createMap(obj, len) {\n    return obj;\n  }\n  createObject(obj, len) {\n    return obj;\n  }\n  createArray(arr, len) {\n    return arr;\n  }\n  createByteString(raw, len) {\n    return Buffer.concat(raw);\n  }\n  createByteStringFromHeap(start, end) {\n    if (start === end) {\n      return Buffer.alloc(0);\n    }\n    return Buffer.from(this._heap.slice(start, end));\n  }\n  createInt(val) {\n    return val;\n  }\n  createInt32(f, g) {\n    return utils.buildInt32(f, g);\n  }\n  createInt64(f1, f2, g1, g2) {\n    return utils.buildInt64(f1, f2, g1, g2);\n  }\n  createFloat(val) {\n    return val;\n  }\n  createFloatSingle(a, b, c, d) {\n    return ieee754.read([a, b, c, d], 0, false, 23, 4);\n  }\n  createFloatDouble(a, b, c, d, e, f, g, h) {\n    return ieee754.read([a, b, c, d, e, f, g, h], 0, false, 52, 8);\n  }\n  createInt32Neg(f, g) {\n    return -1 - utils.buildInt32(f, g);\n  }\n  createInt64Neg(f1, f2, g1, g2) {\n    const f = utils.buildInt32(f1, f2);\n    const g = utils.buildInt32(g1, g2);\n    if (f > c.MAX_SAFE_HIGH) {\n      return c.NEG_ONE.minus(new Bignumber(f).times(c.SHIFT32).plus(g));\n    }\n    return -1 - (f * c.SHIFT32 + g);\n  }\n  createTrue() {\n    return true;\n  }\n  createFalse() {\n    return false;\n  }\n  createNull() {\n    return null;\n  }\n  createUndefined() {\n    return undefined;\n  }\n  createInfinity() {\n    return Infinity;\n  }\n  createInfinityNeg() {\n    return -Infinity;\n  }\n  createNaN() {\n    return NaN;\n  }\n  createNaNNeg() {\n    return -NaN;\n  }\n  createUtf8String(raw, len) {\n    return raw.join('');\n  }\n  createUtf8StringFromHeap(start, end) {\n    if (start === end) {\n      return '';\n    }\n    return this._buffer.toString('utf8', start, end);\n  }\n  createSimpleUnassigned(val) {\n    return new Simple(val);\n  }\n\n  // -- Interface for decoder.asm.js\n\n  pushInt(val) {\n    this._push(this.createInt(val));\n  }\n  pushInt32(f, g) {\n    this._push(this.createInt32(f, g));\n  }\n  pushInt64(f1, f2, g1, g2) {\n    this._push(this.createInt64(f1, f2, g1, g2));\n  }\n  pushFloat(val) {\n    this._push(this.createFloat(val));\n  }\n  pushFloatSingle(a, b, c, d) {\n    this._push(this.createFloatSingle(a, b, c, d));\n  }\n  pushFloatDouble(a, b, c, d, e, f, g, h) {\n    this._push(this.createFloatDouble(a, b, c, d, e, f, g, h));\n  }\n  pushInt32Neg(f, g) {\n    this._push(this.createInt32Neg(f, g));\n  }\n  pushInt64Neg(f1, f2, g1, g2) {\n    this._push(this.createInt64Neg(f1, f2, g1, g2));\n  }\n  pushTrue() {\n    this._push(this.createTrue());\n  }\n  pushFalse() {\n    this._push(this.createFalse());\n  }\n  pushNull() {\n    this._push(this.createNull());\n  }\n  pushUndefined() {\n    this._push(this.createUndefined());\n  }\n  pushInfinity() {\n    this._push(this.createInfinity());\n  }\n  pushInfinityNeg() {\n    this._push(this.createInfinityNeg());\n  }\n  pushNaN() {\n    this._push(this.createNaN());\n  }\n  pushNaNNeg() {\n    this._push(this.createNaNNeg());\n  }\n  pushArrayStart() {\n    this._createParent([], c.PARENT.ARRAY, -1);\n  }\n  pushArrayStartFixed(len) {\n    this._createArrayStartFixed(len);\n  }\n  pushArrayStartFixed32(len1, len2) {\n    const len = utils.buildInt32(len1, len2);\n    this._createArrayStartFixed(len);\n  }\n  pushArrayStartFixed64(len1, len2, len3, len4) {\n    const len = utils.buildInt64(len1, len2, len3, len4);\n    this._createArrayStartFixed(len);\n  }\n  pushObjectStart() {\n    this._createObjectStartFixed(-1);\n  }\n  pushObjectStartFixed(len) {\n    this._createObjectStartFixed(len);\n  }\n  pushObjectStartFixed32(len1, len2) {\n    const len = utils.buildInt32(len1, len2);\n    this._createObjectStartFixed(len);\n  }\n  pushObjectStartFixed64(len1, len2, len3, len4) {\n    const len = utils.buildInt64(len1, len2, len3, len4);\n    this._createObjectStartFixed(len);\n  }\n  pushByteStringStart() {\n    this._parents[this._depth] = {\n      type: c.PARENT.BYTE_STRING,\n      length: -1,\n      ref: [],\n      values: 0,\n      tmpKey: null\n    };\n  }\n  pushByteString(start, end) {\n    this._push(this.createByteStringFromHeap(start, end));\n  }\n  pushUtf8StringStart() {\n    this._parents[this._depth] = {\n      type: c.PARENT.UTF8_STRING,\n      length: -1,\n      ref: [],\n      values: 0,\n      tmpKey: null\n    };\n  }\n  pushUtf8String(start, end) {\n    this._push(this.createUtf8StringFromHeap(start, end));\n  }\n  pushSimpleUnassigned(val) {\n    this._push(this.createSimpleUnassigned(val));\n  }\n  pushTagStart(tag) {\n    this._parents[this._depth] = {\n      type: c.PARENT.TAG,\n      length: 1,\n      ref: [tag]\n    };\n  }\n  pushTagStart4(f, g) {\n    this.pushTagStart(utils.buildInt32(f, g));\n  }\n  pushTagStart8(f1, f2, g1, g2) {\n    this.pushTagStart(utils.buildInt64(f1, f2, g1, g2));\n  }\n  pushTagUnassigned(tagNumber) {\n    this._push(this.createTag(tagNumber));\n  }\n  pushBreak() {\n    if (this._currentParent.length > -1) {\n      throw new Error('Unexpected break');\n    }\n    this._closeParent();\n  }\n  _createObjectStartFixed(len) {\n    if (len === 0) {\n      this._push(this.createObject({}));\n      return;\n    }\n    this._createParent({}, c.PARENT.OBJECT, len);\n  }\n  _createArrayStartFixed(len) {\n    if (len === 0) {\n      this._push(this.createArray([]));\n      return;\n    }\n    this._createParent(new Array(len), c.PARENT.ARRAY, len);\n  }\n  _decode(input) {\n    if (input.byteLength === 0) {\n      throw new Error('Input too short');\n    }\n    this._reset();\n    this._heap8.set(input);\n    const code = this.parser.parse(input.byteLength);\n    if (this._depth > 1) {\n      while (this._currentParent.length === 0) {\n        this._closeParent();\n      }\n      if (this._depth > 1) {\n        throw new Error('Undeterminated nesting');\n      }\n    }\n    if (code > 0) {\n      throw new Error('Failed to parse');\n    }\n    if (this._res.length === 0) {\n      throw new Error('No valid result');\n    }\n  }\n\n  // -- Public Interface\n\n  decodeFirst(input) {\n    this._decode(input);\n    return this._res[0];\n  }\n  decodeAll(input) {\n    this._decode(input);\n    return this._res;\n  }\n\n  /**\n   * Decode the first cbor object.\n   *\n   * @param {Buffer|string} input\n   * @param {string} [enc='hex'] - Encoding used if a string is passed.\n   * @returns {*}\n   */\n  static decode(input, enc) {\n    if (typeof input === 'string') {\n      input = Buffer.from(input, enc || 'hex');\n    }\n    const dec = new Decoder({\n      size: input.length\n    });\n    return dec.decodeFirst(input);\n  }\n\n  /**\n   * Decode all cbor objects.\n   *\n   * @param {Buffer|string} input\n   * @param {string} [enc='hex'] - Encoding used if a string is passed.\n   * @returns {Array<*>}\n   */\n  static decodeAll(input, enc) {\n    if (typeof input === 'string') {\n      input = Buffer.from(input, enc || 'hex');\n    }\n    const dec = new Decoder({\n      size: input.length\n    });\n    return dec.decodeAll(input);\n  }\n}\nDecoder.decodeFirst = Decoder.decode;\nmodule.exports = Decoder;","map":{"version":3,"names":["Buffer","require","ieee754","Bignumber","BigNumber","parser","utils","c","Simple","Tagged","URL","Decoder","constructor","opts","size","nextPowerOf2","_heap","ArrayBuffer","_heap8","Uint8Array","_buffer","from","_reset","_knownTags","Object","assign","val","Date","arrayBufferToBignumber","NEG_ONE","minus","v","TEN","pow","times","TWO","RegExp","tags","global","log","console","bind","pushInt","pushInt32","pushInt32Neg","pushInt64","pushInt64Neg","pushFloat","pushFloatSingle","pushFloatDouble","pushTrue","pushFalse","pushUndefined","pushNull","pushInfinity","pushInfinityNeg","pushNaN","pushNaNNeg","pushArrayStart","pushArrayStartFixed","pushArrayStartFixed32","pushArrayStartFixed64","pushObjectStart","pushObjectStartFixed","pushObjectStartFixed32","pushObjectStartFixed64","pushByteString","pushByteStringStart","pushUtf8String","pushUtf8StringStart","pushSimpleUnassigned","pushTagUnassigned","pushTagStart","pushTagStart4","pushTagStart8","pushBreak","_depth","_parents","length","_currentParent","_ref","ref","_closeParent","p","pop","Error","type","PARENT","TAG","_push","createTag","BYTE_STRING","createByteString","UTF8_STRING","createUtf8String","MAP","values","createMap","OBJECT","createObject","ARRAY","createArray","_dec","hasChildren","push","tmpKey","buildMap","set","_createParent","obj","len","_res","tagNumber","value","typ","arr","raw","concat","createByteStringFromHeap","start","end","alloc","slice","createInt","createInt32","f","g","buildInt32","createInt64","f1","f2","g1","g2","buildInt64","createFloat","createFloatSingle","a","b","d","read","createFloatDouble","e","h","createInt32Neg","createInt64Neg","MAX_SAFE_HIGH","SHIFT32","plus","createTrue","createFalse","createNull","createUndefined","undefined","createInfinity","Infinity","createInfinityNeg","createNaN","NaN","createNaNNeg","join","createUtf8StringFromHeap","toString","createSimpleUnassigned","_createArrayStartFixed","len1","len2","len3","len4","_createObjectStartFixed","tag","Array","_decode","input","byteLength","code","parse","decodeFirst","decodeAll","decode","enc","dec","module","exports"],"sources":["C:/blockchain/Victus-health-assistant-main/Victus-health-assistant-main/node_modules/borc/src/decoder.js"],"sourcesContent":["'use strict'\n\nconst { Buffer } = require('buffer')\nconst ieee754 = require('ieee754')\nconst Bignumber = require('bignumber.js').BigNumber\n\nconst parser = require('./decoder.asm')\nconst utils = require('./utils')\nconst c = require('./constants')\nconst Simple = require('./simple')\nconst Tagged = require('./tagged')\nconst { URL } = require('iso-url')\n\n/**\n * Transform binary cbor data into JavaScript objects.\n */\nclass Decoder {\n  /**\n   * @param {Object} [opts={}]\n   * @param {number} [opts.size=65536] - Size of the allocated heap.\n   */\n  constructor (opts) {\n    opts = opts || {}\n\n    if (!opts.size || opts.size < 0x10000) {\n      opts.size = 0x10000\n    } else {\n      // Ensure the size is a power of 2\n      opts.size = utils.nextPowerOf2(opts.size)\n    }\n\n    // Heap use to share the input with the parser\n    this._heap = new ArrayBuffer(opts.size)\n    this._heap8 = new Uint8Array(this._heap)\n    this._buffer = Buffer.from(this._heap)\n\n    this._reset()\n\n    // Known tags\n    this._knownTags = Object.assign({\n      0: (val) => new Date(val),\n      1: (val) => new Date(val * 1000),\n      2: (val) => utils.arrayBufferToBignumber(val),\n      3: (val) => c.NEG_ONE.minus(utils.arrayBufferToBignumber(val)),\n      4: (v) => {\n        // const v = new Uint8Array(val)\n        return c.TEN.pow(v[0]).times(v[1])\n      },\n      5: (v) => {\n        // const v = new Uint8Array(val)\n        return c.TWO.pow(v[0]).times(v[1])\n      },\n      32: (val) => new URL(val),\n      35: (val) => new RegExp(val)\n    }, opts.tags)\n\n    // Initialize asm based parser\n    this.parser = parser(global, {\n      // eslint-disable-next-line no-console\n      log: console.log.bind(console),\n      pushInt: this.pushInt.bind(this),\n      pushInt32: this.pushInt32.bind(this),\n      pushInt32Neg: this.pushInt32Neg.bind(this),\n      pushInt64: this.pushInt64.bind(this),\n      pushInt64Neg: this.pushInt64Neg.bind(this),\n      pushFloat: this.pushFloat.bind(this),\n      pushFloatSingle: this.pushFloatSingle.bind(this),\n      pushFloatDouble: this.pushFloatDouble.bind(this),\n      pushTrue: this.pushTrue.bind(this),\n      pushFalse: this.pushFalse.bind(this),\n      pushUndefined: this.pushUndefined.bind(this),\n      pushNull: this.pushNull.bind(this),\n      pushInfinity: this.pushInfinity.bind(this),\n      pushInfinityNeg: this.pushInfinityNeg.bind(this),\n      pushNaN: this.pushNaN.bind(this),\n      pushNaNNeg: this.pushNaNNeg.bind(this),\n      pushArrayStart: this.pushArrayStart.bind(this),\n      pushArrayStartFixed: this.pushArrayStartFixed.bind(this),\n      pushArrayStartFixed32: this.pushArrayStartFixed32.bind(this),\n      pushArrayStartFixed64: this.pushArrayStartFixed64.bind(this),\n      pushObjectStart: this.pushObjectStart.bind(this),\n      pushObjectStartFixed: this.pushObjectStartFixed.bind(this),\n      pushObjectStartFixed32: this.pushObjectStartFixed32.bind(this),\n      pushObjectStartFixed64: this.pushObjectStartFixed64.bind(this),\n      pushByteString: this.pushByteString.bind(this),\n      pushByteStringStart: this.pushByteStringStart.bind(this),\n      pushUtf8String: this.pushUtf8String.bind(this),\n      pushUtf8StringStart: this.pushUtf8StringStart.bind(this),\n      pushSimpleUnassigned: this.pushSimpleUnassigned.bind(this),\n      pushTagUnassigned: this.pushTagUnassigned.bind(this),\n      pushTagStart: this.pushTagStart.bind(this),\n      pushTagStart4: this.pushTagStart4.bind(this),\n      pushTagStart8: this.pushTagStart8.bind(this),\n      pushBreak: this.pushBreak.bind(this)\n    }, this._heap)\n  }\n\n  get _depth () {\n    return this._parents.length\n  }\n\n  get _currentParent () {\n    return this._parents[this._depth - 1]\n  }\n\n  get _ref () {\n    return this._currentParent.ref\n  }\n\n  // Finish the current parent\n  _closeParent () {\n    var p = this._parents.pop()\n\n    if (p.length > 0) {\n      throw new Error(`Missing ${p.length} elements`)\n    }\n\n    switch (p.type) {\n      case c.PARENT.TAG:\n        this._push(\n          this.createTag(p.ref[0], p.ref[1])\n        )\n        break\n      case c.PARENT.BYTE_STRING:\n        this._push(this.createByteString(p.ref, p.length))\n        break\n      case c.PARENT.UTF8_STRING:\n        this._push(this.createUtf8String(p.ref, p.length))\n        break\n      case c.PARENT.MAP:\n        if (p.values % 2 > 0) {\n          throw new Error('Odd number of elements in the map')\n        }\n        this._push(this.createMap(p.ref, p.length))\n        break\n      case c.PARENT.OBJECT:\n        if (p.values % 2 > 0) {\n          throw new Error('Odd number of elements in the map')\n        }\n        this._push(this.createObject(p.ref, p.length))\n        break\n      case c.PARENT.ARRAY:\n        this._push(this.createArray(p.ref, p.length))\n        break\n      default:\n        break\n    }\n\n    if (this._currentParent && this._currentParent.type === c.PARENT.TAG) {\n      this._dec()\n    }\n  }\n\n  // Reduce the expected length of the current parent by one\n  _dec () {\n    const p = this._currentParent\n    // The current parent does not know the epxected child length\n\n    if (p.length < 0) {\n      return\n    }\n\n    p.length--\n\n    // All children were seen, we can close the current parent\n    if (p.length === 0) {\n      this._closeParent()\n    }\n  }\n\n  // Push any value to the current parent\n  _push (val, hasChildren) {\n    const p = this._currentParent\n    p.values++\n\n    switch (p.type) {\n      case c.PARENT.ARRAY:\n      case c.PARENT.BYTE_STRING:\n      case c.PARENT.UTF8_STRING:\n        if (p.length > -1) {\n          this._ref[this._ref.length - p.length] = val\n        } else {\n          this._ref.push(val)\n        }\n        this._dec()\n        break\n      case c.PARENT.OBJECT:\n        if (p.tmpKey != null) {\n          this._ref[p.tmpKey] = val\n          p.tmpKey = null\n          this._dec()\n        } else {\n          p.tmpKey = val\n\n          if (typeof p.tmpKey !== 'string') {\n            // too bad, convert to a Map\n            p.type = c.PARENT.MAP\n            p.ref = utils.buildMap(p.ref)\n          }\n        }\n        break\n      case c.PARENT.MAP:\n        if (p.tmpKey != null) {\n          this._ref.set(p.tmpKey, val)\n          p.tmpKey = null\n          this._dec()\n        } else {\n          p.tmpKey = val\n        }\n        break\n      case c.PARENT.TAG:\n        this._ref.push(val)\n        if (!hasChildren) {\n          this._dec()\n        }\n        break\n      default:\n        throw new Error('Unknown parent type')\n    }\n  }\n\n  // Create a new parent in the parents list\n  _createParent (obj, type, len) {\n    this._parents[this._depth] = {\n      type: type,\n      length: len,\n      ref: obj,\n      values: 0,\n      tmpKey: null\n    }\n  }\n\n  // Reset all state back to the beginning, also used for initiatlization\n  _reset () {\n    this._res = []\n    this._parents = [{\n      type: c.PARENT.ARRAY,\n      length: -1,\n      ref: this._res,\n      values: 0,\n      tmpKey: null\n    }]\n  }\n\n  // -- Interface to customize deoding behaviour\n  createTag (tagNumber, value) {\n    const typ = this._knownTags[tagNumber]\n\n    if (!typ) {\n      return new Tagged(tagNumber, value)\n    }\n\n    return typ(value)\n  }\n\n  createMap (obj, len) {\n    return obj\n  }\n\n  createObject (obj, len) {\n    return obj\n  }\n\n  createArray (arr, len) {\n    return arr\n  }\n\n  createByteString (raw, len) {\n    return Buffer.concat(raw)\n  }\n\n  createByteStringFromHeap (start, end) {\n    if (start === end) {\n      return Buffer.alloc(0)\n    }\n\n    return Buffer.from(this._heap.slice(start, end))\n  }\n\n  createInt (val) {\n    return val\n  }\n\n  createInt32 (f, g) {\n    return utils.buildInt32(f, g)\n  }\n\n  createInt64 (f1, f2, g1, g2) {\n    return utils.buildInt64(f1, f2, g1, g2)\n  }\n\n  createFloat (val) {\n    return val\n  }\n\n  createFloatSingle (a, b, c, d) {\n    return ieee754.read([a, b, c, d], 0, false, 23, 4)\n  }\n\n  createFloatDouble (a, b, c, d, e, f, g, h) {\n    return ieee754.read([a, b, c, d, e, f, g, h], 0, false, 52, 8)\n  }\n\n  createInt32Neg (f, g) {\n    return -1 - utils.buildInt32(f, g)\n  }\n\n  createInt64Neg (f1, f2, g1, g2) {\n    const f = utils.buildInt32(f1, f2)\n    const g = utils.buildInt32(g1, g2)\n\n    if (f > c.MAX_SAFE_HIGH) {\n      return c.NEG_ONE.minus(new Bignumber(f).times(c.SHIFT32).plus(g))\n    }\n\n    return -1 - ((f * c.SHIFT32) + g)\n  }\n\n  createTrue () {\n    return true\n  }\n\n  createFalse () {\n    return false\n  }\n\n  createNull () {\n    return null\n  }\n\n  createUndefined () {\n    return undefined\n  }\n\n  createInfinity () {\n    return Infinity\n  }\n\n  createInfinityNeg () {\n    return -Infinity\n  }\n\n  createNaN () {\n    return NaN\n  }\n\n  createNaNNeg () {\n    return -NaN\n  }\n\n  createUtf8String (raw, len) {\n    return raw.join('')\n  }\n\n  createUtf8StringFromHeap (start, end) {\n    if (start === end) {\n      return ''\n    }\n\n    return this._buffer.toString('utf8', start, end)\n  }\n\n  createSimpleUnassigned (val) {\n    return new Simple(val)\n  }\n\n  // -- Interface for decoder.asm.js\n\n  pushInt (val) {\n    this._push(this.createInt(val))\n  }\n\n  pushInt32 (f, g) {\n    this._push(this.createInt32(f, g))\n  }\n\n  pushInt64 (f1, f2, g1, g2) {\n    this._push(this.createInt64(f1, f2, g1, g2))\n  }\n\n  pushFloat (val) {\n    this._push(this.createFloat(val))\n  }\n\n  pushFloatSingle (a, b, c, d) {\n    this._push(this.createFloatSingle(a, b, c, d))\n  }\n\n  pushFloatDouble (a, b, c, d, e, f, g, h) {\n    this._push(this.createFloatDouble(a, b, c, d, e, f, g, h))\n  }\n\n  pushInt32Neg (f, g) {\n    this._push(this.createInt32Neg(f, g))\n  }\n\n  pushInt64Neg (f1, f2, g1, g2) {\n    this._push(this.createInt64Neg(f1, f2, g1, g2))\n  }\n\n  pushTrue () {\n    this._push(this.createTrue())\n  }\n\n  pushFalse () {\n    this._push(this.createFalse())\n  }\n\n  pushNull () {\n    this._push(this.createNull())\n  }\n\n  pushUndefined () {\n    this._push(this.createUndefined())\n  }\n\n  pushInfinity () {\n    this._push(this.createInfinity())\n  }\n\n  pushInfinityNeg () {\n    this._push(this.createInfinityNeg())\n  }\n\n  pushNaN () {\n    this._push(this.createNaN())\n  }\n\n  pushNaNNeg () {\n    this._push(this.createNaNNeg())\n  }\n\n  pushArrayStart () {\n    this._createParent([], c.PARENT.ARRAY, -1)\n  }\n\n  pushArrayStartFixed (len) {\n    this._createArrayStartFixed(len)\n  }\n\n  pushArrayStartFixed32 (len1, len2) {\n    const len = utils.buildInt32(len1, len2)\n    this._createArrayStartFixed(len)\n  }\n\n  pushArrayStartFixed64 (len1, len2, len3, len4) {\n    const len = utils.buildInt64(len1, len2, len3, len4)\n    this._createArrayStartFixed(len)\n  }\n\n  pushObjectStart () {\n    this._createObjectStartFixed(-1)\n  }\n\n  pushObjectStartFixed (len) {\n    this._createObjectStartFixed(len)\n  }\n\n  pushObjectStartFixed32 (len1, len2) {\n    const len = utils.buildInt32(len1, len2)\n    this._createObjectStartFixed(len)\n  }\n\n  pushObjectStartFixed64 (len1, len2, len3, len4) {\n    const len = utils.buildInt64(len1, len2, len3, len4)\n    this._createObjectStartFixed(len)\n  }\n\n  pushByteStringStart () {\n    this._parents[this._depth] = {\n      type: c.PARENT.BYTE_STRING,\n      length: -1,\n      ref: [],\n      values: 0,\n      tmpKey: null\n    }\n  }\n\n  pushByteString (start, end) {\n    this._push(this.createByteStringFromHeap(start, end))\n  }\n\n  pushUtf8StringStart () {\n    this._parents[this._depth] = {\n      type: c.PARENT.UTF8_STRING,\n      length: -1,\n      ref: [],\n      values: 0,\n      tmpKey: null\n    }\n  }\n\n  pushUtf8String (start, end) {\n    this._push(this.createUtf8StringFromHeap(start, end))\n  }\n\n  pushSimpleUnassigned (val) {\n    this._push(this.createSimpleUnassigned(val))\n  }\n\n  pushTagStart (tag) {\n    this._parents[this._depth] = {\n      type: c.PARENT.TAG,\n      length: 1,\n      ref: [tag]\n    }\n  }\n\n  pushTagStart4 (f, g) {\n    this.pushTagStart(utils.buildInt32(f, g))\n  }\n\n  pushTagStart8 (f1, f2, g1, g2) {\n    this.pushTagStart(utils.buildInt64(f1, f2, g1, g2))\n  }\n\n  pushTagUnassigned (tagNumber) {\n    this._push(this.createTag(tagNumber))\n  }\n\n  pushBreak () {\n    if (this._currentParent.length > -1) {\n      throw new Error('Unexpected break')\n    }\n\n    this._closeParent()\n  }\n\n  _createObjectStartFixed (len) {\n    if (len === 0) {\n      this._push(this.createObject({}))\n      return\n    }\n\n    this._createParent({}, c.PARENT.OBJECT, len)\n  }\n\n  _createArrayStartFixed (len) {\n    if (len === 0) {\n      this._push(this.createArray([]))\n      return\n    }\n\n    this._createParent(new Array(len), c.PARENT.ARRAY, len)\n  }\n\n  _decode (input) {\n    if (input.byteLength === 0) {\n      throw new Error('Input too short')\n    }\n\n    this._reset()\n    this._heap8.set(input)\n    const code = this.parser.parse(input.byteLength)\n\n    if (this._depth > 1) {\n      while (this._currentParent.length === 0) {\n        this._closeParent()\n      }\n      if (this._depth > 1) {\n        throw new Error('Undeterminated nesting')\n      }\n    }\n\n    if (code > 0) {\n      throw new Error('Failed to parse')\n    }\n\n    if (this._res.length === 0) {\n      throw new Error('No valid result')\n    }\n  }\n\n  // -- Public Interface\n\n  decodeFirst (input) {\n    this._decode(input)\n\n    return this._res[0]\n  }\n\n  decodeAll (input) {\n    this._decode(input)\n\n    return this._res\n  }\n\n  /**\n   * Decode the first cbor object.\n   *\n   * @param {Buffer|string} input\n   * @param {string} [enc='hex'] - Encoding used if a string is passed.\n   * @returns {*}\n   */\n  static decode (input, enc) {\n    if (typeof input === 'string') {\n      input = Buffer.from(input, enc || 'hex')\n    }\n\n    const dec = new Decoder({ size: input.length })\n    return dec.decodeFirst(input)\n  }\n\n  /**\n   * Decode all cbor objects.\n   *\n   * @param {Buffer|string} input\n   * @param {string} [enc='hex'] - Encoding used if a string is passed.\n   * @returns {Array<*>}\n   */\n  static decodeAll (input, enc) {\n    if (typeof input === 'string') {\n      input = Buffer.from(input, enc || 'hex')\n    }\n\n    const dec = new Decoder({ size: input.length })\n    return dec.decodeAll(input)\n  }\n}\n\nDecoder.decodeFirst = Decoder.decode\n\nmodule.exports = Decoder\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}