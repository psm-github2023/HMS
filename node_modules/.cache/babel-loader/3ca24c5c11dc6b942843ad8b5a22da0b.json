{"ast":null,"code":"'use strict';\n\nconst promisify = require('promisify-es6');\nmodule.exports = send => {\n  return promisify((key, value, opts, callback) => {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    if (typeof key !== 'string') {\n      return callback(new Error('Invalid key type'));\n    }\n    if (value === undefined || Buffer.isBuffer(value)) {\n      return callback(new Error('Invalid value type'));\n    }\n    if (typeof value === 'boolean') {\n      value = value.toString();\n      opts = {\n        bool: true\n      };\n    } else if (typeof value !== 'string') {\n      value = JSON.stringify(value);\n      opts = {\n        json: true\n      };\n    }\n    send({\n      path: 'config',\n      args: [key, value],\n      qs: opts,\n      files: undefined,\n      buffer: true\n    }, callback);\n  });\n};","map":{"version":3,"names":["promisify","require","module","exports","send","key","value","opts","callback","Error","undefined","Buffer","isBuffer","toString","bool","JSON","stringify","json","path","args","qs","files","buffer"],"sources":["C:/blockchain/Victus-health-assistant-main/Victus-health-assistant-main/node_modules/ipfs-http-client/src/config/set.js"],"sourcesContent":["'use strict'\n\nconst promisify = require('promisify-es6')\n\nmodule.exports = (send) => {\n  return promisify((key, value, opts, callback) => {\n    if (typeof opts === 'function') {\n      callback = opts\n      opts = {}\n    }\n    if (typeof key !== 'string') {\n      return callback(new Error('Invalid key type'))\n    }\n\n    if (value === undefined || Buffer.isBuffer(value)) {\n      return callback(new Error('Invalid value type'))\n    }\n\n    if (typeof value === 'boolean') {\n      value = value.toString()\n      opts = { bool: true }\n    } else if (typeof value !== 'string') {\n      value = JSON.stringify(value)\n      opts = { json: true }\n    }\n\n    send({\n      path: 'config',\n      args: [key, value],\n      qs: opts,\n      files: undefined,\n      buffer: true\n    }, callback)\n  })\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,SAAS,GAAGC,OAAO,CAAC,eAAe,CAAC;AAE1CC,MAAM,CAACC,OAAO,GAAIC,IAAI,IAAK;EACzB,OAAOJ,SAAS,CAAC,CAACK,GAAG,EAAEC,KAAK,EAAEC,IAAI,EAAEC,QAAQ,KAAK;IAC/C,IAAI,OAAOD,IAAI,KAAK,UAAU,EAAE;MAC9BC,QAAQ,GAAGD,IAAI;MACfA,IAAI,GAAG,CAAC,CAAC;IACX;IACA,IAAI,OAAOF,GAAG,KAAK,QAAQ,EAAE;MAC3B,OAAOG,QAAQ,CAAC,IAAIC,KAAK,CAAC,kBAAkB,CAAC,CAAC;IAChD;IAEA,IAAIH,KAAK,KAAKI,SAAS,IAAIC,MAAM,CAACC,QAAQ,CAACN,KAAK,CAAC,EAAE;MACjD,OAAOE,QAAQ,CAAC,IAAIC,KAAK,CAAC,oBAAoB,CAAC,CAAC;IAClD;IAEA,IAAI,OAAOH,KAAK,KAAK,SAAS,EAAE;MAC9BA,KAAK,GAAGA,KAAK,CAACO,QAAQ,CAAC,CAAC;MACxBN,IAAI,GAAG;QAAEO,IAAI,EAAE;MAAK,CAAC;IACvB,CAAC,MAAM,IAAI,OAAOR,KAAK,KAAK,QAAQ,EAAE;MACpCA,KAAK,GAAGS,IAAI,CAACC,SAAS,CAACV,KAAK,CAAC;MAC7BC,IAAI,GAAG;QAAEU,IAAI,EAAE;MAAK,CAAC;IACvB;IAEAb,IAAI,CAAC;MACHc,IAAI,EAAE,QAAQ;MACdC,IAAI,EAAE,CAACd,GAAG,EAAEC,KAAK,CAAC;MAClBc,EAAE,EAAEb,IAAI;MACRc,KAAK,EAAEX,SAAS;MAChBY,MAAM,EAAE;IACV,CAAC,EAAEd,QAAQ,CAAC;EACd,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"script"}