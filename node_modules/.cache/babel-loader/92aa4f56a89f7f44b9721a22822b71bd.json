{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\nvar types_1 = require(\"./types\");\nvar baseTransaction_1 = require(\"./baseTransaction\");\nvar TRANSACTION_TYPE = 0;\n/**\n * An Ethereum non-typed (legacy) transaction\n */\nvar Transaction = /** @class */function (_super) {\n  __extends(Transaction, _super);\n  /**\n   * This constructor takes the values, validates them, assigns them and freezes the object.\n   *\n   * It is not recommended to use this constructor directly. Instead use\n   * the static factory methods to assist in creating a Transaction object from\n   * varying data types.\n   */\n  function Transaction(txData, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    var _a;\n    var _this = _super.call(this, __assign(__assign({}, txData), {\n      type: TRANSACTION_TYPE\n    })) || this;\n    _this.common = _this._validateTxV(_this.v, opts.common);\n    _this.gasPrice = new ethereumjs_util_1.BN((0, ethereumjs_util_1.toBuffer)(txData.gasPrice === '' ? '0x' : txData.gasPrice));\n    _this._validateCannotExceedMaxInteger({\n      gasPrice: _this.gasPrice\n    });\n    if (_this.common.gteHardfork('spuriousDragon')) {\n      if (!_this.isSigned()) {\n        _this.activeCapabilities.push(types_1.Capability.EIP155ReplayProtection);\n      } else {\n        // EIP155 spec:\n        // If block.number >= 2,675,000 and v = CHAIN_ID * 2 + 35 or v = CHAIN_ID * 2 + 36\n        // then when computing the hash of a transaction for purposes of signing or recovering\n        // instead of hashing only the first six elements (i.e. nonce, gasprice, startgas, to, value, data)\n        // hash nine elements, with v replaced by CHAIN_ID, r = 0 and s = 0.\n        var v = _this.v;\n        var chainIdDoubled = _this.common.chainIdBN().muln(2);\n        // v and chain ID meet EIP-155 conditions\n        if (v.eq(chainIdDoubled.addn(35)) || v.eq(chainIdDoubled.addn(36))) {\n          _this.activeCapabilities.push(types_1.Capability.EIP155ReplayProtection);\n        }\n      }\n    }\n    var freeze = (_a = opts === null || opts === void 0 ? void 0 : opts.freeze) !== null && _a !== void 0 ? _a : true;\n    if (freeze) {\n      Object.freeze(_this);\n    }\n    return _this;\n  }\n  /**\n   * Instantiate a transaction from a data dictionary.\n   *\n   * Format: { nonce, gasPrice, gasLimit, to, value, data, v, r, s }\n   *\n   * Notes:\n   * - All parameters are optional and have some basic default values\n   */\n  Transaction.fromTxData = function (txData, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    return new Transaction(txData, opts);\n  };\n  /**\n   * Instantiate a transaction from the serialized tx.\n   *\n   * Format: `rlp([nonce, gasPrice, gasLimit, to, value, data, v, r, s])`\n   */\n  Transaction.fromSerializedTx = function (serialized, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    var values = ethereumjs_util_1.rlp.decode(serialized);\n    if (!Array.isArray(values)) {\n      throw new Error('Invalid serialized tx input. Must be array');\n    }\n    return this.fromValuesArray(values, opts);\n  };\n  /**\n   * Instantiate a transaction from the serialized tx.\n   * (alias of {@link Transaction.fromSerializedTx})\n   *\n   * @deprecated this constructor alias is deprecated and will be removed\n   * in favor of the {@link Transaction.fromSerializedTx} constructor\n   */\n  Transaction.fromRlpSerializedTx = function (serialized, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    return Transaction.fromSerializedTx(serialized, opts);\n  };\n  /**\n   * Create a transaction from a values array.\n   *\n   * Format: `[nonce, gasPrice, gasLimit, to, value, data, v, r, s]`\n   */\n  Transaction.fromValuesArray = function (values, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    // If length is not 6, it has length 9. If v/r/s are empty Buffers, it is still an unsigned transaction\n    // This happens if you get the RLP data from `raw()`\n    if (values.length !== 6 && values.length !== 9) {\n      throw new Error('Invalid transaction. Only expecting 6 values (for unsigned tx) or 9 values (for signed tx).');\n    }\n    var _a = __read(values, 9),\n      nonce = _a[0],\n      gasPrice = _a[1],\n      gasLimit = _a[2],\n      to = _a[3],\n      value = _a[4],\n      data = _a[5],\n      v = _a[6],\n      r = _a[7],\n      s = _a[8];\n    return new Transaction({\n      nonce: nonce,\n      gasPrice: gasPrice,\n      gasLimit: gasLimit,\n      to: to,\n      value: value,\n      data: data,\n      v: v,\n      r: r,\n      s: s\n    }, opts);\n  };\n  /**\n   * Returns a Buffer Array of the raw Buffers of the legacy transaction, in order.\n   *\n   * Format: `[nonce, gasPrice, gasLimit, to, value, data, v, r, s]`\n   *\n   * For legacy txs this is also the correct format to add transactions\n   * to a block with {@link Block.fromValuesArray} (use the `serialize()` method\n   * for typed txs).\n   *\n   * For an unsigned tx this method returns the empty Buffer values\n   * for the signature parameters `v`, `r` and `s`. For an EIP-155 compliant\n   * representation have a look at {@link Transaction.getMessageToSign}.\n   */\n  Transaction.prototype.raw = function () {\n    return [(0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.nonce), (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.gasPrice), (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.gasLimit), this.to !== undefined ? this.to.buf : Buffer.from([]), (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.value), this.data, this.v !== undefined ? (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.v) : Buffer.from([]), this.r !== undefined ? (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.r) : Buffer.from([]), this.s !== undefined ? (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.s) : Buffer.from([])];\n  };\n  /**\n   * Returns the serialized encoding of the legacy transaction.\n   *\n   * Format: `rlp([nonce, gasPrice, gasLimit, to, value, data, v, r, s])`\n   *\n   * For an unsigned tx this method uses the empty Buffer values for the\n   * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n   * representation for external signing use {@link Transaction.getMessageToSign}.\n   */\n  Transaction.prototype.serialize = function () {\n    return ethereumjs_util_1.rlp.encode(this.raw());\n  };\n  Transaction.prototype._getMessageToSign = function () {\n    var values = [(0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.nonce), (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.gasPrice), (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.gasLimit), this.to !== undefined ? this.to.buf : Buffer.from([]), (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.value), this.data];\n    if (this.supports(types_1.Capability.EIP155ReplayProtection)) {\n      values.push((0, ethereumjs_util_1.toBuffer)(this.common.chainIdBN()));\n      values.push((0, ethereumjs_util_1.unpadBuffer)((0, ethereumjs_util_1.toBuffer)(0)));\n      values.push((0, ethereumjs_util_1.unpadBuffer)((0, ethereumjs_util_1.toBuffer)(0)));\n    }\n    return values;\n  };\n  Transaction.prototype.getMessageToSign = function (hashMessage) {\n    if (hashMessage === void 0) {\n      hashMessage = true;\n    }\n    var message = this._getMessageToSign();\n    if (hashMessage) {\n      return (0, ethereumjs_util_1.rlphash)(message);\n    } else {\n      return message;\n    }\n  };\n  /**\n   * The up front amount that an account must have for this transaction to be valid\n   */\n  Transaction.prototype.getUpfrontCost = function () {\n    return this.gasLimit.mul(this.gasPrice).add(this.value);\n  };\n  /**\n   * Computes a sha3-256 hash of the serialized tx.\n   *\n   * This method can only be used for signed txs (it throws otherwise).\n   * Use {@link Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n   */\n  Transaction.prototype.hash = function () {\n    // In contrast to the tx type transaction implementations the `hash()` function\n    // for the legacy tx does not throw if the tx is not signed.\n    // This has been considered for inclusion but lead to unexpected backwards\n    // compatibility problems (no concrete reference found, needs validation).\n    //\n    // For context see also https://github.com/ethereumjs/ethereumjs-monorepo/pull/1445,\n    // September, 2021 as well as work done before.\n    //\n    // This should be updated along the next major version release by adding:\n    //\n    //if (!this.isSigned()) {\n    //  throw new Error('Cannot call hash method if transaction is not signed')\n    //}\n    if (Object.isFrozen(this)) {\n      if (!this.cache.hash) {\n        this.cache.hash = (0, ethereumjs_util_1.rlphash)(this.raw());\n      }\n      return this.cache.hash;\n    }\n    return (0, ethereumjs_util_1.rlphash)(this.raw());\n  };\n  /**\n   * Computes a sha3-256 hash which can be used to verify the signature\n   */\n  Transaction.prototype.getMessageToVerifySignature = function () {\n    if (!this.isSigned()) {\n      throw Error('This transaction is not signed');\n    }\n    var message = this._getMessageToSign();\n    return (0, ethereumjs_util_1.rlphash)(message);\n  };\n  /**\n   * Returns the public key of the sender\n   */\n  Transaction.prototype.getSenderPublicKey = function () {\n    var _a;\n    var msgHash = this.getMessageToVerifySignature();\n    // EIP-2: All transaction signatures whose s-value is greater than secp256k1n/2 are considered invalid.\n    // Reasoning: https://ethereum.stackexchange.com/a/55728\n    if (this.common.gteHardfork('homestead') && ((_a = this.s) === null || _a === void 0 ? void 0 : _a.gt(types_1.N_DIV_2))) {\n      throw new Error('Invalid Signature: s-values greater than secp256k1n/2 are considered invalid');\n    }\n    var _b = this,\n      v = _b.v,\n      r = _b.r,\n      s = _b.s;\n    try {\n      return (0, ethereumjs_util_1.ecrecover)(msgHash, v, (0, ethereumjs_util_1.bnToUnpaddedBuffer)(r), (0, ethereumjs_util_1.bnToUnpaddedBuffer)(s), this.supports(types_1.Capability.EIP155ReplayProtection) ? this.common.chainIdBN() : undefined);\n    } catch (e) {\n      throw new Error('Invalid Signature');\n    }\n  };\n  /**\n   * Process the v, r, s values from the `sign` method of the base transaction.\n   */\n  Transaction.prototype._processSignature = function (v, r, s) {\n    var vBN = new ethereumjs_util_1.BN(v);\n    if (this.supports(types_1.Capability.EIP155ReplayProtection)) {\n      vBN.iadd(this.common.chainIdBN().muln(2).addn(8));\n    }\n    var opts = {\n      common: this.common\n    };\n    return Transaction.fromTxData({\n      nonce: this.nonce,\n      gasPrice: this.gasPrice,\n      gasLimit: this.gasLimit,\n      to: this.to,\n      value: this.value,\n      data: this.data,\n      v: vBN,\n      r: new ethereumjs_util_1.BN(r),\n      s: new ethereumjs_util_1.BN(s)\n    }, opts);\n  };\n  /**\n   * Returns an object with the JSON representation of the transaction.\n   */\n  Transaction.prototype.toJSON = function () {\n    return {\n      nonce: (0, ethereumjs_util_1.bnToHex)(this.nonce),\n      gasPrice: (0, ethereumjs_util_1.bnToHex)(this.gasPrice),\n      gasLimit: (0, ethereumjs_util_1.bnToHex)(this.gasLimit),\n      to: this.to !== undefined ? this.to.toString() : undefined,\n      value: (0, ethereumjs_util_1.bnToHex)(this.value),\n      data: '0x' + this.data.toString('hex'),\n      v: this.v !== undefined ? (0, ethereumjs_util_1.bnToHex)(this.v) : undefined,\n      r: this.r !== undefined ? (0, ethereumjs_util_1.bnToHex)(this.r) : undefined,\n      s: this.s !== undefined ? (0, ethereumjs_util_1.bnToHex)(this.s) : undefined\n    };\n  };\n  /**\n   * Validates tx's `v` value\n   */\n  Transaction.prototype._validateTxV = function (v, common) {\n    var chainIdBN;\n    // No unsigned tx and EIP-155 activated and chain ID included\n    if (v !== undefined && !v.eqn(0) && (!common || common.gteHardfork('spuriousDragon')) && !v.eqn(27) && !v.eqn(28)) {\n      if (common) {\n        var chainIdDoubled = common.chainIdBN().muln(2);\n        var isValidEIP155V = v.eq(chainIdDoubled.addn(35)) || v.eq(chainIdDoubled.addn(36));\n        if (!isValidEIP155V) {\n          throw new Error(\"Incompatible EIP155-based V \" + v.toString() + \" and chain id \" + common.chainIdBN().toString() + \". See the Common parameter of the Transaction constructor to set the chain id.\");\n        }\n      } else {\n        // Derive the original chain ID\n        var numSub = void 0;\n        if (v.subn(35).isEven()) {\n          numSub = 35;\n        } else {\n          numSub = 36;\n        }\n        // Use derived chain ID to create a proper Common\n        chainIdBN = v.subn(numSub).divn(2);\n      }\n    }\n    return this._getCommon(common, chainIdBN);\n  };\n  /**\n   * @deprecated if you have called this internal method please use `tx.supports(Capabilities.EIP155ReplayProtection)` instead\n   */\n  Transaction.prototype._unsignedTxImplementsEIP155 = function () {\n    return this.common.gteHardfork('spuriousDragon');\n  };\n  /**\n   * @deprecated if you have called this internal method please use `tx.supports(Capabilities.EIP155ReplayProtection)` instead\n   */\n  Transaction.prototype._signedTxImplementsEIP155 = function () {\n    if (!this.isSigned()) {\n      throw Error('This transaction is not signed');\n    }\n    var onEIP155BlockOrLater = this.common.gteHardfork('spuriousDragon');\n    // EIP155 spec:\n    // If block.number >= 2,675,000 and v = CHAIN_ID * 2 + 35 or v = CHAIN_ID * 2 + 36, then when computing the hash of a transaction for purposes of signing or recovering, instead of hashing only the first six elements (i.e. nonce, gasprice, startgas, to, value, data), hash nine elements, with v replaced by CHAIN_ID, r = 0 and s = 0.\n    var v = this.v;\n    var chainIdDoubled = this.common.chainIdBN().muln(2);\n    var vAndChainIdMeetEIP155Conditions = v.eq(chainIdDoubled.addn(35)) || v.eq(chainIdDoubled.addn(36));\n    return vAndChainIdMeetEIP155Conditions && onEIP155BlockOrLater;\n  };\n  return Transaction;\n}(baseTransaction_1.BaseTransaction);\nexports.default = Transaction;","map":{"version":3,"names":["ethereumjs_util_1","require","types_1","baseTransaction_1","TRANSACTION_TYPE","Transaction","_super","__extends","txData","opts","_this","call","__assign","type","common","_validateTxV","v","gasPrice","BN","toBuffer","_validateCannotExceedMaxInteger","gteHardfork","isSigned","activeCapabilities","push","Capability","EIP155ReplayProtection","chainIdDoubled","chainIdBN","muln","eq","addn","freeze","_a","Object","fromTxData","fromSerializedTx","serialized","values","rlp","decode","Array","isArray","Error","fromValuesArray","fromRlpSerializedTx","length","__read","nonce","gasLimit","to","value","data","r","s","prototype","raw","bnToUnpaddedBuffer","undefined","buf","Buffer","from","serialize","encode","_getMessageToSign","supports","unpadBuffer","getMessageToSign","hashMessage","message","rlphash","getUpfrontCost","mul","add","hash","isFrozen","cache","getMessageToVerifySignature","getSenderPublicKey","msgHash","gt","N_DIV_2","_b","ecrecover","e","_processSignature","vBN","iadd","toJSON","bnToHex","toString","eqn","isValidEIP155V","numSub","subn","isEven","divn","_getCommon","_unsignedTxImplementsEIP155","_signedTxImplementsEIP155","onEIP155BlockOrLater","vAndChainIdMeetEIP155Conditions","BaseTransaction"],"sources":["../src/legacyTransaction.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script"}