{"ast":null,"code":"'use strict';\n\nvar createHmac = require('create-hmac');\nvar hashInfo = require('./lib/hash-info.json');\nvar ebuf = new Buffer(0);\nvar b0x00 = new Buffer([0x00]);\nvar b0x01 = new Buffer([0x01]);\nfunction HmacDRBG(algo, entropy, nonce, pers) {\n  var info = hashInfo[algo];\n  if (info === undefined) throw new Error('hash ' + algo + ' is not supported');\n  this._algo = algo;\n  this._securityStrength = info.securityStrength / 8;\n  this._outlen = info.outlen / 8;\n  this._reseedInterval = 0x1000000000000; // 2**48\n\n  this._init(entropy, nonce, pers);\n}\nHmacDRBG.prototype._update = function (seed) {\n  var kmac = createHmac(this._algo, this._K).update(this._V).update(b0x00);\n  if (seed) kmac.update(seed);\n  this._K = kmac.digest();\n  this._V = createHmac(this._algo, this._K).update(this._V).digest();\n  if (!seed) return;\n  this._K = createHmac(this._algo, this._K).update(this._V).update(b0x01).update(seed).digest();\n  this._V = createHmac(this._algo, this._K).update(this._V).digest();\n};\nHmacDRBG.prototype._init = function (entropy, nonce, pers) {\n  if (entropy.length < this._securityStrength) throw new Error('Not enough entropy');\n  this._K = new Buffer(this._outlen);\n  this._V = new Buffer(this._outlen);\n  for (var i = 0; i < this._K.length; ++i) {\n    this._K[i] = 0x00;\n    this._V[i] = 0x01;\n  }\n  this._update(Buffer.concat([entropy, nonce, pers || ebuf]));\n  this._reseed = 1;\n};\nHmacDRBG.prototype.reseed = function (entropy, add) {\n  if (entropy.length < this._securityStrength) throw new Error('Not enough entropy');\n  this._update(Buffer.concat([entropy, add || ebuf]));\n  this._reseed = 1;\n};\nHmacDRBG.prototype.generate = function (len, add) {\n  if (this._reseed > this._reseedInterval) throw new Error('Reseed is required');\n  if (add && add.length === 0) add = undefined;\n  if (add) this._update(add);\n  var temp = new Buffer(0);\n  while (temp.length < len) {\n    this._V = createHmac(this._algo, this._K).update(this._V).digest();\n    temp = Buffer.concat([temp, this._V]);\n  }\n  this._update(add);\n  this._reseed += 1;\n  return temp.slice(0, len);\n};\nmodule.exports = HmacDRBG;","map":{"version":3,"names":["createHmac","require","hashInfo","ebuf","Buffer","b0x00","b0x01","HmacDRBG","algo","entropy","nonce","pers","info","undefined","Error","_algo","_securityStrength","securityStrength","_outlen","outlen","_reseedInterval","_init","prototype","_update","seed","kmac","_K","update","_V","digest","length","i","concat","_reseed","reseed","add","generate","len","temp","slice","module","exports"],"sources":["C:/blockchain/Victus-health-assistant-main/Victus-health-assistant-main/node_modules/drbg.js/hmac.js"],"sourcesContent":["'use strict'\nvar createHmac = require('create-hmac')\nvar hashInfo = require('./lib/hash-info.json')\n\nvar ebuf = new Buffer(0)\nvar b0x00 = new Buffer([ 0x00 ])\nvar b0x01 = new Buffer([ 0x01 ])\n\nfunction HmacDRBG (algo, entropy, nonce, pers) {\n  var info = hashInfo[algo]\n  if (info === undefined) throw new Error('hash ' + algo + ' is not supported')\n\n  this._algo = algo\n  this._securityStrength = info.securityStrength / 8\n  this._outlen = info.outlen / 8\n  this._reseedInterval = 0x1000000000000 // 2**48\n\n  this._init(entropy, nonce, pers)\n}\n\nHmacDRBG.prototype._update = function (seed) {\n  var kmac = createHmac(this._algo, this._K).update(this._V).update(b0x00)\n  if (seed) kmac.update(seed)\n\n  this._K = kmac.digest()\n  this._V = createHmac(this._algo, this._K).update(this._V).digest()\n  if (!seed) return\n\n  this._K = createHmac(this._algo, this._K).update(this._V).update(b0x01).update(seed).digest()\n  this._V = createHmac(this._algo, this._K).update(this._V).digest()\n}\n\nHmacDRBG.prototype._init = function (entropy, nonce, pers) {\n  if (entropy.length < this._securityStrength) throw new Error('Not enough entropy')\n\n  this._K = new Buffer(this._outlen)\n  this._V = new Buffer(this._outlen)\n  for (var i = 0; i < this._K.length; ++i) {\n    this._K[i] = 0x00\n    this._V[i] = 0x01\n  }\n\n  this._update(Buffer.concat([ entropy, nonce, pers || ebuf ]))\n  this._reseed = 1\n}\n\nHmacDRBG.prototype.reseed = function (entropy, add) {\n  if (entropy.length < this._securityStrength) throw new Error('Not enough entropy')\n\n  this._update(Buffer.concat([ entropy, add || ebuf ]))\n  this._reseed = 1\n}\n\nHmacDRBG.prototype.generate = function (len, add) {\n  if (this._reseed > this._reseedInterval) throw new Error('Reseed is required')\n\n  if (add && add.length === 0) add = undefined\n  if (add) this._update(add)\n\n  var temp = new Buffer(0)\n  while (temp.length < len) {\n    this._V = createHmac(this._algo, this._K).update(this._V).digest()\n    temp = Buffer.concat([ temp, this._V ])\n  }\n\n  this._update(add)\n  this._reseed += 1\n  return temp.slice(0, len)\n}\n\nmodule.exports = HmacDRBG\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}