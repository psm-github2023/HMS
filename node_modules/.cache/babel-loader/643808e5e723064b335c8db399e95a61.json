{"ast":null,"code":"'use strict';\n\nconst promisify = require('promisify-es6');\nconst CID = require('cids');\nmodule.exports = send => {\n  return promisify((cids, opts, callback) => {\n    if (typeof opts === 'function' && !callback) {\n      callback = opts;\n      opts = {};\n    }\n\n    // opts is the real callback --\n    // 'callback' is being injected by promisify\n    if (typeof opts === 'function' && typeof callback === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    if (!Array.isArray(cids)) {\n      cids = [cids];\n    }\n\n    // Validate CID(s) and serialize\n    try {\n      cids = cids.map(cid => new CID(cid).toBaseEncodedString('base58btc'));\n    } catch (err) {\n      return callback(err);\n    }\n    send({\n      path: 'dht/provide',\n      args: cids,\n      qs: opts\n    }, callback);\n  });\n};","map":{"version":3,"names":["promisify","require","CID","module","exports","send","cids","opts","callback","Array","isArray","map","cid","toBaseEncodedString","err","path","args","qs"],"sources":["C:/blockchain/Victus-health-assistant-main/Victus-health-assistant-main/node_modules/ipfs-http-client/src/dht/provide.js"],"sourcesContent":["'use strict'\n\nconst promisify = require('promisify-es6')\nconst CID = require('cids')\n\nmodule.exports = (send) => {\n  return promisify((cids, opts, callback) => {\n    if (typeof opts === 'function' && !callback) {\n      callback = opts\n      opts = {}\n    }\n\n    // opts is the real callback --\n    // 'callback' is being injected by promisify\n    if (typeof opts === 'function' && typeof callback === 'function') {\n      callback = opts\n      opts = {}\n    }\n\n    if (!Array.isArray(cids)) {\n      cids = [cids]\n    }\n\n    // Validate CID(s) and serialize\n    try {\n      cids = cids.map(cid => new CID(cid).toBaseEncodedString('base58btc'))\n    } catch (err) {\n      return callback(err)\n    }\n\n    send({\n      path: 'dht/provide',\n      args: cids,\n      qs: opts\n    }, callback)\n  })\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,SAAS,GAAGC,OAAO,CAAC,eAAe,CAAC;AAC1C,MAAMC,GAAG,GAAGD,OAAO,CAAC,MAAM,CAAC;AAE3BE,MAAM,CAACC,OAAO,GAAIC,IAAI,IAAK;EACzB,OAAOL,SAAS,CAAC,CAACM,IAAI,EAAEC,IAAI,EAAEC,QAAQ,KAAK;IACzC,IAAI,OAAOD,IAAI,KAAK,UAAU,IAAI,CAACC,QAAQ,EAAE;MAC3CA,QAAQ,GAAGD,IAAI;MACfA,IAAI,GAAG,CAAC,CAAC;IACX;;IAEA;IACA;IACA,IAAI,OAAOA,IAAI,KAAK,UAAU,IAAI,OAAOC,QAAQ,KAAK,UAAU,EAAE;MAChEA,QAAQ,GAAGD,IAAI;MACfA,IAAI,GAAG,CAAC,CAAC;IACX;IAEA,IAAI,CAACE,KAAK,CAACC,OAAO,CAACJ,IAAI,CAAC,EAAE;MACxBA,IAAI,GAAG,CAACA,IAAI,CAAC;IACf;;IAEA;IACA,IAAI;MACFA,IAAI,GAAGA,IAAI,CAACK,GAAG,CAACC,GAAG,IAAI,IAAIV,GAAG,CAACU,GAAG,CAAC,CAACC,mBAAmB,CAAC,WAAW,CAAC,CAAC;IACvE,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZ,OAAON,QAAQ,CAACM,GAAG,CAAC;IACtB;IAEAT,IAAI,CAAC;MACHU,IAAI,EAAE,aAAa;MACnBC,IAAI,EAAEV,IAAI;MACVW,EAAE,EAAEV;IACN,CAAC,EAAEC,QAAQ,CAAC;EACd,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"script"}