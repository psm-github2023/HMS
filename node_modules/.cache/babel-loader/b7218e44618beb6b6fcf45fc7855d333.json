{"ast":null,"code":"'use strict';\n\nvar varint = require('varint');\nvar svarint = require('signed-varint');\nconst {\n  Buffer\n} = require('buffer');\nvar encoder = function (type, encode, decode, encodingLength) {\n  encode.bytes = decode.bytes = 0;\n  return {\n    type: type,\n    encode: encode,\n    decode: decode,\n    encodingLength: encodingLength\n  };\n};\nexports.make = encoder;\nexports.bytes = function () {\n  var bufferLength = function (val) {\n    return Buffer.isBuffer(val) ? val.length : Buffer.byteLength(val);\n  };\n  var encodingLength = function (val) {\n    var len = bufferLength(val);\n    return varint.encodingLength(len) + len;\n  };\n  var encode = function (val, buffer, offset) {\n    var oldOffset = offset;\n    var len = bufferLength(val);\n    varint.encode(len, buffer, offset);\n    offset += varint.encode.bytes;\n    if (val instanceof Uint8Array) buffer.set(val, offset);else buffer.write(val, offset, len);\n    offset += len;\n    encode.bytes = offset - oldOffset;\n    return buffer;\n  };\n  var decode = function (buffer, offset) {\n    var oldOffset = offset;\n    var len = varint.decode(buffer, offset);\n    offset += varint.decode.bytes;\n    var val = buffer.slice(offset, offset + len);\n    offset += val.length;\n    decode.bytes = offset - oldOffset;\n    return val;\n  };\n  return encoder(2, encode, decode, encodingLength);\n}();\nexports.string = function () {\n  var encodingLength = function (val) {\n    var len = Buffer.byteLength(val);\n    return varint.encodingLength(len) + len;\n  };\n  var encode = function (val, buffer, offset) {\n    var oldOffset = offset;\n    var len = Buffer.byteLength(val);\n    varint.encode(len, buffer, offset, 'utf-8');\n    offset += varint.encode.bytes;\n    buffer.write(val, offset, len);\n    offset += len;\n    encode.bytes = offset - oldOffset;\n    return buffer;\n  };\n  var decode = function (buffer, offset) {\n    var oldOffset = offset;\n    var len = varint.decode(buffer, offset);\n    offset += varint.decode.bytes;\n    var val = buffer.toString('utf-8', offset, offset + len);\n    offset += len;\n    decode.bytes = offset - oldOffset;\n    return val;\n  };\n  return encoder(2, encode, decode, encodingLength);\n}();\nexports.bool = function () {\n  var encodingLength = function (val) {\n    return 1;\n  };\n  var encode = function (val, buffer, offset) {\n    buffer[offset] = val ? 1 : 0;\n    encode.bytes = 1;\n    return buffer;\n  };\n  var decode = function (buffer, offset) {\n    var bool = buffer[offset] > 0;\n    decode.bytes = 1;\n    return bool;\n  };\n  return encoder(0, encode, decode, encodingLength);\n}();\nexports.int32 = function () {\n  var decode = function (buffer, offset) {\n    var val = varint.decode(buffer, offset);\n    decode.bytes = varint.decode.bytes;\n    return val > 2147483647 ? val - 4294967296 : val;\n  };\n  var encode = function (val, buffer, offset) {\n    varint.encode(val < 0 ? val + 4294967296 : val, buffer, offset);\n    encode.bytes = varint.encode.bytes;\n    return buffer;\n  };\n  var encodingLength = function (val) {\n    return varint.encodingLength(val < 0 ? val + 4294967296 : val);\n  };\n  return encoder(0, encode, decode, encodingLength);\n}();\nexports.int64 = function () {\n  var decode = function (buffer, offset) {\n    var val = varint.decode(buffer, offset);\n    if (val >= Math.pow(2, 63)) {\n      var limit = 9;\n      while (buffer[offset + limit - 1] === 0xff) limit--;\n      limit = limit || 9;\n      var subset = Buffer.allocUnsafe(limit);\n      buffer.copy(subset, 0, offset, offset + limit);\n      subset[limit - 1] = subset[limit - 1] & 0x7f;\n      val = -1 * varint.decode(subset, 0);\n      decode.bytes = 10;\n    } else {\n      decode.bytes = varint.decode.bytes;\n    }\n    return val;\n  };\n  var encode = function (val, buffer, offset) {\n    if (val < 0) {\n      var last = offset + 9;\n      varint.encode(val * -1, buffer, offset);\n      offset += varint.encode.bytes - 1;\n      buffer[offset] = buffer[offset] | 0x80;\n      while (offset < last - 1) {\n        offset++;\n        buffer[offset] = 0xff;\n      }\n      buffer[last] = 0x01;\n      encode.bytes = 10;\n    } else {\n      varint.encode(val, buffer, offset);\n      encode.bytes = varint.encode.bytes;\n    }\n    return buffer;\n  };\n  var encodingLength = function (val) {\n    return val < 0 ? 10 : varint.encodingLength(val);\n  };\n  return encoder(0, encode, decode, encodingLength);\n}();\nexports.sint32 = exports.sint64 = function () {\n  return encoder(0, svarint.encode, svarint.decode, svarint.encodingLength);\n}();\nexports.uint32 = exports.uint64 = exports.enum = exports.varint = function () {\n  return encoder(0, varint.encode, varint.decode, varint.encodingLength);\n}();\n\n// we cannot represent these in javascript so we just use buffers\nexports.fixed64 = exports.sfixed64 = function () {\n  var encodingLength = function (val) {\n    return 8;\n  };\n  var encode = function (val, buffer, offset) {\n    buffer.set(val, offset);\n    encode.bytes = 8;\n    return buffer;\n  };\n  var decode = function (buffer, offset) {\n    var val = buffer.slice(offset, offset + 8);\n    decode.bytes = 8;\n    return val;\n  };\n  return encoder(1, encode, decode, encodingLength);\n}();\nexports.double = function () {\n  var encodingLength = function (val) {\n    return 8;\n  };\n  var encode = function (val, buffer, offset) {\n    buffer.writeDoubleLE(val, offset);\n    encode.bytes = 8;\n    return buffer;\n  };\n  var decode = function (buffer, offset) {\n    var val = buffer.readDoubleLE(offset);\n    decode.bytes = 8;\n    return val;\n  };\n  return encoder(1, encode, decode, encodingLength);\n}();\nexports.fixed32 = function () {\n  var encodingLength = function (val) {\n    return 4;\n  };\n  var encode = function (val, buffer, offset) {\n    buffer.writeUInt32LE(val, offset);\n    encode.bytes = 4;\n    return buffer;\n  };\n  var decode = function (buffer, offset) {\n    var val = buffer.readUInt32LE(offset);\n    decode.bytes = 4;\n    return val;\n  };\n  return encoder(5, encode, decode, encodingLength);\n}();\nexports.sfixed32 = function () {\n  var encodingLength = function (val) {\n    return 4;\n  };\n  var encode = function (val, buffer, offset) {\n    buffer.writeInt32LE(val, offset);\n    encode.bytes = 4;\n    return buffer;\n  };\n  var decode = function (buffer, offset) {\n    var val = buffer.readInt32LE(offset);\n    decode.bytes = 4;\n    return val;\n  };\n  return encoder(5, encode, decode, encodingLength);\n}();\nexports.float = function () {\n  var encodingLength = function (val) {\n    return 4;\n  };\n  var encode = function (val, buffer, offset) {\n    buffer.writeFloatLE(val, offset);\n    encode.bytes = 4;\n    return buffer;\n  };\n  var decode = function (buffer, offset) {\n    var val = buffer.readFloatLE(offset);\n    decode.bytes = 4;\n    return val;\n  };\n  return encoder(5, encode, decode, encodingLength);\n}();","map":{"version":3,"names":["varint","require","svarint","Buffer","encoder","type","encode","decode","encodingLength","bytes","exports","make","bufferLength","val","isBuffer","length","byteLength","len","buffer","offset","oldOffset","Uint8Array","set","write","slice","string","toString","bool","int32","int64","Math","pow","limit","subset","allocUnsafe","copy","last","sint32","sint64","uint32","uint64","enum","fixed64","sfixed64","double","writeDoubleLE","readDoubleLE","fixed32","writeUInt32LE","readUInt32LE","sfixed32","writeInt32LE","readInt32LE","float","writeFloatLE","readFloatLE"],"sources":["C:/blockchain/Victus-health-assistant-main/Victus-health-assistant-main/node_modules/protons/src/compile/encodings.js"],"sourcesContent":["'use strict'\n\nvar varint = require('varint')\nvar svarint = require('signed-varint')\nconst { Buffer } = require('buffer')\n\nvar encoder = function (type, encode, decode, encodingLength) {\n  encode.bytes = decode.bytes = 0\n\n  return {\n    type: type,\n    encode: encode,\n    decode: decode,\n    encodingLength: encodingLength\n  }\n}\n\nexports.make = encoder\n\nexports.bytes = (function () {\n  var bufferLength = function (val) {\n    return Buffer.isBuffer(val) ? val.length : Buffer.byteLength(val)\n  }\n\n  var encodingLength = function (val) {\n    var len = bufferLength(val)\n    return varint.encodingLength(len) + len\n  }\n\n  var encode = function (val, buffer, offset) {\n    var oldOffset = offset\n    var len = bufferLength(val)\n\n    varint.encode(len, buffer, offset)\n    offset += varint.encode.bytes\n\n    if (val instanceof Uint8Array) buffer.set(val, offset)\n    else buffer.write(val, offset, len)\n    offset += len\n\n    encode.bytes = offset - oldOffset\n    return buffer\n  }\n\n  var decode = function (buffer, offset) {\n    var oldOffset = offset\n\n    var len = varint.decode(buffer, offset)\n    offset += varint.decode.bytes\n\n    var val = buffer.slice(offset, offset + len)\n    offset += val.length\n\n    decode.bytes = offset - oldOffset\n    return val\n  }\n\n  return encoder(2, encode, decode, encodingLength)\n})()\n\nexports.string = (function () {\n  var encodingLength = function (val) {\n    var len = Buffer.byteLength(val)\n    return varint.encodingLength(len) + len\n  }\n\n  var encode = function (val, buffer, offset) {\n    var oldOffset = offset\n    var len = Buffer.byteLength(val)\n\n    varint.encode(len, buffer, offset, 'utf-8')\n    offset += varint.encode.bytes\n\n    buffer.write(val, offset, len)\n    offset += len\n\n    encode.bytes = offset - oldOffset\n    return buffer\n  }\n\n  var decode = function (buffer, offset) {\n    var oldOffset = offset\n\n    var len = varint.decode(buffer, offset)\n    offset += varint.decode.bytes\n\n    var val = buffer.toString('utf-8', offset, offset + len)\n    offset += len\n\n    decode.bytes = offset - oldOffset\n    return val\n  }\n\n  return encoder(2, encode, decode, encodingLength)\n})()\n\nexports.bool = (function () {\n  var encodingLength = function (val) {\n    return 1\n  }\n\n  var encode = function (val, buffer, offset) {\n    buffer[offset] = val ? 1 : 0\n    encode.bytes = 1\n    return buffer\n  }\n\n  var decode = function (buffer, offset) {\n    var bool = buffer[offset] > 0\n    decode.bytes = 1\n    return bool\n  }\n\n  return encoder(0, encode, decode, encodingLength)\n})()\n\nexports.int32 = (function () {\n  var decode = function (buffer, offset) {\n    var val = varint.decode(buffer, offset)\n    decode.bytes = varint.decode.bytes\n    return val > 2147483647 ? val - 4294967296 : val\n  }\n\n  var encode = function (val, buffer, offset) {\n    varint.encode(val < 0 ? val + 4294967296 : val, buffer, offset)\n    encode.bytes = varint.encode.bytes\n    return buffer\n  }\n\n  var encodingLength = function (val) {\n    return varint.encodingLength(val < 0 ? val + 4294967296 : val)\n  }\n\n  return encoder(0, encode, decode, encodingLength)\n})()\n\nexports.int64 = (function () {\n  var decode = function (buffer, offset) {\n    var val = varint.decode(buffer, offset)\n    if (val >= Math.pow(2, 63)) {\n      var limit = 9\n      while (buffer[offset + limit - 1] === 0xff) limit--\n      limit = limit || 9\n      var subset = Buffer.allocUnsafe(limit)\n      buffer.copy(subset, 0, offset, offset + limit)\n      subset[limit - 1] = subset[limit - 1] & 0x7f\n      val = -1 * varint.decode(subset, 0)\n      decode.bytes = 10\n    } else {\n      decode.bytes = varint.decode.bytes\n    }\n    return val\n  }\n\n  var encode = function (val, buffer, offset) {\n    if (val < 0) {\n      var last = offset + 9\n      varint.encode(val * -1, buffer, offset)\n      offset += varint.encode.bytes - 1\n      buffer[offset] = buffer[offset] | 0x80\n      while (offset < last - 1) {\n        offset++\n        buffer[offset] = 0xff\n      }\n      buffer[last] = 0x01\n      encode.bytes = 10\n    } else {\n      varint.encode(val, buffer, offset)\n      encode.bytes = varint.encode.bytes\n    }\n    return buffer\n  }\n\n  var encodingLength = function (val) {\n    return val < 0 ? 10 : varint.encodingLength(val)\n  }\n\n  return encoder(0, encode, decode, encodingLength)\n})()\n\nexports.sint32 =\nexports.sint64 = (function () {\n  return encoder(0, svarint.encode, svarint.decode, svarint.encodingLength)\n})()\n\nexports.uint32 =\nexports.uint64 =\nexports.enum =\nexports.varint = (function () {\n  return encoder(0, varint.encode, varint.decode, varint.encodingLength)\n})()\n\n// we cannot represent these in javascript so we just use buffers\nexports.fixed64 =\nexports.sfixed64 = (function () {\n  var encodingLength = function (val) {\n    return 8\n  }\n\n  var encode = function (val, buffer, offset) {\n    buffer.set(val, offset)\n    encode.bytes = 8\n    return buffer\n  }\n\n  var decode = function (buffer, offset) {\n    var val = buffer.slice(offset, offset + 8)\n    decode.bytes = 8\n    return val\n  }\n\n  return encoder(1, encode, decode, encodingLength)\n})()\n\nexports.double = (function () {\n  var encodingLength = function (val) {\n    return 8\n  }\n\n  var encode = function (val, buffer, offset) {\n    buffer.writeDoubleLE(val, offset)\n    encode.bytes = 8\n    return buffer\n  }\n\n  var decode = function (buffer, offset) {\n    var val = buffer.readDoubleLE(offset)\n    decode.bytes = 8\n    return val\n  }\n\n  return encoder(1, encode, decode, encodingLength)\n})()\n\nexports.fixed32 = (function () {\n  var encodingLength = function (val) {\n    return 4\n  }\n\n  var encode = function (val, buffer, offset) {\n    buffer.writeUInt32LE(val, offset)\n    encode.bytes = 4\n    return buffer\n  }\n\n  var decode = function (buffer, offset) {\n    var val = buffer.readUInt32LE(offset)\n    decode.bytes = 4\n    return val\n  }\n\n  return encoder(5, encode, decode, encodingLength)\n})()\n\nexports.sfixed32 = (function () {\n  var encodingLength = function (val) {\n    return 4\n  }\n\n  var encode = function (val, buffer, offset) {\n    buffer.writeInt32LE(val, offset)\n    encode.bytes = 4\n    return buffer\n  }\n\n  var decode = function (buffer, offset) {\n    var val = buffer.readInt32LE(offset)\n    decode.bytes = 4\n    return val\n  }\n\n  return encoder(5, encode, decode, encodingLength)\n})()\n\nexports.float = (function () {\n  var encodingLength = function (val) {\n    return 4\n  }\n\n  var encode = function (val, buffer, offset) {\n    buffer.writeFloatLE(val, offset)\n    encode.bytes = 4\n    return buffer\n  }\n\n  var decode = function (buffer, offset) {\n    var val = buffer.readFloatLE(offset)\n    decode.bytes = 4\n    return val\n  }\n\n  return encoder(5, encode, decode, encodingLength)\n})()\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}