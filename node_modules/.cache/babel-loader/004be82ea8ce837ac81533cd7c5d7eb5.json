{"ast":null,"code":"'use strict';\n\nexports.toCallback = doWork => {\n  return function (input, callback) {\n    let res;\n    try {\n      res = doWork(input);\n    } catch (err) {\n      process.nextTick(callback, err);\n      return;\n    }\n    process.nextTick(callback, null, res);\n  };\n};\nexports.toBuf = (doWork, other) => input => {\n  let result = doWork(input, other);\n  return Buffer.from(result, 'hex');\n};\nexports.fromString = (doWork, other) => _input => {\n  const input = Buffer.isBuffer(_input) ? _input.toString() : _input;\n  return doWork(input, other);\n};\nexports.fromNumberTo32BitBuf = (doWork, other) => input => {\n  let number = doWork(input, other);\n  const bytes = new Array(4);\n  for (let i = 0; i < 4; i++) {\n    bytes[i] = number & 0xff;\n    number = number >> 8;\n  }\n  return Buffer.from(bytes);\n};","map":{"version":3,"names":["exports","toCallback","doWork","input","callback","res","err","process","nextTick","toBuf","other","result","Buffer","from","fromString","_input","isBuffer","toString","fromNumberTo32BitBuf","number","bytes","Array","i"],"sources":["C:/blockchain/Victus-health-assistant-main/Victus-health-assistant-main/node_modules/libp2p-crypto-secp256k1/node_modules/multihashing-async/src/utils.js"],"sourcesContent":["'use strict'\n\nexports.toCallback = (doWork) => {\n  return function (input, callback) {\n    let res\n    try {\n      res = doWork(input)\n    } catch (err) {\n      process.nextTick(callback, err)\n      return\n    }\n\n    process.nextTick(callback, null, res)\n  }\n}\n\nexports.toBuf = (doWork, other) => (input) => {\n  let result = doWork(input, other)\n  return Buffer.from(result, 'hex')\n}\n\nexports.fromString = (doWork, other) => (_input) => {\n  const input = Buffer.isBuffer(_input) ? _input.toString() : _input\n  return doWork(input, other)\n}\n\nexports.fromNumberTo32BitBuf = (doWork, other) => (input) => {\n  let number = doWork(input, other)\n  const bytes = new Array(4)\n\n  for (let i = 0; i < 4; i++) {\n    bytes[i] = number & 0xff\n    number = number >> 8\n  }\n\n  return Buffer.from(bytes)\n}\n"],"mappings":"AAAA,YAAY;;AAEZA,OAAO,CAACC,UAAU,GAAIC,MAAM,IAAK;EAC/B,OAAO,UAAUC,KAAK,EAAEC,QAAQ,EAAE;IAChC,IAAIC,GAAG;IACP,IAAI;MACFA,GAAG,GAAGH,MAAM,CAACC,KAAK,CAAC;IACrB,CAAC,CAAC,OAAOG,GAAG,EAAE;MACZC,OAAO,CAACC,QAAQ,CAACJ,QAAQ,EAAEE,GAAG,CAAC;MAC/B;IACF;IAEAC,OAAO,CAACC,QAAQ,CAACJ,QAAQ,EAAE,IAAI,EAAEC,GAAG,CAAC;EACvC,CAAC;AACH,CAAC;AAEDL,OAAO,CAACS,KAAK,GAAG,CAACP,MAAM,EAAEQ,KAAK,KAAMP,KAAK,IAAK;EAC5C,IAAIQ,MAAM,GAAGT,MAAM,CAACC,KAAK,EAAEO,KAAK,CAAC;EACjC,OAAOE,MAAM,CAACC,IAAI,CAACF,MAAM,EAAE,KAAK,CAAC;AACnC,CAAC;AAEDX,OAAO,CAACc,UAAU,GAAG,CAACZ,MAAM,EAAEQ,KAAK,KAAMK,MAAM,IAAK;EAClD,MAAMZ,KAAK,GAAGS,MAAM,CAACI,QAAQ,CAACD,MAAM,CAAC,GAAGA,MAAM,CAACE,QAAQ,CAAC,CAAC,GAAGF,MAAM;EAClE,OAAOb,MAAM,CAACC,KAAK,EAAEO,KAAK,CAAC;AAC7B,CAAC;AAEDV,OAAO,CAACkB,oBAAoB,GAAG,CAAChB,MAAM,EAAEQ,KAAK,KAAMP,KAAK,IAAK;EAC3D,IAAIgB,MAAM,GAAGjB,MAAM,CAACC,KAAK,EAAEO,KAAK,CAAC;EACjC,MAAMU,KAAK,GAAG,IAAIC,KAAK,CAAC,CAAC,CAAC;EAE1B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;IAC1BF,KAAK,CAACE,CAAC,CAAC,GAAGH,MAAM,GAAG,IAAI;IACxBA,MAAM,GAAGA,MAAM,IAAI,CAAC;EACtB;EAEA,OAAOP,MAAM,CAACC,IAAI,CAACO,KAAK,CAAC;AAC3B,CAAC"},"metadata":{},"sourceType":"script"}